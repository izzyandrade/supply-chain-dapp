{
	"id": "1d726d6e03f3adb14e42d8f93cc92326",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SupplyChain.sol": {
				"content": "pragma solidity >=0.8.7;\n\nimport \"./BuyerRole.sol\";\nimport \"./RegulatorRole.sol\";\nimport \"./PharmaRole.sol\";\n\ncontract SupplyChain is BuyerRole, RegulatorRole, PharmaRole {\n    address owner;\n    // Define a variable called 'sku' for Stock Keeping Unit (SKU)\n    uint sku;\n\n    // Define a public mapping 'items' that maps the UPC to an Item.\n    mapping(uint => Item) items;\n\n    // Define a public mapping 'itemsHistory' that maps the UPC to an array of TxHash,\n    // that track its journey through the supply chain -- to be sent from DApp.\n    mapping(uint => string[]) itemsHistory;\n\n    // Define enum 'State' with the following values:\n    enum State {\n        Produced, // 0\n        Tested, // 1\n        SentToVerification, // 2\n        Approved, // 3\n        SentToMarket, // 4\n        Bought, // 5\n        Available // 6\n    }\n\n    State constant defaultState = State.Produced;\n\n    // Define a struct 'Item' with the following fields:\n    struct Item {\n        uint sku;\n        uint upc;\n        address ownerID;\n        address originPharmaID;\n        string originPharmaName;\n        string originPharmaInformation;\n        string originPharmaCountry;\n        string productName;\n        uint productPrice;\n        State itemState;\n        address regulatorId;\n        address buyerId;\n    }\n\n    event Produced(uint upc);\n    event Tested(uint upc);\n    event SentToVerification(uint upc);\n    event Approved(uint upc);\n    event SentToMarket(uint upc);\n    event Bought(uint upc);\n    event Available(uint upc);\n\n    // Define a modifer that checks to see if msg.sender == owner of the contract\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    // Define a modifer that verifies the Caller\n    modifier verifyCaller(address _address) {\n        require(msg.sender == _address);\n        _;\n    }\n\n    modifier onlyOwnerOfMedicine(uint _upc) {\n        require(msg.sender == items[_upc].ownerID);\n        _;\n    }\n\n    // Define a modifier that checks if the paid amount is sufficient to cover the price\n    modifier paidEnough(uint _price) {\n        require(msg.value >= _price);\n        _;\n    }\n\n    // Define a modifier that checks the price and refunds the remaining balance\n    // modifier checkValue(uint _upc) {\n    //     _;\n    //     uint _price = items[_upc].productPrice;\n    //     uint amountToReturn = msg.value - _price;\n    //     items[_upc].buyerID.transfer(amountToReturn);\n    // }\n\n    modifier produced(uint _upc) {\n        require(items[_upc].itemState == State.Produced);\n        _;\n    }\n\n    modifier tested(uint _upc) {\n        require(items[_upc].itemState == State.Tested);\n        _;\n    }\n\n    modifier sentToVerification(uint _upc) {\n        require(items[_upc].itemState == State.SentToVerification);\n        _;\n    }\n\n    modifier approved(uint _upc) {\n        require(items[_upc].itemState == State.Approved);\n        _;\n    }\n\n    modifier sentToMarket(uint _upc) {\n        require(items[_upc].itemState == State.SentToMarket);\n        _;\n    }\n\n    modifier bought(uint _upc) {\n        require(items[_upc].itemState == State.Bought);\n        _;\n    }\n\n    modifier available(uint _upc) {\n        require(items[_upc].itemState == State.Available);\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        sku = 1;\n    }\n\n    // Define a function 'kill' if required\n    function kill() public {\n        if (msg.sender == owner) {\n            selfdestruct(payable(owner));\n        }\n    }\n\n    // Define a function 'produceMedicine' that allows a pharma to produce a new item in market\n    function produceMedicine(\n        uint _upc,\n        address _originPharmaID,\n        string memory _originPharmaName,\n        string memory _originPharmaInformation,\n        string memory _originPharmaCountry,\n        string memory _productName\n    ) public onlyPharma {\n        items[_upc] = Item({\n            sku: sku,\n            upc: _upc,\n            ownerID: msg.sender,\n            originPharmaID: _originPharmaID,\n            originPharmaName: _originPharmaName,\n            originPharmaInformation: _originPharmaInformation,\n            originPharmaCountry: _originPharmaCountry,\n            productName: _productName,\n            productPrice: 0,\n            itemState: State.Produced,\n            regulatorId: address(0),\n            buyerId: address(0)\n        });\n        sku = sku + 1;\n        emit Produced(_upc);\n    }\n\n    // Define a function 'testMedicine' that allows a Pharma to mark an item 'Tested'\n    function testMedicine(uint _upc)\n        public\n        produced(_upc)\n        onlyOwnerOfMedicine(_upc)\n    {\n        items[_upc].itemState = State.Tested;\n        emit Tested(_upc);\n    }\n\n    // Define a function 'sendToRegulation' that allows a pharma to mark an item 'SentToRegulation' and change its ownership to a regulator\n    function sendToRegulation(uint _upc, address _regulatorId)\n        public\n        tested(_upc)\n        onlyPharma\n        onlyOwnerOfMedicine(_upc)\n    {\n        require(isRegulator(_regulatorId), \"This address is not a Regulator\");\n        items[_upc].regulatorId = _regulatorId;\n        items[_upc].itemState = State.SentToVerification;\n        items[_upc].ownerID = _regulatorId;\n        emit SentToVerification(_upc);\n    }\n}\n"
			},
			"contracts/PharmaRole.sol": {
				"content": "pragma solidity >=0.8.7;\n\nimport \"./Roles.sol\";\n\ncontract PharmaRole {\n    using Roles for Roles.Role;\n\n    event PharmaAdded(address indexed account);\n    event PharmaRemoved(address indexed account);\n\n    Roles.Role private pharmas;\n\n    constructor() public {\n        _addPharma(msg.sender);\n    }\n\n    // Define a modifier that checks to see if msg.sender has the appropriate role\n    modifier onlyPharma() {\n        require(isPharma(msg.sender));\n        _;\n    }\n\n    // Define a function 'isPharma' to check this role\n    function isPharma(address account) public view returns (bool) {\n        return pharmas.has(account);\n    }\n\n    // Define a function 'addPharma' that adds this role\n    function addPharma(address account) public onlyPharma {\n        _addPharma(account);\n    }\n\n    // Define a function 'renouncePharma' to renounce this role\n    function renouncePharma() public {\n        _removePharma(msg.sender);\n    }\n\n    // Define an internal function '_addPharma' to add this role, called by 'addPharma'\n    function _addPharma(address account) internal {\n        pharmas.add(account);\n        emit PharmaAdded(account);\n    }\n\n    // Define an internal function '_removePharma' to remove this role, called by 'removePharma'\n    function _removePharma(address account) internal {\n        pharmas.remove(account);\n        emit PharmaRemoved(account);\n    }\n}\n"
			},
			"contracts/RegulatorRole.sol": {
				"content": "pragma solidity >=0.8.7;\n\nimport \"./Roles.sol\";\n\ncontract RegulatorRole {\n    using Roles for Roles.Role;\n\n    event RegulatorAdded(address indexed account);\n    event RegulatorRemoved(address indexed account);\n\n    Roles.Role private regulators;\n\n    constructor() public {\n        _addRegulator(msg.sender);\n    }\n\n    // Define a modifier that checks to see if msg.sender has the appropriate role\n    modifier onlyRegulator() {\n        require(isRegulator(msg.sender));\n        _;\n    }\n\n    // Define a function 'isRegulator' to check this role\n    function isRegulator(address account) public view returns (bool) {\n        return regulators.has(account);\n    }\n\n    // Define a function 'addRegulator' that adds this role\n    function addRegulator(address account) public onlyRegulator {\n        _addRegulator(account);\n    }\n\n    // Define a function 'renounceRegulator' to renounce this role\n    function renounceRegulator() public {\n        _removeRegulator(msg.sender);\n    }\n\n    // Define an internal function '_addRegulator' to add this role, called by 'addRegulator'\n    function _addRegulator(address account) internal {\n        regulators.add(account);\n        emit RegulatorAdded(account);\n    }\n\n    // Define an internal function '_removeRegulator' to remove this role, called by 'removeRegulator'\n    function _removeRegulator(address account) internal {\n        regulators.remove(account);\n        emit RegulatorRemoved(account);\n    }\n}\n"
			},
			"contracts/BuyerRole.sol": {
				"content": "pragma solidity >=0.8.7;\n\nimport \"./Roles.sol\";\n\ncontract BuyerRole {\n    using Roles for Roles.Role;\n\n    event BuyerAdded(address indexed account);\n    event BuyerRemoved(address indexed account);\n\n    Roles.Role private buyers;\n\n    constructor() public {\n        _addBuyer(msg.sender);\n    }\n\n    // Define a modifier that checks to see if msg.sender has the appropriate role\n    modifier onlyBuyer() {\n        require(isBuyer(msg.sender));\n        _;\n    }\n\n    // Define a function 'isBuyer' to check this role\n    function isBuyer(address account) public view returns (bool) {\n        return buyers.has(account);\n    }\n\n    // Define a function 'addBuyer' that adds this role\n    function addBuyer(address account) public onlyBuyer {\n        _addBuyer(account);\n    }\n\n    // Define a function 'renounceBuyer' to renounce this role\n    function renounceBuyer() public {\n        _removeBuyer(msg.sender);\n    }\n\n    // Define an internal function '_addBuyer' to add this role, called by 'addBuyer'\n    function _addBuyer(address account) internal {\n        buyers.add(account);\n        emit BuyerAdded(account);\n    }\n\n    // Define an internal function '_removeBuyer' to remove this role, called by 'removeBuyer'\n    function _removeBuyer(address account) internal {\n        buyers.remove(account);\n        emit BuyerRemoved(account);\n    }\n}\n"
			},
			"contracts/Roles.sol": {
				"content": "pragma solidity >=0.8.7;\n\n/**\n * @title Roles\n * @dev Library for managing addresses assigned to a Role.\n */\nlibrary Roles {\n    struct Role {\n        mapping(address => bool) bearer;\n    }\n\n    /**\n     * @dev give an account access to this role\n     */\n    function add(Role storage role, address account) internal {\n        require(account != address(0));\n        require(!has(role, account));\n\n        role.bearer[account] = true;\n    }\n\n    /**\n     * @dev remove an account's access to this role\n     */\n    function remove(Role storage role, address account) internal {\n        require(account != address(0));\n        require(has(role, account));\n\n        role.bearer[account] = false;\n    }\n\n    /**\n     * @dev check if an account has this role\n     * @return bool\n     */\n    function has(Role storage role, address account)\n        internal\n        view\n        returns (bool)\n    {\n        require(account != address(0));\n        return role.bearer[account];\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BuyerRole.sol": {
				"BuyerRole": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "BuyerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "BuyerRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addBuyer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBuyer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceBuyer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BuyerRole.sol\":49:1349  contract BuyerRole {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BuyerRole.sol\":236:295  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/BuyerRole.sol\":267:288  _addBuyer(msg.sender) */\n  tag_4\n    /* \"contracts/BuyerRole.sol\":277:287  msg.sender */\n  caller\n    /* \"contracts/BuyerRole.sol\":267:276  _addBuyer */\n  shl(0x20, tag_5)\n    /* \"contracts/BuyerRole.sol\":267:288  _addBuyer(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/BuyerRole.sol\":49:1349  contract BuyerRole {... */\n  jump(tag_6)\n    /* \"contracts/BuyerRole.sol\":1008:1123  function _addBuyer(address account) internal {... */\ntag_5:\n    /* \"contracts/BuyerRole.sol\":1063:1082  buyers.add(account) */\n  tag_8\n    /* \"contracts/BuyerRole.sol\":1074:1081  account */\n  dup2\n    /* \"contracts/BuyerRole.sol\":1063:1069  buyers */\n  0x00\n    /* \"contracts/BuyerRole.sol\":1063:1073  buyers.add */\n  or(tag_0_17, shl(0x20, tag_9))\n  swap1\n    /* \"contracts/BuyerRole.sol\":1063:1082  buyers.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/BuyerRole.sol\":1108:1115  account */\n  dup1\n    /* \"contracts/BuyerRole.sol\":1097:1116  BuyerAdded(account) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/BuyerRole.sol\":1008:1123  function _addBuyer(address account) internal {... */\n  pop\n  jump\t// out\n    /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\ntag_9:\n    /* \"contracts/Roles.sol\":354:355  0 */\n  0x00\n    /* \"contracts/Roles.sol\":335:356  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Roles.sol\":335:342  account */\n  dup2\n    /* \"contracts/Roles.sol\":335:356  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Roles.sol\":327:357  require(account != address(0)) */\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n    /* \"contracts/Roles.sol\":376:394  has(role, account) */\n  tag_12\n    /* \"contracts/Roles.sol\":380:384  role */\n  dup3\n    /* \"contracts/Roles.sol\":386:393  account */\n  dup3\n    /* \"contracts/Roles.sol\":376:379  has */\n  shl(0x20, tag_13)\n    /* \"contracts/Roles.sol\":376:394  has(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Roles.sol\":375:394  !has(role, account) */\n  iszero\n    /* \"contracts/Roles.sol\":367:395  require(!has(role, account)) */\n  tag_14\n  jumpi\n  0x00\n  dup1\n  revert\ntag_14:\n    /* \"contracts/Roles.sol\":429:433  true */\n  0x01\n    /* \"contracts/Roles.sol\":406:410  role */\n  dup3\n    /* \"contracts/Roles.sol\":406:417  role.bearer */\n  0x00\n  add\n    /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n  0x00\n    /* \"contracts/Roles.sol\":418:425  account */\n  dup4\n    /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/Roles.sol\":406:433  role.bearer[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\ntag_13:\n    /* \"contracts/Roles.sol\":882:886  bool */\n  0x00\n    /* \"contracts/Roles.sol\":929:930  0 */\n  dup1\n    /* \"contracts/Roles.sol\":910:931  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Roles.sol\":910:917  account */\n  dup3\n    /* \"contracts/Roles.sol\":910:931  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Roles.sol\":902:932  require(account != address(0)) */\n  tag_16\n  jumpi\n  0x00\n  dup1\n  revert\ntag_16:\n    /* \"contracts/Roles.sol\":949:953  role */\n  dup3\n    /* \"contracts/Roles.sol\":949:960  role.bearer */\n  0x00\n  add\n    /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n  0x00\n    /* \"contracts/Roles.sol\":961:968  account */\n  dup4\n    /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/Roles.sol\":942:969  return role.bearer[account] */\n  swap1\n  pop\n    /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/BuyerRole.sol\":49:1349  contract BuyerRole {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BuyerRole.sol\":49:1349  contract BuyerRole {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2a55feec\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbbf89803\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc204a0cf\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BuyerRole.sol\":521:625  function isBuyer(address account) public view returns (bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyerRole.sol\":687:774  function addBuyer(address account) public onlyBuyer {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/BuyerRole.sol\":843:916  function renounceBuyer() public {... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/BuyerRole.sol\":521:625  function isBuyer(address account) public view returns (bool) {... */\n    tag_9:\n        /* \"contracts/BuyerRole.sol\":576:580  bool */\n      0x00\n        /* \"contracts/BuyerRole.sol\":599:618  buyers.has(account) */\n      tag_19\n        /* \"contracts/BuyerRole.sol\":610:617  account */\n      dup3\n        /* \"contracts/BuyerRole.sol\":599:605  buyers */\n      0x00\n        /* \"contracts/BuyerRole.sol\":599:609  buyers.has */\n      tag_20\n      swap1\n        /* \"contracts/BuyerRole.sol\":599:618  buyers.has(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_19:\n        /* \"contracts/BuyerRole.sol\":592:618  return buyers.has(account) */\n      swap1\n      pop\n        /* \"contracts/BuyerRole.sol\":521:625  function isBuyer(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BuyerRole.sol\":687:774  function addBuyer(address account) public onlyBuyer {... */\n    tag_14:\n        /* \"contracts/BuyerRole.sol\":423:442  isBuyer(msg.sender) */\n      tag_22\n        /* \"contracts/BuyerRole.sol\":431:441  msg.sender */\n      caller\n        /* \"contracts/BuyerRole.sol\":423:430  isBuyer */\n      tag_9\n        /* \"contracts/BuyerRole.sol\":423:442  isBuyer(msg.sender) */\n      jump\t// in\n    tag_22:\n        /* \"contracts/BuyerRole.sol\":415:443  require(isBuyer(msg.sender)) */\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/BuyerRole.sol\":749:767  _addBuyer(account) */\n      tag_25\n        /* \"contracts/BuyerRole.sol\":759:766  account */\n      dup2\n        /* \"contracts/BuyerRole.sol\":749:758  _addBuyer */\n      tag_26\n        /* \"contracts/BuyerRole.sol\":749:767  _addBuyer(account) */\n      jump\t// in\n    tag_25:\n        /* \"contracts/BuyerRole.sol\":687:774  function addBuyer(address account) public onlyBuyer {... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyerRole.sol\":843:916  function renounceBuyer() public {... */\n    tag_16:\n        /* \"contracts/BuyerRole.sol\":885:909  _removeBuyer(msg.sender) */\n      tag_28\n        /* \"contracts/BuyerRole.sol\":898:908  msg.sender */\n      caller\n        /* \"contracts/BuyerRole.sol\":885:897  _removeBuyer */\n      tag_29\n        /* \"contracts/BuyerRole.sol\":885:909  _removeBuyer(msg.sender) */\n      jump\t// in\n    tag_28:\n        /* \"contracts/BuyerRole.sol\":843:916  function renounceBuyer() public {... */\n      jump\t// out\n        /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n    tag_17:\n        /* \"contracts/Roles.sol\":354:355  0 */\n      0x00\n        /* \"contracts/Roles.sol\":335:356  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":335:342  account */\n      dup2\n        /* \"contracts/Roles.sol\":335:356  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":327:357  require(account != address(0)) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"contracts/Roles.sol\":376:394  has(role, account) */\n      tag_32\n        /* \"contracts/Roles.sol\":380:384  role */\n      dup3\n        /* \"contracts/Roles.sol\":386:393  account */\n      dup3\n        /* \"contracts/Roles.sol\":376:379  has */\n      tag_20\n        /* \"contracts/Roles.sol\":376:394  has(role, account) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/Roles.sol\":375:394  !has(role, account) */\n      iszero\n        /* \"contracts/Roles.sol\":367:395  require(!has(role, account)) */\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n        /* \"contracts/Roles.sol\":429:433  true */\n      0x01\n        /* \"contracts/Roles.sol\":406:410  role */\n      dup3\n        /* \"contracts/Roles.sol\":406:417  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":418:425  account */\n      dup4\n        /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Roles.sol\":406:433  role.bearer[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\n    tag_20:\n        /* \"contracts/Roles.sol\":882:886  bool */\n      0x00\n        /* \"contracts/Roles.sol\":929:930  0 */\n      dup1\n        /* \"contracts/Roles.sol\":910:931  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":910:917  account */\n      dup3\n        /* \"contracts/Roles.sol\":910:931  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":902:932  require(account != address(0)) */\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n        /* \"contracts/Roles.sol\":949:953  role */\n      dup3\n        /* \"contracts/Roles.sol\":949:960  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":961:968  account */\n      dup4\n        /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Roles.sol\":942:969  return role.bearer[account] */\n      swap1\n      pop\n        /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BuyerRole.sol\":1008:1123  function _addBuyer(address account) internal {... */\n    tag_26:\n        /* \"contracts/BuyerRole.sol\":1063:1082  buyers.add(account) */\n      tag_37\n        /* \"contracts/BuyerRole.sol\":1074:1081  account */\n      dup2\n        /* \"contracts/BuyerRole.sol\":1063:1069  buyers */\n      0x00\n        /* \"contracts/BuyerRole.sol\":1063:1073  buyers.add */\n      tag_17\n      swap1\n        /* \"contracts/BuyerRole.sol\":1063:1082  buyers.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_37:\n        /* \"contracts/BuyerRole.sol\":1108:1115  account */\n      dup1\n        /* \"contracts/BuyerRole.sol\":1097:1116  BuyerAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/BuyerRole.sol\":1008:1123  function _addBuyer(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyerRole.sol\":1224:1347  function _removeBuyer(address account) internal {... */\n    tag_29:\n        /* \"contracts/BuyerRole.sol\":1282:1304  buyers.remove(account) */\n      tag_39\n        /* \"contracts/BuyerRole.sol\":1296:1303  account */\n      dup2\n        /* \"contracts/BuyerRole.sol\":1282:1288  buyers */\n      0x00\n        /* \"contracts/BuyerRole.sol\":1282:1295  buyers.remove */\n      tag_40\n      swap1\n        /* \"contracts/BuyerRole.sol\":1282:1304  buyers.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_39:\n        /* \"contracts/BuyerRole.sol\":1332:1339  account */\n      dup1\n        /* \"contracts/BuyerRole.sol\":1319:1340  BuyerRemoved(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x83fd4cbc7bc934bdfbae994ac6e72fcc0e50abd6995c1949520e761ba650d582\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/BuyerRole.sol\":1224:1347  function _removeBuyer(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n    tag_40:\n        /* \"contracts/Roles.sol\":612:613  0 */\n      0x00\n        /* \"contracts/Roles.sol\":593:614  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":593:600  account */\n      dup2\n        /* \"contracts/Roles.sol\":593:614  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":585:615  require(account != address(0)) */\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n        /* \"contracts/Roles.sol\":633:651  has(role, account) */\n      tag_43\n        /* \"contracts/Roles.sol\":637:641  role */\n      dup3\n        /* \"contracts/Roles.sol\":643:650  account */\n      dup3\n        /* \"contracts/Roles.sol\":633:636  has */\n      tag_20\n        /* \"contracts/Roles.sol\":633:651  has(role, account) */\n      jump\t// in\n    tag_43:\n        /* \"contracts/Roles.sol\":625:652  require(has(role, account)) */\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n        /* \"contracts/Roles.sol\":686:691  false */\n      0x00\n        /* \"contracts/Roles.sol\":663:667  role */\n      dup3\n        /* \"contracts/Roles.sol\":663:674  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":663:683  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":675:682  account */\n      dup4\n        /* \"contracts/Roles.sol\":663:683  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Roles.sol\":663:691  role.bearer[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_46:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_48\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_8:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":228:347   */\n    tag_51:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_54\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_46\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:596   */\n    tag_55:\n        /* \"#utility.yul\":568:589   */\n      tag_57\n        /* \"#utility.yul\":583:588   */\n      dup2\n        /* \"#utility.yul\":568:589   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":563:566   */\n      dup3\n        /* \"#utility.yul\":556:590   */\n      mstore\n        /* \"#utility.yul\":487:596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":602:812   */\n    tag_11:\n        /* \"#utility.yul\":689:693   */\n      0x00\n        /* \"#utility.yul\":727:729   */\n      0x20\n        /* \"#utility.yul\":716:725   */\n      dup3\n        /* \"#utility.yul\":712:730   */\n      add\n        /* \"#utility.yul\":704:730   */\n      swap1\n      pop\n        /* \"#utility.yul\":740:805   */\n      tag_60\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":791:800   */\n      dup4\n        /* \"#utility.yul\":787:804   */\n      add\n        /* \"#utility.yul\":778:784   */\n      dup5\n        /* \"#utility.yul\":740:805   */\n      tag_55\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":602:812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":899:995   */\n    tag_63:\n        /* \"#utility.yul\":936:943   */\n      0x00\n        /* \"#utility.yul\":965:989   */\n      tag_65\n        /* \"#utility.yul\":983:988   */\n      dup3\n        /* \"#utility.yul\":965:989   */\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":954:989   */\n      swap1\n      pop\n        /* \"#utility.yul\":899:995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1001:1091   */\n    tag_58:\n        /* \"#utility.yul\":1035:1042   */\n      0x00\n        /* \"#utility.yul\":1078:1083   */\n      dup2\n        /* \"#utility.yul\":1071:1084   */\n      iszero\n        /* \"#utility.yul\":1064:1085   */\n      iszero\n        /* \"#utility.yul\":1053:1085   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1097:1223   */\n    tag_66:\n        /* \"#utility.yul\":1134:1141   */\n      0x00\n        /* \"#utility.yul\":1174:1216   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1167:1172   */\n      dup3\n        /* \"#utility.yul\":1163:1217   */\n      and\n        /* \"#utility.yul\":1152:1217   */\n      swap1\n      pop\n        /* \"#utility.yul\":1097:1223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1352:1469   */\n    tag_53:\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1458:1459   */\n      dup1\n        /* \"#utility.yul\":1451:1463   */\n      revert\n        /* \"#utility.yul\":1475:1597   */\n    tag_49:\n        /* \"#utility.yul\":1548:1572   */\n      tag_73\n        /* \"#utility.yul\":1566:1571   */\n      dup2\n        /* \"#utility.yul\":1548:1572   */\n      tag_63\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1541:1546   */\n      dup2\n        /* \"#utility.yul\":1538:1573   */\n      eq\n        /* \"#utility.yul\":1528:1591   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1584:1585   */\n      dup1\n        /* \"#utility.yul\":1577:1589   */\n      revert\n        /* \"#utility.yul\":1528:1591   */\n    tag_74:\n        /* \"#utility.yul\":1475:1597   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122092e1951302776afd2f9dbadc2f8bf0f6301d951afcb35f0d59627284f7c8c3bc64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addBuyer_87": {
									"entryPoint": 37,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_357": {
									"entryPoint": 131,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_417": {
									"entryPoint": 309,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506100203361002560201b60201c565b6101c7565b61003d81600061008360201b6100e21790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100bd57600080fd5b6100cd828261013560201b60201c565b156100d757600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561017057600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61047b806101d66000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632a55feec14610046578063bbf8980314610076578063c204a0cf14610092575b600080fd5b610060600480360381019061005b9190610394565b61009c565b60405161006d91906103d0565b60405180910390f35b610090600480360381019061008b9190610394565b6100b9565b005b61009a6100d7565b005b60006100b282600061018e90919063ffffffff16565b9050919050565b6100c23361009c565b6100cb57600080fd5b6100d481610220565b50565b6100e03361027a565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561011c57600080fd5b610126828261018e565b1561013057600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101c957600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6102348160006100e290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a60405160405180910390a250565b61028e8160006102d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f83fd4cbc7bc934bdfbae994ac6e72fcc0e50abd6995c1949520e761ba650d58260405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561030e57600080fd5b610318828261018e565b61032157600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008135905061038e8161042e565b92915050565b6000602082840312156103aa576103a9610429565b5b60006103b88482850161037f565b91505092915050565b6103ca816103fd565b82525050565b60006020820190506103e560008301846103c1565b92915050565b60006103f682610409565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610437816103eb565b811461044257600080fd5b5056fea264697066735822122092e1951302776afd2f9dbadc2f8bf0f6301d951afcb35f0d59627284f7c8c3bc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20 CALLER PUSH2 0x25 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x3D DUP2 PUSH1 0x0 PUSH2 0x83 PUSH1 0x20 SHL PUSH2 0xE2 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6599D9DD7F97CCDC3D99AB507544F9F6EBFCA20C63A7E3C018DA49EEAEFB164A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD DUP3 DUP3 PUSH2 0x135 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47B DUP1 PUSH2 0x1D6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A55FEEC EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBBF89803 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xC204A0CF EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xB2 DUP3 PUSH1 0x0 PUSH2 0x18E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2 CALLER PUSH2 0x9C JUMP JUMPDEST PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 DUP2 PUSH2 0x220 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE0 CALLER PUSH2 0x27A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x126 DUP3 DUP3 PUSH2 0x18E JUMP JUMPDEST ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x234 DUP2 PUSH1 0x0 PUSH2 0xE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6599D9DD7F97CCDC3D99AB507544F9F6EBFCA20C63A7E3C018DA49EEAEFB164A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x28E DUP2 PUSH1 0x0 PUSH2 0x2D4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x83FD4CBC7BC934BDFBAE994AC6E72FCC0E50ABD6995C1949520E761BA650D582 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x318 DUP3 DUP3 PUSH2 0x18E JUMP JUMPDEST PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38E DUP2 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0x429 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B8 DUP5 DUP3 DUP6 ADD PUSH2 0x37F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CA DUP2 PUSH2 0x3FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F6 DUP3 PUSH2 0x409 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x3EB JUMP JUMPDEST DUP2 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xE1 SWAP6 SGT MUL PUSH24 0x6AFD2F9DBADC2F8BF0F6301D951AFCB35F0D59627284F7C8 0xC3 0xBC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "49:1300:0:-:0;;;236:59;;;;;;;;;;267:21;277:10;267:9;;;:21;;:::i;:::-;49:1300;;1008:115;1063:19;1074:7;1063:6;:10;;;;;;:19;;;;:::i;:::-;1108:7;1097:19;;;;;;;;;;;;1008:115;:::o;259:181:3:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;786:190::-;882:4;929:1;910:21;;:7;:21;;;;902:30;;;;;;949:4;:11;;:20;961:7;949:20;;;;;;;;;;;;;;;;;;;;;;;;;942:27;;786:190;;;;:::o;49:1300:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addBuyer_87": {
									"entryPoint": 544,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeBuyer_103": {
									"entryPoint": 634,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addBuyer_62": {
									"entryPoint": 185,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_357": {
									"entryPoint": 226,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_417": {
									"entryPoint": 398,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isBuyer_50": {
									"entryPoint": 156,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@remove_391": {
									"entryPoint": 724,
									"id": 391,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceBuyer_71": {
									"entryPoint": 215,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1600:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:5"
															},
															"nodeType": "YulIf",
															"src": "228:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:5",
														"type": ""
													}
												],
												"src": "152:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "563:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "583:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "568:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "568:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "534:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "541:3:5",
														"type": ""
													}
												],
												"src": "487:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "694:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "704:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "716:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "727:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "712:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "704:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "778:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "791:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "802:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "787:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "787:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "740:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "740:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "740:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "666:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "678:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "689:4:5",
														"type": ""
													}
												],
												"src": "602:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "858:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "868:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "884:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "851:6:5",
														"type": ""
													}
												],
												"src": "818:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "944:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "954:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "983:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "965:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "954:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "926:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "936:7:5",
														"type": ""
													}
												],
												"src": "899:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1043:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1053:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1078:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1071:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1071:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1053:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1025:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1035:7:5",
														"type": ""
													}
												],
												"src": "1001:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1142:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1152:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1167:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1174:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1163:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1152:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1124:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1134:7:5",
														"type": ""
													}
												],
												"src": "1097:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1318:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1335:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1328:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1328:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1229:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1441:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1458:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1461:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1451:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1352:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1518:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1575:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1584:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1587:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1577:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1577:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1577:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1541:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1566:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1548:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1548:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1538:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1538:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:43:5"
															},
															"nodeType": "YulIf",
															"src": "1528:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1511:5:5",
														"type": ""
													}
												],
												"src": "1475:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80632a55feec14610046578063bbf8980314610076578063c204a0cf14610092575b600080fd5b610060600480360381019061005b9190610394565b61009c565b60405161006d91906103d0565b60405180910390f35b610090600480360381019061008b9190610394565b6100b9565b005b61009a6100d7565b005b60006100b282600061018e90919063ffffffff16565b9050919050565b6100c23361009c565b6100cb57600080fd5b6100d481610220565b50565b6100e03361027a565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561011c57600080fd5b610126828261018e565b1561013057600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101c957600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6102348160006100e290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a60405160405180910390a250565b61028e8160006102d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f83fd4cbc7bc934bdfbae994ac6e72fcc0e50abd6995c1949520e761ba650d58260405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561030e57600080fd5b610318828261018e565b61032157600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008135905061038e8161042e565b92915050565b6000602082840312156103aa576103a9610429565b5b60006103b88482850161037f565b91505092915050565b6103ca816103fd565b82525050565b60006020820190506103e560008301846103c1565b92915050565b60006103f682610409565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610437816103eb565b811461044257600080fd5b5056fea264697066735822122092e1951302776afd2f9dbadc2f8bf0f6301d951afcb35f0d59627284f7c8c3bc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A55FEEC EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBBF89803 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xC204A0CF EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xB2 DUP3 PUSH1 0x0 PUSH2 0x18E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2 CALLER PUSH2 0x9C JUMP JUMPDEST PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 DUP2 PUSH2 0x220 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE0 CALLER PUSH2 0x27A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x126 DUP3 DUP3 PUSH2 0x18E JUMP JUMPDEST ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x234 DUP2 PUSH1 0x0 PUSH2 0xE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6599D9DD7F97CCDC3D99AB507544F9F6EBFCA20C63A7E3C018DA49EEAEFB164A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x28E DUP2 PUSH1 0x0 PUSH2 0x2D4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x83FD4CBC7BC934BDFBAE994AC6E72FCC0E50ABD6995C1949520E761BA650D582 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x318 DUP3 DUP3 PUSH2 0x18E JUMP JUMPDEST PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38E DUP2 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0x429 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B8 DUP5 DUP3 DUP6 ADD PUSH2 0x37F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CA DUP2 PUSH2 0x3FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F6 DUP3 PUSH2 0x409 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x3EB JUMP JUMPDEST DUP2 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xE1 SWAP6 SGT MUL PUSH24 0x6AFD2F9DBADC2F8BF0F6301D951AFCB35F0D59627284F7C8 0xC3 0xBC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "49:1300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;521:104;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;687:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;843:73;;;:::i;:::-;;521:104;576:4;599:19;610:7;599:6;:10;;:19;;;;:::i;:::-;592:26;;521:104;;;:::o;687:87::-;423:19;431:10;423:7;:19::i;:::-;415:28;;;;;;749:18:::1;759:7;749:9;:18::i;:::-;687:87:::0;:::o;843:73::-;885:24;898:10;885:12;:24::i;:::-;843:73::o;259:181:3:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;786:190::-;882:4;929:1;910:21;;:7;:21;;;;902:30;;;;;;949:4;:11;;:20;961:7;949:20;;;;;;;;;;;;;;;;;;;;;;;;;942:27;;786:190;;;;:::o;1008:115:0:-;1063:19;1074:7;1063:6;:10;;:19;;;;:::i;:::-;1108:7;1097:19;;;;;;;;;;;;1008:115;:::o;1224:123::-;1282:22;1296:7;1282:6;:13;;:22;;;;:::i;:::-;1332:7;1319:21;;;;;;;;;;;;1224:123;:::o;514:184:3:-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:109::-;568:21;583:5;568:21;:::i;:::-;563:3;556:34;487:109;;:::o;602:210::-;689:4;727:2;716:9;712:18;704:26;;740:65;802:1;791:9;787:17;778:6;740:65;:::i;:::-;602:210;;;;:::o;899:96::-;936:7;965:24;983:5;965:24;:::i;:::-;954:35;;899:96;;;:::o;1001:90::-;1035:7;1078:5;1071:13;1064:21;1053:32;;1001:90;;;:::o;1097:126::-;1134:7;1174:42;1167:5;1163:54;1152:65;;1097:126;;;:::o;1352:117::-;1461:1;1458;1451:12;1475:122;1548:24;1566:5;1548:24;:::i;:::-;1541:5;1538:35;1528:63;;1587:1;1584;1577:12;1528:63;1475:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "229400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addBuyer(address)": "infinite",
								"isBuyer(address)": "infinite",
								"renounceBuyer()": "infinite"
							},
							"internal": {
								"_addBuyer(address)": "infinite",
								"_removeBuyer(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 49,
									"end": 1349,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 49,
									"end": 1349,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 49,
									"end": 1349,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 236,
									"end": 295,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 236,
									"end": 295,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 236,
									"end": 295,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 236,
									"end": 295,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 236,
									"end": 295,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 236,
									"end": 295,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 295,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 236,
									"end": 295,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 236,
									"end": 295,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 236,
									"end": 295,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 236,
									"end": 295,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 267,
									"end": 288,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 277,
									"end": 287,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 267,
									"end": 276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 267,
									"end": 276,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 267,
									"end": 276,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 267,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 267,
									"end": 288,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 267,
									"end": 288,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 267,
									"end": 288,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 267,
									"end": 288,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49,
									"end": 1349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 49,
									"end": 1349,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1123,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1008,
									"end": 1123,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1074,
									"end": 1081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1069,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1063,
									"end": 1073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1063,
									"end": 1073,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1063,
									"end": 1073,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551633"
								},
								{
									"begin": 1063,
									"end": 1073,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1108,
									"end": 1115,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "PUSH",
									"source": 0,
									"value": "6599D9DD7F97CCDC3D99AB507544F9F6EBFCA20C63A7E3C018DA49EEAEFB164A"
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1123,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1123,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 259,
									"end": 440,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 259,
									"end": 440,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 354,
									"end": 355,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 335,
									"end": 356,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 335,
									"end": 356,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 335,
									"end": 342,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 335,
									"end": 356,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 335,
									"end": 356,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 335,
									"end": 356,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 335,
									"end": 356,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 327,
									"end": 357,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 357,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 327,
									"end": 357,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 376,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 380,
									"end": 384,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 386,
									"end": 393,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 376,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 376,
									"end": 379,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 376,
									"end": 379,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 376,
									"end": 394,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 376,
									"end": 394,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 375,
									"end": 394,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 367,
									"end": 395,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 395,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 367,
									"end": 395,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 429,
									"end": 433,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 406,
									"end": 410,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 406,
									"end": 417,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 417,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 425,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 433,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 406,
									"end": 433,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 406,
									"end": 433,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 259,
									"end": 440,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 259,
									"end": 440,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 259,
									"end": 440,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 786,
									"end": 976,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 786,
									"end": 976,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 882,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 930,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 910,
									"end": 931,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 910,
									"end": 917,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 910,
									"end": 931,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 902,
									"end": 932,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 932,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 902,
									"end": 932,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 949,
									"end": 953,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 949,
									"end": 960,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 960,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 968,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 942,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 942,
									"end": 969,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 49,
									"end": 1349,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 49,
									"end": 1349,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49,
									"end": 1349,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 49,
									"end": 1349,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49,
									"end": 1349,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 49,
									"end": 1349,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49,
									"end": 1349,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 49,
									"end": 1349,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49,
									"end": 1349,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122092e1951302776afd2f9dbadc2f8bf0f6301d951afcb35f0d59627284f7c8c3bc64736f6c63430008070033",
									".code": [
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "2A55FEEC"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "BBF89803"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "C204A0CF"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49,
											"end": 1349,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 843,
											"end": 916,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 843,
											"end": 916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 843,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 843,
											"end": 916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 843,
											"end": 916,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 843,
											"end": 916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 916,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 610,
											"end": 617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 599,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 599,
											"end": 618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 599,
											"end": 618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 599,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 599,
											"end": 618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 599,
											"end": 618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 599,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 423,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 431,
											"end": 441,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 423,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 423,
											"end": 442,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 423,
											"end": 442,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 423,
											"end": 442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 415,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 415,
											"end": 443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 415,
											"end": 443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 415,
											"end": 443,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 415,
											"end": 443,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 415,
											"end": 443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 749,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 759,
											"end": 766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 749,
											"end": 767,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 767,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 749,
											"end": 767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 843,
											"end": 916,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 843,
											"end": 916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 885,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 898,
											"end": 908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 885,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 885,
											"end": 909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 885,
											"end": 909,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 885,
											"end": 909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 916,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 259,
											"end": 440,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 259,
											"end": 440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 354,
											"end": 355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 356,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 356,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 335,
											"end": 342,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 335,
											"end": 356,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 356,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 335,
											"end": 356,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 335,
											"end": 356,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 380,
											"end": 384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 386,
											"end": 393,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 376,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 367,
											"end": 395,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 367,
											"end": 395,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 429,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 406,
											"end": 417,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 425,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 406,
											"end": 433,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 406,
											"end": 433,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 259,
											"end": 440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 259,
											"end": 440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 259,
											"end": 440,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 786,
											"end": 976,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 882,
											"end": 886,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 931,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 910,
											"end": 917,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 931,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 902,
											"end": 932,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 902,
											"end": 932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 949,
											"end": 953,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 949,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 968,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 942,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 942,
											"end": 969,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1008,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1008,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1074,
											"end": 1081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1063,
											"end": 1073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "6599D9DD7F97CCDC3D99AB507544F9F6EBFCA20C63A7E3C018DA49EEAEFB164A"
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1123,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1224,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1224,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1296,
											"end": 1303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "83FD4CBC7BC934BDFBAE994AC6E72FCC0E50ABD6995C1949520E761BA650D582"
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 514,
											"end": 698,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 593,
											"end": 600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 593,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 593,
											"end": 614,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 593,
											"end": 614,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 585,
											"end": 615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 615,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 585,
											"end": 615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 633,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 637,
											"end": 641,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 643,
											"end": 650,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 633,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 625,
											"end": 652,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 652,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 625,
											"end": 652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 686,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 663,
											"end": 674,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 682,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 514,
											"end": 698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 514,
											"end": 698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 514,
											"end": 698,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 563,
											"end": 566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 556,
											"end": 590,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 602,
											"end": 812,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 602,
											"end": 812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 689,
											"end": 693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 740,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 800,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 787,
											"end": 804,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 778,
											"end": 784,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 740,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 995,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 899,
											"end": 995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 936,
											"end": 943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 983,
											"end": 988,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 965,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 954,
											"end": 989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 954,
											"end": 989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 899,
											"end": 995,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 899,
											"end": 995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 899,
											"end": 995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 899,
											"end": 995,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1083,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1216,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1352,
											"end": 1469,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1352,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1463,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1573,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addBuyer(address)": "bbf89803",
							"isBuyer(address)": "2a55feec",
							"renounceBuyer()": "c204a0cf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"BuyerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"BuyerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBuyer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBuyer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceBuyer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BuyerRole.sol\":\"BuyerRole\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BuyerRole.sol\":{\"keccak256\":\"0xa196b2b213bc6b4eb9ef23962f6725a81f690ecc4db18023eb5561bba5486cdd\",\"urls\":[\"bzz-raw://bbe33d2729eb10cda34e79d6001426bc7baa72ea8a636cd5c09f61f59f6083f5\",\"dweb:/ipfs/QmTk84wnfVrPqMbYDNH8dBqTwoJhVDbFw9rHJPaYk9aRLi\"]},\"contracts/Roles.sol\":{\"keccak256\":\"0xdf61e4d307963240fa2c76b34dc7d740e612a18bd6e7d12bd3a1d477f99b7cba\",\"urls\":[\"bzz-raw://2c4d1c7d8de02ef9ee8940593b7e12b098a6b960cdd0ad702d693591beaf4c01\",\"dweb:/ipfs/QmS69k5xbqDfPm47CEwapAYKMs5XgfWBNTuLegkNbHyzHu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 17,
								"contract": "contracts/BuyerRole.sol:BuyerRole",
								"label": "buyers",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)322_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Role)322_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 321,
										"contract": "contracts/BuyerRole.sol:BuyerRole",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/PharmaRole.sol": {
				"PharmaRole": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "PharmaAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "PharmaRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addPharma",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isPharma",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renouncePharma",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PharmaRole.sol\":49:1376  contract PharmaRole {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PharmaRole.sol\":240:300  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/PharmaRole.sol\":271:293  _addPharma(msg.sender) */\n  tag_4\n    /* \"contracts/PharmaRole.sol\":282:292  msg.sender */\n  caller\n    /* \"contracts/PharmaRole.sol\":271:281  _addPharma */\n  shl(0x20, tag_5)\n    /* \"contracts/PharmaRole.sol\":271:293  _addPharma(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/PharmaRole.sol\":49:1376  contract PharmaRole {... */\n  jump(tag_6)\n    /* \"contracts/PharmaRole.sol\":1027:1145  function _addPharma(address account) internal {... */\ntag_5:\n    /* \"contracts/PharmaRole.sol\":1083:1103  pharmas.add(account) */\n  tag_8\n    /* \"contracts/PharmaRole.sol\":1095:1102  account */\n  dup2\n    /* \"contracts/PharmaRole.sol\":1083:1090  pharmas */\n  0x00\n    /* \"contracts/PharmaRole.sol\":1083:1094  pharmas.add */\n  or(tag_0_17, shl(0x20, tag_9))\n  swap1\n    /* \"contracts/PharmaRole.sol\":1083:1103  pharmas.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/PharmaRole.sol\":1130:1137  account */\n  dup1\n    /* \"contracts/PharmaRole.sol\":1118:1138  PharmaAdded(account) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x36179de14e9e7cbce2e0a64264f3eb82e80b70aac44ff098d9c6f70b1d7d6595\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/PharmaRole.sol\":1027:1145  function _addPharma(address account) internal {... */\n  pop\n  jump\t// out\n    /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\ntag_9:\n    /* \"contracts/Roles.sol\":354:355  0 */\n  0x00\n    /* \"contracts/Roles.sol\":335:356  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Roles.sol\":335:342  account */\n  dup2\n    /* \"contracts/Roles.sol\":335:356  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Roles.sol\":327:357  require(account != address(0)) */\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n    /* \"contracts/Roles.sol\":376:394  has(role, account) */\n  tag_12\n    /* \"contracts/Roles.sol\":380:384  role */\n  dup3\n    /* \"contracts/Roles.sol\":386:393  account */\n  dup3\n    /* \"contracts/Roles.sol\":376:379  has */\n  shl(0x20, tag_13)\n    /* \"contracts/Roles.sol\":376:394  has(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Roles.sol\":375:394  !has(role, account) */\n  iszero\n    /* \"contracts/Roles.sol\":367:395  require(!has(role, account)) */\n  tag_14\n  jumpi\n  0x00\n  dup1\n  revert\ntag_14:\n    /* \"contracts/Roles.sol\":429:433  true */\n  0x01\n    /* \"contracts/Roles.sol\":406:410  role */\n  dup3\n    /* \"contracts/Roles.sol\":406:417  role.bearer */\n  0x00\n  add\n    /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n  0x00\n    /* \"contracts/Roles.sol\":418:425  account */\n  dup4\n    /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/Roles.sol\":406:433  role.bearer[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\ntag_13:\n    /* \"contracts/Roles.sol\":882:886  bool */\n  0x00\n    /* \"contracts/Roles.sol\":929:930  0 */\n  dup1\n    /* \"contracts/Roles.sol\":910:931  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Roles.sol\":910:917  account */\n  dup3\n    /* \"contracts/Roles.sol\":910:931  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Roles.sol\":902:932  require(account != address(0)) */\n  tag_16\n  jumpi\n  0x00\n  dup1\n  revert\ntag_16:\n    /* \"contracts/Roles.sol\":949:953  role */\n  dup3\n    /* \"contracts/Roles.sol\":949:960  role.bearer */\n  0x00\n  add\n    /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n  0x00\n    /* \"contracts/Roles.sol\":961:968  account */\n  dup4\n    /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/Roles.sol\":942:969  return role.bearer[account] */\n  swap1\n  pop\n    /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/PharmaRole.sol\":49:1376  contract PharmaRole {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PharmaRole.sol\":49:1376  contract PharmaRole {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1b90c4be\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x81612e4f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd1e4fd0f\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PharmaRole.sol\":698:788  function addPharma(address account) public onlyPharma {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/PharmaRole.sol\":858:933  function renouncePharma() public {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/PharmaRole.sol\":529:635  function isPharma(address account) public view returns (bool) {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PharmaRole.sol\":698:788  function addPharma(address account) public onlyPharma {... */\n    tag_9:\n        /* \"contracts/PharmaRole.sol\":429:449  isPharma(msg.sender) */\n      tag_19\n        /* \"contracts/PharmaRole.sol\":438:448  msg.sender */\n      caller\n        /* \"contracts/PharmaRole.sol\":429:437  isPharma */\n      tag_14\n        /* \"contracts/PharmaRole.sol\":429:449  isPharma(msg.sender) */\n      jump\t// in\n    tag_19:\n        /* \"contracts/PharmaRole.sol\":421:450  require(isPharma(msg.sender)) */\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n        /* \"contracts/PharmaRole.sol\":762:781  _addPharma(account) */\n      tag_22\n        /* \"contracts/PharmaRole.sol\":773:780  account */\n      dup2\n        /* \"contracts/PharmaRole.sol\":762:772  _addPharma */\n      tag_23\n        /* \"contracts/PharmaRole.sol\":762:781  _addPharma(account) */\n      jump\t// in\n    tag_22:\n        /* \"contracts/PharmaRole.sol\":698:788  function addPharma(address account) public onlyPharma {... */\n      pop\n      jump\t// out\n        /* \"contracts/PharmaRole.sol\":858:933  function renouncePharma() public {... */\n    tag_11:\n        /* \"contracts/PharmaRole.sol\":901:926  _removePharma(msg.sender) */\n      tag_25\n        /* \"contracts/PharmaRole.sol\":915:925  msg.sender */\n      caller\n        /* \"contracts/PharmaRole.sol\":901:914  _removePharma */\n      tag_26\n        /* \"contracts/PharmaRole.sol\":901:926  _removePharma(msg.sender) */\n      jump\t// in\n    tag_25:\n        /* \"contracts/PharmaRole.sol\":858:933  function renouncePharma() public {... */\n      jump\t// out\n        /* \"contracts/PharmaRole.sol\":529:635  function isPharma(address account) public view returns (bool) {... */\n    tag_14:\n        /* \"contracts/PharmaRole.sol\":585:589  bool */\n      0x00\n        /* \"contracts/PharmaRole.sol\":608:628  pharmas.has(account) */\n      tag_28\n        /* \"contracts/PharmaRole.sol\":620:627  account */\n      dup3\n        /* \"contracts/PharmaRole.sol\":608:615  pharmas */\n      0x00\n        /* \"contracts/PharmaRole.sol\":608:619  pharmas.has */\n      tag_29\n      swap1\n        /* \"contracts/PharmaRole.sol\":608:628  pharmas.has(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_28:\n        /* \"contracts/PharmaRole.sol\":601:628  return pharmas.has(account) */\n      swap1\n      pop\n        /* \"contracts/PharmaRole.sol\":529:635  function isPharma(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n    tag_17:\n        /* \"contracts/Roles.sol\":354:355  0 */\n      0x00\n        /* \"contracts/Roles.sol\":335:356  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":335:342  account */\n      dup2\n        /* \"contracts/Roles.sol\":335:356  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":327:357  require(account != address(0)) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"contracts/Roles.sol\":376:394  has(role, account) */\n      tag_32\n        /* \"contracts/Roles.sol\":380:384  role */\n      dup3\n        /* \"contracts/Roles.sol\":386:393  account */\n      dup3\n        /* \"contracts/Roles.sol\":376:379  has */\n      tag_29\n        /* \"contracts/Roles.sol\":376:394  has(role, account) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/Roles.sol\":375:394  !has(role, account) */\n      iszero\n        /* \"contracts/Roles.sol\":367:395  require(!has(role, account)) */\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n        /* \"contracts/Roles.sol\":429:433  true */\n      0x01\n        /* \"contracts/Roles.sol\":406:410  role */\n      dup3\n        /* \"contracts/Roles.sol\":406:417  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":418:425  account */\n      dup4\n        /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Roles.sol\":406:433  role.bearer[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PharmaRole.sol\":1027:1145  function _addPharma(address account) internal {... */\n    tag_23:\n        /* \"contracts/PharmaRole.sol\":1083:1103  pharmas.add(account) */\n      tag_35\n        /* \"contracts/PharmaRole.sol\":1095:1102  account */\n      dup2\n        /* \"contracts/PharmaRole.sol\":1083:1090  pharmas */\n      0x00\n        /* \"contracts/PharmaRole.sol\":1083:1094  pharmas.add */\n      tag_17\n      swap1\n        /* \"contracts/PharmaRole.sol\":1083:1103  pharmas.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_35:\n        /* \"contracts/PharmaRole.sol\":1130:1137  account */\n      dup1\n        /* \"contracts/PharmaRole.sol\":1118:1138  PharmaAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x36179de14e9e7cbce2e0a64264f3eb82e80b70aac44ff098d9c6f70b1d7d6595\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PharmaRole.sol\":1027:1145  function _addPharma(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/PharmaRole.sol\":1248:1374  function _removePharma(address account) internal {... */\n    tag_26:\n        /* \"contracts/PharmaRole.sol\":1307:1330  pharmas.remove(account) */\n      tag_37\n        /* \"contracts/PharmaRole.sol\":1322:1329  account */\n      dup2\n        /* \"contracts/PharmaRole.sol\":1307:1314  pharmas */\n      0x00\n        /* \"contracts/PharmaRole.sol\":1307:1321  pharmas.remove */\n      tag_38\n      swap1\n        /* \"contracts/PharmaRole.sol\":1307:1330  pharmas.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_37:\n        /* \"contracts/PharmaRole.sol\":1359:1366  account */\n      dup1\n        /* \"contracts/PharmaRole.sol\":1345:1367  PharmaRemoved(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9a482e6375ef89327f2177c114191d0b88502ca4a7b961d211cc45786ee5107\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PharmaRole.sol\":1248:1374  function _removePharma(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\n    tag_29:\n        /* \"contracts/Roles.sol\":882:886  bool */\n      0x00\n        /* \"contracts/Roles.sol\":929:930  0 */\n      dup1\n        /* \"contracts/Roles.sol\":910:931  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":910:917  account */\n      dup3\n        /* \"contracts/Roles.sol\":910:931  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":902:932  require(account != address(0)) */\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n        /* \"contracts/Roles.sol\":949:953  role */\n      dup3\n        /* \"contracts/Roles.sol\":949:960  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":961:968  account */\n      dup4\n        /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Roles.sol\":942:969  return role.bearer[account] */\n      swap1\n      pop\n        /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n    tag_38:\n        /* \"contracts/Roles.sol\":612:613  0 */\n      0x00\n        /* \"contracts/Roles.sol\":593:614  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":593:600  account */\n      dup2\n        /* \"contracts/Roles.sol\":593:614  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":585:615  require(account != address(0)) */\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n        /* \"contracts/Roles.sol\":633:651  has(role, account) */\n      tag_43\n        /* \"contracts/Roles.sol\":637:641  role */\n      dup3\n        /* \"contracts/Roles.sol\":643:650  account */\n      dup3\n        /* \"contracts/Roles.sol\":633:636  has */\n      tag_29\n        /* \"contracts/Roles.sol\":633:651  has(role, account) */\n      jump\t// in\n    tag_43:\n        /* \"contracts/Roles.sol\":625:652  require(has(role, account)) */\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n        /* \"contracts/Roles.sol\":686:691  false */\n      0x00\n        /* \"contracts/Roles.sol\":663:667  role */\n      dup3\n        /* \"contracts/Roles.sol\":663:674  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":663:683  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":675:682  account */\n      dup4\n        /* \"contracts/Roles.sol\":663:683  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Roles.sol\":663:691  role.bearer[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_46:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_48\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_8:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":228:347   */\n    tag_51:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_54\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_46\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:596   */\n    tag_55:\n        /* \"#utility.yul\":568:589   */\n      tag_57\n        /* \"#utility.yul\":583:588   */\n      dup2\n        /* \"#utility.yul\":568:589   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":563:566   */\n      dup3\n        /* \"#utility.yul\":556:590   */\n      mstore\n        /* \"#utility.yul\":487:596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":602:812   */\n    tag_16:\n        /* \"#utility.yul\":689:693   */\n      0x00\n        /* \"#utility.yul\":727:729   */\n      0x20\n        /* \"#utility.yul\":716:725   */\n      dup3\n        /* \"#utility.yul\":712:730   */\n      add\n        /* \"#utility.yul\":704:730   */\n      swap1\n      pop\n        /* \"#utility.yul\":740:805   */\n      tag_60\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":791:800   */\n      dup4\n        /* \"#utility.yul\":787:804   */\n      add\n        /* \"#utility.yul\":778:784   */\n      dup5\n        /* \"#utility.yul\":740:805   */\n      tag_55\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":602:812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":899:995   */\n    tag_63:\n        /* \"#utility.yul\":936:943   */\n      0x00\n        /* \"#utility.yul\":965:989   */\n      tag_65\n        /* \"#utility.yul\":983:988   */\n      dup3\n        /* \"#utility.yul\":965:989   */\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":954:989   */\n      swap1\n      pop\n        /* \"#utility.yul\":899:995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1001:1091   */\n    tag_58:\n        /* \"#utility.yul\":1035:1042   */\n      0x00\n        /* \"#utility.yul\":1078:1083   */\n      dup2\n        /* \"#utility.yul\":1071:1084   */\n      iszero\n        /* \"#utility.yul\":1064:1085   */\n      iszero\n        /* \"#utility.yul\":1053:1085   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1097:1223   */\n    tag_66:\n        /* \"#utility.yul\":1134:1141   */\n      0x00\n        /* \"#utility.yul\":1174:1216   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1167:1172   */\n      dup3\n        /* \"#utility.yul\":1163:1217   */\n      and\n        /* \"#utility.yul\":1152:1217   */\n      swap1\n      pop\n        /* \"#utility.yul\":1097:1223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1352:1469   */\n    tag_53:\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1458:1459   */\n      dup1\n        /* \"#utility.yul\":1451:1463   */\n      revert\n        /* \"#utility.yul\":1475:1597   */\n    tag_49:\n        /* \"#utility.yul\":1548:1572   */\n      tag_73\n        /* \"#utility.yul\":1566:1571   */\n      dup2\n        /* \"#utility.yul\":1548:1572   */\n      tag_63\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1541:1546   */\n      dup2\n        /* \"#utility.yul\":1538:1573   */\n      eq\n        /* \"#utility.yul\":1528:1591   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1584:1585   */\n      dup1\n        /* \"#utility.yul\":1577:1589   */\n      revert\n        /* \"#utility.yul\":1528:1591   */\n    tag_74:\n        /* \"#utility.yul\":1475:1597   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f7b6f4dac934d008b2599049c868a1132c37caca14efc13a73a2c6d42829dfb864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addPharma_192": {
									"entryPoint": 37,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_357": {
									"entryPoint": 131,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_417": {
									"entryPoint": 309,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506100203361002560201b60201c565b6101c7565b61003d81600061008360201b6100e21790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f36179de14e9e7cbce2e0a64264f3eb82e80b70aac44ff098d9c6f70b1d7d659560405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100bd57600080fd5b6100cd828261013560201b60201c565b156100d757600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561017057600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61047b806101d66000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631b90c4be1461004657806381612e4f14610062578063d1e4fd0f1461006c575b600080fd5b610060600480360381019061005b9190610394565b61009c565b005b61006a6100ba565b005b61008660048036038101906100819190610394565b6100c5565b60405161009391906103d0565b60405180910390f35b6100a5336100c5565b6100ae57600080fd5b6100b78161018e565b50565b6100c3336101e8565b565b60006100db82600061024290919063ffffffff16565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561011c57600080fd5b6101268282610242565b1561013057600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6101a28160006100e290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f36179de14e9e7cbce2e0a64264f3eb82e80b70aac44ff098d9c6f70b1d7d659560405160405180910390a250565b6101fc8160006102d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fa9a482e6375ef89327f2177c114191d0b88502ca4a7b961d211cc45786ee510760405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561027d57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561030e57600080fd5b6103188282610242565b61032157600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008135905061038e8161042e565b92915050565b6000602082840312156103aa576103a9610429565b5b60006103b88482850161037f565b91505092915050565b6103ca816103fd565b82525050565b60006020820190506103e560008301846103c1565b92915050565b60006103f682610409565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610437816103eb565b811461044257600080fd5b5056fea2646970667358221220f7b6f4dac934d008b2599049c868a1132c37caca14efc13a73a2c6d42829dfb864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20 CALLER PUSH2 0x25 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x3D DUP2 PUSH1 0x0 PUSH2 0x83 PUSH1 0x20 SHL PUSH2 0xE2 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36179DE14E9E7CBCE2E0A64264F3EB82E80B70AAC44FF098D9C6F70B1D7D6595 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD DUP3 DUP3 PUSH2 0x135 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47B DUP1 PUSH2 0x1D6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B90C4BE EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x81612E4F EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xD1E4FD0F EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0xBA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 CALLER PUSH2 0xC5 JUMP JUMPDEST PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB7 DUP2 PUSH2 0x18E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC3 CALLER PUSH2 0x1E8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB DUP3 PUSH1 0x0 PUSH2 0x242 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x126 DUP3 DUP3 PUSH2 0x242 JUMP JUMPDEST ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1A2 DUP2 PUSH1 0x0 PUSH2 0xE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36179DE14E9E7CBCE2E0A64264F3EB82E80B70AAC44FF098D9C6F70B1D7D6595 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1FC DUP2 PUSH1 0x0 PUSH2 0x2D4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9A482E6375EF89327F2177C114191D0B88502CA4A7B961D211CC45786EE5107 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x318 DUP3 DUP3 PUSH2 0x242 JUMP JUMPDEST PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38E DUP2 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0x429 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B8 DUP5 DUP3 DUP6 ADD PUSH2 0x37F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CA DUP2 PUSH2 0x3FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F6 DUP3 PUSH2 0x409 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x3EB JUMP JUMPDEST DUP2 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xB6 DELEGATECALL 0xDA 0xC9 CALLVALUE 0xD0 ADDMOD 0xB2 MSIZE SWAP1 0x49 0xC8 PUSH9 0xA1132C37CACA14EFC1 GASPRICE PUSH20 0xA2C6D42829DFB864736F6C634300080700330000 ",
							"sourceMap": "49:1327:1:-:0;;;240:60;;;;;;;;;;271:22;282:10;271;;;:22;;:::i;:::-;49:1327;;1027:118;1083:20;1095:7;1083;:11;;;;;;:20;;;;:::i;:::-;1130:7;1118:20;;;;;;;;;;;;1027:118;:::o;259:181:3:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;786:190::-;882:4;929:1;910:21;;:7;:21;;;;902:30;;;;;;949:4;:11;;:20;961:7;949:20;;;;;;;;;;;;;;;;;;;;;;;;;942:27;;786:190;;;;:::o;49:1327:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addPharma_192": {
									"entryPoint": 398,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removePharma_208": {
									"entryPoint": 488,
									"id": 208,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addPharma_167": {
									"entryPoint": 156,
									"id": 167,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_357": {
									"entryPoint": 226,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_417": {
									"entryPoint": 578,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isPharma_155": {
									"entryPoint": 197,
									"id": 155,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@remove_391": {
									"entryPoint": 724,
									"id": 391,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renouncePharma_176": {
									"entryPoint": 186,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1600:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:5"
															},
															"nodeType": "YulIf",
															"src": "228:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:5",
														"type": ""
													}
												],
												"src": "152:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "563:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "583:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "568:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "568:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "534:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "541:3:5",
														"type": ""
													}
												],
												"src": "487:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "694:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "704:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "716:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "727:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "712:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "704:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "778:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "791:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "802:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "787:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "787:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "740:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "740:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "740:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "666:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "678:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "689:4:5",
														"type": ""
													}
												],
												"src": "602:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "858:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "868:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "884:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "851:6:5",
														"type": ""
													}
												],
												"src": "818:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "944:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "954:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "983:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "965:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "954:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "926:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "936:7:5",
														"type": ""
													}
												],
												"src": "899:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1043:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1053:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1078:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1071:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1071:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1053:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1025:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1035:7:5",
														"type": ""
													}
												],
												"src": "1001:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1142:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1152:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1167:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1174:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1163:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1152:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1124:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1134:7:5",
														"type": ""
													}
												],
												"src": "1097:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1318:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1335:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1328:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1328:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1229:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1441:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1458:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1461:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1451:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1352:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1518:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1575:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1584:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1587:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1577:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1577:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1577:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1541:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1566:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1548:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1548:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1538:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1538:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:43:5"
															},
															"nodeType": "YulIf",
															"src": "1528:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1511:5:5",
														"type": ""
													}
												],
												"src": "1475:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80631b90c4be1461004657806381612e4f14610062578063d1e4fd0f1461006c575b600080fd5b610060600480360381019061005b9190610394565b61009c565b005b61006a6100ba565b005b61008660048036038101906100819190610394565b6100c5565b60405161009391906103d0565b60405180910390f35b6100a5336100c5565b6100ae57600080fd5b6100b78161018e565b50565b6100c3336101e8565b565b60006100db82600061024290919063ffffffff16565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561011c57600080fd5b6101268282610242565b1561013057600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6101a28160006100e290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f36179de14e9e7cbce2e0a64264f3eb82e80b70aac44ff098d9c6f70b1d7d659560405160405180910390a250565b6101fc8160006102d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fa9a482e6375ef89327f2177c114191d0b88502ca4a7b961d211cc45786ee510760405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561027d57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561030e57600080fd5b6103188282610242565b61032157600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008135905061038e8161042e565b92915050565b6000602082840312156103aa576103a9610429565b5b60006103b88482850161037f565b91505092915050565b6103ca816103fd565b82525050565b60006020820190506103e560008301846103c1565b92915050565b60006103f682610409565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610437816103eb565b811461044257600080fd5b5056fea2646970667358221220f7b6f4dac934d008b2599049c868a1132c37caca14efc13a73a2c6d42829dfb864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B90C4BE EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x81612E4F EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xD1E4FD0F EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0xBA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 CALLER PUSH2 0xC5 JUMP JUMPDEST PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB7 DUP2 PUSH2 0x18E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC3 CALLER PUSH2 0x1E8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB DUP3 PUSH1 0x0 PUSH2 0x242 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x126 DUP3 DUP3 PUSH2 0x242 JUMP JUMPDEST ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1A2 DUP2 PUSH1 0x0 PUSH2 0xE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36179DE14E9E7CBCE2E0A64264F3EB82E80B70AAC44FF098D9C6F70B1D7D6595 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1FC DUP2 PUSH1 0x0 PUSH2 0x2D4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9A482E6375EF89327F2177C114191D0B88502CA4A7B961D211CC45786EE5107 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x318 DUP3 DUP3 PUSH2 0x242 JUMP JUMPDEST PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38E DUP2 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0x429 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B8 DUP5 DUP3 DUP6 ADD PUSH2 0x37F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CA DUP2 PUSH2 0x3FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F6 DUP3 PUSH2 0x409 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x3EB JUMP JUMPDEST DUP2 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xB6 DELEGATECALL 0xDA 0xC9 CALLVALUE 0xD0 ADDMOD 0xB2 MSIZE SWAP1 0x49 0xC8 PUSH9 0xA1132C37CACA14EFC1 GASPRICE PUSH20 0xA2C6D42829DFB864736F6C634300080700330000 ",
							"sourceMap": "49:1327:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;698:90;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;858:75;;;:::i;:::-;;529:106;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;698:90;429:20;438:10;429:8;:20::i;:::-;421:29;;;;;;762:19:::1;773:7;762:10;:19::i;:::-;698:90:::0;:::o;858:75::-;901:25;915:10;901:13;:25::i;:::-;858:75::o;529:106::-;585:4;608:20;620:7;608;:11;;:20;;;;:::i;:::-;601:27;;529:106;;;:::o;259:181:3:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;1027:118:1:-;1083:20;1095:7;1083;:11;;:20;;;;:::i;:::-;1130:7;1118:20;;;;;;;;;;;;1027:118;:::o;1248:126::-;1307:23;1322:7;1307;:14;;:23;;;;:::i;:::-;1359:7;1345:22;;;;;;;;;;;;1248:126;:::o;786:190:3:-;882:4;929:1;910:21;;:7;:21;;;;902:30;;;;;;949:4;:11;;:20;961:7;949:20;;;;;;;;;;;;;;;;;;;;;;;;;942:27;;786:190;;;;:::o;514:184::-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:109::-;568:21;583:5;568:21;:::i;:::-;563:3;556:34;487:109;;:::o;602:210::-;689:4;727:2;716:9;712:18;704:26;;740:65;802:1;791:9;787:17;778:6;740:65;:::i;:::-;602:210;;;;:::o;899:96::-;936:7;965:24;983:5;965:24;:::i;:::-;954:35;;899:96;;;:::o;1001:90::-;1035:7;1078:5;1071:13;1064:21;1053:32;;1001:90;;;:::o;1097:126::-;1134:7;1174:42;1167:5;1163:54;1152:65;;1097:126;;;:::o;1352:117::-;1461:1;1458;1451:12;1475:122;1548:24;1566:5;1548:24;:::i;:::-;1541:5;1538:35;1528:63;;1587:1;1584;1577:12;1528:63;1475:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "229400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addPharma(address)": "infinite",
								"isPharma(address)": "infinite",
								"renouncePharma()": "infinite"
							},
							"internal": {
								"_addPharma(address)": "infinite",
								"_removePharma(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 49,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 49,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 49,
									"end": 1376,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 240,
									"end": 300,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 240,
									"end": 300,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 240,
									"end": 300,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 240,
									"end": 300,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 240,
									"end": 300,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 240,
									"end": 300,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 300,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 240,
									"end": 300,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 240,
									"end": 300,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 240,
									"end": 300,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 240,
									"end": 300,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 271,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 282,
									"end": 292,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 271,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 271,
									"end": 281,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 271,
									"end": 281,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 271,
									"end": 293,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 271,
									"end": 293,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 271,
									"end": 293,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 271,
									"end": 293,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 271,
									"end": 293,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 49,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 49,
									"end": 1376,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1145,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1027,
									"end": 1145,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1095,
									"end": 1102,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1090,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1083,
									"end": 1094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1083,
									"end": 1094,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1083,
									"end": 1094,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551633"
								},
								{
									"begin": 1083,
									"end": 1094,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "PUSH",
									"source": 1,
									"value": "36179DE14E9E7CBCE2E0A64264F3EB82E80B70AAC44FF098D9C6F70B1D7D6595"
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "LOG2",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1145,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1145,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 259,
									"end": 440,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 259,
									"end": 440,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 354,
									"end": 355,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 335,
									"end": 356,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 335,
									"end": 356,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 335,
									"end": 342,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 335,
									"end": 356,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 335,
									"end": 356,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 335,
									"end": 356,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 335,
									"end": 356,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 327,
									"end": 357,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 357,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 327,
									"end": 357,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 376,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 380,
									"end": 384,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 386,
									"end": 393,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 376,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 376,
									"end": 379,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 376,
									"end": 379,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 376,
									"end": 394,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 376,
									"end": 394,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 375,
									"end": 394,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 367,
									"end": 395,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 395,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 367,
									"end": 395,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 429,
									"end": 433,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 406,
									"end": 410,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 406,
									"end": 417,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 417,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 425,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 433,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 406,
									"end": 433,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 406,
									"end": 433,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 259,
									"end": 440,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 259,
									"end": 440,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 259,
									"end": 440,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 786,
									"end": 976,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 786,
									"end": 976,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 882,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 930,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 910,
									"end": 931,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 910,
									"end": 917,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 910,
									"end": 931,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 902,
									"end": 932,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 932,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 902,
									"end": 932,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 949,
									"end": 953,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 949,
									"end": 960,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 960,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 968,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 942,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 942,
									"end": 969,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 49,
									"end": 1376,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 49,
									"end": 1376,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 49,
									"end": 1376,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 49,
									"end": 1376,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 49,
									"end": 1376,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 49,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 49,
									"end": 1376,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 49,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 49,
									"end": 1376,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7b6f4dac934d008b2599049c868a1132c37caca14efc13a73a2c6d42829dfb864736f6c63430008070033",
									".code": [
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "1B90C4BE"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "81612E4F"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "D1E4FD0F"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 49,
											"end": 1376,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 858,
											"end": 933,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 858,
											"end": 933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 858,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 858,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 858,
											"end": 933,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 858,
											"end": 933,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 858,
											"end": 933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 858,
											"end": 933,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 429,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 438,
											"end": 448,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 429,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 429,
											"end": 449,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 429,
											"end": 449,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 429,
											"end": 449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 450,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 762,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 762,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 762,
											"end": 781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 762,
											"end": 781,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 762,
											"end": 781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 858,
											"end": 933,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 858,
											"end": 933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 901,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 915,
											"end": 925,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 901,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 901,
											"end": 926,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 901,
											"end": 926,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 901,
											"end": 926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 858,
											"end": 933,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 585,
											"end": 589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 620,
											"end": 627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 608,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 608,
											"end": 619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 608,
											"end": 628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 608,
											"end": 628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 608,
											"end": 628,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 608,
											"end": 628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 608,
											"end": 628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 608,
											"end": 628,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 608,
											"end": 628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 601,
											"end": 628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 601,
											"end": 628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 259,
											"end": 440,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 259,
											"end": 440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 354,
											"end": 355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 356,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 356,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 335,
											"end": 342,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 335,
											"end": 356,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 356,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 335,
											"end": 356,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 335,
											"end": 356,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 380,
											"end": 384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 386,
											"end": 393,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 376,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 367,
											"end": 395,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 367,
											"end": 395,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 429,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 406,
											"end": 417,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 425,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 406,
											"end": 433,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 406,
											"end": 433,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 259,
											"end": 440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 259,
											"end": 440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 259,
											"end": 440,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1027,
											"end": 1145,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1027,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1095,
											"end": 1102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1083,
											"end": 1094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "36179DE14E9E7CBCE2E0A64264F3EB82E80B70AAC44FF098D9C6F70B1D7D6595"
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1145,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1248,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1248,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1314,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1307,
											"end": 1321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "A9A482E6375EF89327F2177C114191D0B88502CA4A7B961D211CC45786EE5107"
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1374,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 786,
											"end": 976,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 786,
											"end": 976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 882,
											"end": 886,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 931,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 910,
											"end": 917,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 931,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 932,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 949,
											"end": 953,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 949,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 968,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 942,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 942,
											"end": 969,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 514,
											"end": 698,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 514,
											"end": 698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 593,
											"end": 600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 593,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 593,
											"end": 614,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 593,
											"end": 614,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 585,
											"end": 615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 615,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 585,
											"end": 615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 633,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 637,
											"end": 641,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 643,
											"end": 650,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 633,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 625,
											"end": 652,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 652,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 625,
											"end": 652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 686,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 663,
											"end": 674,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 682,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 514,
											"end": 698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 514,
											"end": 698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 514,
											"end": 698,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 563,
											"end": 566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 556,
											"end": 590,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 602,
											"end": 812,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 602,
											"end": 812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 689,
											"end": 693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 740,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 800,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 787,
											"end": 804,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 778,
											"end": 784,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 740,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 995,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 899,
											"end": 995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 936,
											"end": 943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 983,
											"end": 988,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 965,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 954,
											"end": 989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 954,
											"end": 989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 899,
											"end": 995,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 899,
											"end": 995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 899,
											"end": 995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 899,
											"end": 995,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1083,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1216,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1352,
											"end": 1469,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1352,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1463,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1573,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addPharma(address)": "1b90c4be",
							"isPharma(address)": "d1e4fd0f",
							"renouncePharma()": "81612e4f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PharmaAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PharmaRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPharma\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPharma\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renouncePharma\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PharmaRole.sol\":\"PharmaRole\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PharmaRole.sol\":{\"keccak256\":\"0x61cefd40b84ccb1bea0077e84c58ac6c6a6f05915604e5435f5af82751c200ad\",\"urls\":[\"bzz-raw://3fd9f9843df0c954562261015374c6978cd643068395ef936b48a67d7824a115\",\"dweb:/ipfs/Qmdtm5UztW9aDp2eADo7Rk5tavuwiWQrvoj7mnzgNPNexA\"]},\"contracts/Roles.sol\":{\"keccak256\":\"0xdf61e4d307963240fa2c76b34dc7d740e612a18bd6e7d12bd3a1d477f99b7cba\",\"urls\":[\"bzz-raw://2c4d1c7d8de02ef9ee8940593b7e12b098a6b960cdd0ad702d693591beaf4c01\",\"dweb:/ipfs/QmS69k5xbqDfPm47CEwapAYKMs5XgfWBNTuLegkNbHyzHu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "contracts/PharmaRole.sol:PharmaRole",
								"label": "pharmas",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)322_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Role)322_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 321,
										"contract": "contracts/PharmaRole.sol:PharmaRole",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/RegulatorRole.sol": {
				"RegulatorRole": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "RegulatorAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "RegulatorRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addRegulator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isRegulator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceRegulator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/RegulatorRole.sol\":49:1457  contract RegulatorRole {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/RegulatorRole.sol\":252:315  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/RegulatorRole.sol\":283:308  _addRegulator(msg.sender) */\n  tag_4\n    /* \"contracts/RegulatorRole.sol\":297:307  msg.sender */\n  caller\n    /* \"contracts/RegulatorRole.sol\":283:296  _addRegulator */\n  shl(0x20, tag_5)\n    /* \"contracts/RegulatorRole.sol\":283:308  _addRegulator(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/RegulatorRole.sol\":49:1457  contract RegulatorRole {... */\n  jump(tag_6)\n    /* \"contracts/RegulatorRole.sol\":1084:1211  function _addRegulator(address account) internal {... */\ntag_5:\n    /* \"contracts/RegulatorRole.sol\":1143:1166  regulators.add(account) */\n  tag_8\n    /* \"contracts/RegulatorRole.sol\":1158:1165  account */\n  dup2\n    /* \"contracts/RegulatorRole.sol\":1143:1153  regulators */\n  0x00\n    /* \"contracts/RegulatorRole.sol\":1143:1157  regulators.add */\n  or(tag_0_17, shl(0x20, tag_9))\n  swap1\n    /* \"contracts/RegulatorRole.sol\":1143:1166  regulators.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/RegulatorRole.sol\":1196:1203  account */\n  dup1\n    /* \"contracts/RegulatorRole.sol\":1181:1204  RegulatorAdded(account) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x2860b5ba44f983f8f363ee6eeb3c24cbca3096803fbdd5129b9e253f01cac076\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/RegulatorRole.sol\":1084:1211  function _addRegulator(address account) internal {... */\n  pop\n  jump\t// out\n    /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\ntag_9:\n    /* \"contracts/Roles.sol\":354:355  0 */\n  0x00\n    /* \"contracts/Roles.sol\":335:356  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Roles.sol\":335:342  account */\n  dup2\n    /* \"contracts/Roles.sol\":335:356  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Roles.sol\":327:357  require(account != address(0)) */\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n    /* \"contracts/Roles.sol\":376:394  has(role, account) */\n  tag_12\n    /* \"contracts/Roles.sol\":380:384  role */\n  dup3\n    /* \"contracts/Roles.sol\":386:393  account */\n  dup3\n    /* \"contracts/Roles.sol\":376:379  has */\n  shl(0x20, tag_13)\n    /* \"contracts/Roles.sol\":376:394  has(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Roles.sol\":375:394  !has(role, account) */\n  iszero\n    /* \"contracts/Roles.sol\":367:395  require(!has(role, account)) */\n  tag_14\n  jumpi\n  0x00\n  dup1\n  revert\ntag_14:\n    /* \"contracts/Roles.sol\":429:433  true */\n  0x01\n    /* \"contracts/Roles.sol\":406:410  role */\n  dup3\n    /* \"contracts/Roles.sol\":406:417  role.bearer */\n  0x00\n  add\n    /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n  0x00\n    /* \"contracts/Roles.sol\":418:425  account */\n  dup4\n    /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/Roles.sol\":406:433  role.bearer[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\ntag_13:\n    /* \"contracts/Roles.sol\":882:886  bool */\n  0x00\n    /* \"contracts/Roles.sol\":929:930  0 */\n  dup1\n    /* \"contracts/Roles.sol\":910:931  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Roles.sol\":910:917  account */\n  dup3\n    /* \"contracts/Roles.sol\":910:931  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Roles.sol\":902:932  require(account != address(0)) */\n  tag_16\n  jumpi\n  0x00\n  dup1\n  revert\ntag_16:\n    /* \"contracts/Roles.sol\":949:953  role */\n  dup3\n    /* \"contracts/Roles.sol\":949:960  role.bearer */\n  0x00\n  add\n    /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n  0x00\n    /* \"contracts/Roles.sol\":961:968  account */\n  dup4\n    /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/Roles.sol\":942:969  return role.bearer[account] */\n  swap1\n  pop\n    /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/RegulatorRole.sol\":49:1457  contract RegulatorRole {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/RegulatorRole.sol\":49:1457  contract RegulatorRole {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1beadbe2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x54fc9169\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xac63f3c7\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/RegulatorRole.sol\":903:984  function renounceRegulator() public {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/RegulatorRole.sol\":553:665  function isRegulator(address account) public view returns (bool) {... */\n    tag_4:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/RegulatorRole.sol\":731:830  function addRegulator(address account) public onlyRegulator {... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_15:\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/RegulatorRole.sol\":903:984  function renounceRegulator() public {... */\n    tag_7:\n        /* \"contracts/RegulatorRole.sol\":949:977  _removeRegulator(msg.sender) */\n      tag_19\n        /* \"contracts/RegulatorRole.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/RegulatorRole.sol\":949:965  _removeRegulator */\n      tag_20\n        /* \"contracts/RegulatorRole.sol\":949:977  _removeRegulator(msg.sender) */\n      jump\t// in\n    tag_19:\n        /* \"contracts/RegulatorRole.sol\":903:984  function renounceRegulator() public {... */\n      jump\t// out\n        /* \"contracts/RegulatorRole.sol\":553:665  function isRegulator(address account) public view returns (bool) {... */\n    tag_11:\n        /* \"contracts/RegulatorRole.sol\":612:616  bool */\n      0x00\n        /* \"contracts/RegulatorRole.sol\":635:658  regulators.has(account) */\n      tag_22\n        /* \"contracts/RegulatorRole.sol\":650:657  account */\n      dup3\n        /* \"contracts/RegulatorRole.sol\":635:645  regulators */\n      0x00\n        /* \"contracts/RegulatorRole.sol\":635:649  regulators.has */\n      tag_23\n      swap1\n        /* \"contracts/RegulatorRole.sol\":635:658  regulators.has(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_22:\n        /* \"contracts/RegulatorRole.sol\":628:658  return regulators.has(account) */\n      swap1\n      pop\n        /* \"contracts/RegulatorRole.sol\":553:665  function isRegulator(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/RegulatorRole.sol\":731:830  function addRegulator(address account) public onlyRegulator {... */\n    tag_16:\n        /* \"contracts/RegulatorRole.sol\":447:470  isRegulator(msg.sender) */\n      tag_25\n        /* \"contracts/RegulatorRole.sol\":459:469  msg.sender */\n      caller\n        /* \"contracts/RegulatorRole.sol\":447:458  isRegulator */\n      tag_11\n        /* \"contracts/RegulatorRole.sol\":447:470  isRegulator(msg.sender) */\n      jump\t// in\n    tag_25:\n        /* \"contracts/RegulatorRole.sol\":439:471  require(isRegulator(msg.sender)) */\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n        /* \"contracts/RegulatorRole.sol\":801:823  _addRegulator(account) */\n      tag_28\n        /* \"contracts/RegulatorRole.sol\":815:822  account */\n      dup2\n        /* \"contracts/RegulatorRole.sol\":801:814  _addRegulator */\n      tag_29\n        /* \"contracts/RegulatorRole.sol\":801:823  _addRegulator(account) */\n      jump\t// in\n    tag_28:\n        /* \"contracts/RegulatorRole.sol\":731:830  function addRegulator(address account) public onlyRegulator {... */\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n    tag_17:\n        /* \"contracts/Roles.sol\":354:355  0 */\n      0x00\n        /* \"contracts/Roles.sol\":335:356  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":335:342  account */\n      dup2\n        /* \"contracts/Roles.sol\":335:356  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":327:357  require(account != address(0)) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"contracts/Roles.sol\":376:394  has(role, account) */\n      tag_32\n        /* \"contracts/Roles.sol\":380:384  role */\n      dup3\n        /* \"contracts/Roles.sol\":386:393  account */\n      dup3\n        /* \"contracts/Roles.sol\":376:379  has */\n      tag_23\n        /* \"contracts/Roles.sol\":376:394  has(role, account) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/Roles.sol\":375:394  !has(role, account) */\n      iszero\n        /* \"contracts/Roles.sol\":367:395  require(!has(role, account)) */\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n        /* \"contracts/Roles.sol\":429:433  true */\n      0x01\n        /* \"contracts/Roles.sol\":406:410  role */\n      dup3\n        /* \"contracts/Roles.sol\":406:417  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":418:425  account */\n      dup4\n        /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Roles.sol\":406:433  role.bearer[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/RegulatorRole.sol\":1320:1455  function _removeRegulator(address account) internal {... */\n    tag_20:\n        /* \"contracts/RegulatorRole.sol\":1382:1408  regulators.remove(account) */\n      tag_35\n        /* \"contracts/RegulatorRole.sol\":1400:1407  account */\n      dup2\n        /* \"contracts/RegulatorRole.sol\":1382:1392  regulators */\n      0x00\n        /* \"contracts/RegulatorRole.sol\":1382:1399  regulators.remove */\n      tag_36\n      swap1\n        /* \"contracts/RegulatorRole.sol\":1382:1408  regulators.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_35:\n        /* \"contracts/RegulatorRole.sol\":1440:1447  account */\n      dup1\n        /* \"contracts/RegulatorRole.sol\":1423:1448  RegulatorRemoved(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc8ecc453f78c13ccc7596603b61935f29b99dc15bb91b91647e1ccf2469ad00a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/RegulatorRole.sol\":1320:1455  function _removeRegulator(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\n    tag_23:\n        /* \"contracts/Roles.sol\":882:886  bool */\n      0x00\n        /* \"contracts/Roles.sol\":929:930  0 */\n      dup1\n        /* \"contracts/Roles.sol\":910:931  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":910:917  account */\n      dup3\n        /* \"contracts/Roles.sol\":910:931  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":902:932  require(account != address(0)) */\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n        /* \"contracts/Roles.sol\":949:953  role */\n      dup3\n        /* \"contracts/Roles.sol\":949:960  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":961:968  account */\n      dup4\n        /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Roles.sol\":942:969  return role.bearer[account] */\n      swap1\n      pop\n        /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/RegulatorRole.sol\":1084:1211  function _addRegulator(address account) internal {... */\n    tag_29:\n        /* \"contracts/RegulatorRole.sol\":1143:1166  regulators.add(account) */\n      tag_40\n        /* \"contracts/RegulatorRole.sol\":1158:1165  account */\n      dup2\n        /* \"contracts/RegulatorRole.sol\":1143:1153  regulators */\n      0x00\n        /* \"contracts/RegulatorRole.sol\":1143:1157  regulators.add */\n      tag_17\n      swap1\n        /* \"contracts/RegulatorRole.sol\":1143:1166  regulators.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_40:\n        /* \"contracts/RegulatorRole.sol\":1196:1203  account */\n      dup1\n        /* \"contracts/RegulatorRole.sol\":1181:1204  RegulatorAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2860b5ba44f983f8f363ee6eeb3c24cbca3096803fbdd5129b9e253f01cac076\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/RegulatorRole.sol\":1084:1211  function _addRegulator(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n    tag_36:\n        /* \"contracts/Roles.sol\":612:613  0 */\n      0x00\n        /* \"contracts/Roles.sol\":593:614  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":593:600  account */\n      dup2\n        /* \"contracts/Roles.sol\":593:614  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":585:615  require(account != address(0)) */\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n        /* \"contracts/Roles.sol\":633:651  has(role, account) */\n      tag_43\n        /* \"contracts/Roles.sol\":637:641  role */\n      dup3\n        /* \"contracts/Roles.sol\":643:650  account */\n      dup3\n        /* \"contracts/Roles.sol\":633:636  has */\n      tag_23\n        /* \"contracts/Roles.sol\":633:651  has(role, account) */\n      jump\t// in\n    tag_43:\n        /* \"contracts/Roles.sol\":625:652  require(has(role, account)) */\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n        /* \"contracts/Roles.sol\":686:691  false */\n      0x00\n        /* \"contracts/Roles.sol\":663:667  role */\n      dup3\n        /* \"contracts/Roles.sol\":663:674  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":663:683  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":675:682  account */\n      dup4\n        /* \"contracts/Roles.sol\":663:683  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Roles.sol\":663:691  role.bearer[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_46:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_48\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_10:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":228:347   */\n    tag_51:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_54\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_46\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:596   */\n    tag_55:\n        /* \"#utility.yul\":568:589   */\n      tag_57\n        /* \"#utility.yul\":583:588   */\n      dup2\n        /* \"#utility.yul\":568:589   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":563:566   */\n      dup3\n        /* \"#utility.yul\":556:590   */\n      mstore\n        /* \"#utility.yul\":487:596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":602:812   */\n    tag_13:\n        /* \"#utility.yul\":689:693   */\n      0x00\n        /* \"#utility.yul\":727:729   */\n      0x20\n        /* \"#utility.yul\":716:725   */\n      dup3\n        /* \"#utility.yul\":712:730   */\n      add\n        /* \"#utility.yul\":704:730   */\n      swap1\n      pop\n        /* \"#utility.yul\":740:805   */\n      tag_60\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":791:800   */\n      dup4\n        /* \"#utility.yul\":787:804   */\n      add\n        /* \"#utility.yul\":778:784   */\n      dup5\n        /* \"#utility.yul\":740:805   */\n      tag_55\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":602:812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":899:995   */\n    tag_63:\n        /* \"#utility.yul\":936:943   */\n      0x00\n        /* \"#utility.yul\":965:989   */\n      tag_65\n        /* \"#utility.yul\":983:988   */\n      dup3\n        /* \"#utility.yul\":965:989   */\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":954:989   */\n      swap1\n      pop\n        /* \"#utility.yul\":899:995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1001:1091   */\n    tag_58:\n        /* \"#utility.yul\":1035:1042   */\n      0x00\n        /* \"#utility.yul\":1078:1083   */\n      dup2\n        /* \"#utility.yul\":1071:1084   */\n      iszero\n        /* \"#utility.yul\":1064:1085   */\n      iszero\n        /* \"#utility.yul\":1053:1085   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1097:1223   */\n    tag_66:\n        /* \"#utility.yul\":1134:1141   */\n      0x00\n        /* \"#utility.yul\":1174:1216   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1167:1172   */\n      dup3\n        /* \"#utility.yul\":1163:1217   */\n      and\n        /* \"#utility.yul\":1152:1217   */\n      swap1\n      pop\n        /* \"#utility.yul\":1097:1223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1352:1469   */\n    tag_53:\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1458:1459   */\n      dup1\n        /* \"#utility.yul\":1451:1463   */\n      revert\n        /* \"#utility.yul\":1475:1597   */\n    tag_49:\n        /* \"#utility.yul\":1548:1572   */\n      tag_73\n        /* \"#utility.yul\":1566:1571   */\n      dup2\n        /* \"#utility.yul\":1548:1572   */\n      tag_63\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1541:1546   */\n      dup2\n        /* \"#utility.yul\":1538:1573   */\n      eq\n        /* \"#utility.yul\":1528:1591   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1584:1585   */\n      dup1\n        /* \"#utility.yul\":1577:1589   */\n      revert\n        /* \"#utility.yul\":1528:1591   */\n    tag_74:\n        /* \"#utility.yul\":1475:1597   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204c88086734a98c954b785c2b28a6e52430fd28a6ee1d9afcfbb34f681153c41864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_236": {
									"entryPoint": null,
									"id": 236,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addRegulator_297": {
									"entryPoint": 37,
									"id": 297,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_357": {
									"entryPoint": 131,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_417": {
									"entryPoint": 309,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506100203361002560201b60201c565b6101c7565b61003d81600061008360201b6100e21790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f2860b5ba44f983f8f363ee6eeb3c24cbca3096803fbdd5129b9e253f01cac07660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100bd57600080fd5b6100cd828261013560201b60201c565b156100d757600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561017057600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61047b806101d66000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631beadbe21461004657806354fc916914610050578063ac63f3c714610080575b600080fd5b61004e61009c565b005b61006a60048036038101906100659190610394565b6100a7565b60405161007791906103d0565b60405180910390f35b61009a60048036038101906100959190610394565b6100c4565b005b6100a53361018e565b565b60006100bd8260006101e890919063ffffffff16565b9050919050565b6100cd336100a7565b6100d657600080fd5b6100df8161027a565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561011c57600080fd5b61012682826101e8565b1561013057600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6101a28160006102d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fc8ecc453f78c13ccc7596603b61935f29b99dc15bb91b91647e1ccf2469ad00a60405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561022357600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61028e8160006100e290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f2860b5ba44f983f8f363ee6eeb3c24cbca3096803fbdd5129b9e253f01cac07660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561030e57600080fd5b61031882826101e8565b61032157600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008135905061038e8161042e565b92915050565b6000602082840312156103aa576103a9610429565b5b60006103b88482850161037f565b91505092915050565b6103ca816103fd565b82525050565b60006020820190506103e560008301846103c1565b92915050565b60006103f682610409565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610437816103eb565b811461044257600080fd5b5056fea26469706673582212204c88086734a98c954b785c2b28a6e52430fd28a6ee1d9afcfbb34f681153c41864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20 CALLER PUSH2 0x25 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x3D DUP2 PUSH1 0x0 PUSH2 0x83 PUSH1 0x20 SHL PUSH2 0xE2 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2860B5BA44F983F8F363EE6EEB3C24CBCA3096803FBDD5129B9E253F01CAC076 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD DUP3 DUP3 PUSH2 0x135 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47B DUP1 PUSH2 0x1D6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1BEADBE2 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x54FC9169 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xAC63F3C7 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH2 0xC4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA5 CALLER PUSH2 0x18E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD DUP3 PUSH1 0x0 PUSH2 0x1E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD CALLER PUSH2 0xA7 JUMP JUMPDEST PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF DUP2 PUSH2 0x27A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x126 DUP3 DUP3 PUSH2 0x1E8 JUMP JUMPDEST ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1A2 DUP2 PUSH1 0x0 PUSH2 0x2D4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8ECC453F78C13CCC7596603B61935F29B99DC15BB91B91647E1CCF2469AD00A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28E DUP2 PUSH1 0x0 PUSH2 0xE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2860B5BA44F983F8F363EE6EEB3C24CBCA3096803FBDD5129B9E253F01CAC076 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x318 DUP3 DUP3 PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38E DUP2 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0x429 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B8 DUP5 DUP3 DUP6 ADD PUSH2 0x37F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CA DUP2 PUSH2 0x3FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F6 DUP3 PUSH2 0x409 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x3EB JUMP JUMPDEST DUP2 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C DUP9 ADDMOD PUSH8 0x34A98C954B785C2B 0x28 0xA6 0xE5 0x24 ADDRESS REVERT 0x28 0xA6 0xEE SAR SWAP11 0xFC 0xFB 0xB3 0x4F PUSH9 0x1153C41864736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "49:1408:2:-:0;;;252:63;;;;;;;;;;283:25;297:10;283:13;;;:25;;:::i;:::-;49:1408;;1084:127;1143:23;1158:7;1143:10;:14;;;;;;:23;;;;:::i;:::-;1196:7;1181:23;;;;;;;;;;;;1084:127;:::o;259:181:3:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;786:190::-;882:4;929:1;910:21;;:7;:21;;;;902:30;;;;;;949:4;:11;;:20;961:7;949:20;;;;;;;;;;;;;;;;;;;;;;;;;942:27;;786:190;;;;:::o;49:1408:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addRegulator_297": {
									"entryPoint": 634,
									"id": 297,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeRegulator_313": {
									"entryPoint": 398,
									"id": 313,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRegulator_272": {
									"entryPoint": 196,
									"id": 272,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_357": {
									"entryPoint": 226,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_417": {
									"entryPoint": 488,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isRegulator_260": {
									"entryPoint": 167,
									"id": 260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@remove_391": {
									"entryPoint": 724,
									"id": 391,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceRegulator_281": {
									"entryPoint": 156,
									"id": 281,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1600:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:5"
															},
															"nodeType": "YulIf",
															"src": "228:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:5",
														"type": ""
													}
												],
												"src": "152:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "563:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "583:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "568:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "568:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "534:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "541:3:5",
														"type": ""
													}
												],
												"src": "487:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "694:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "704:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "716:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "727:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "712:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "704:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "778:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "791:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "802:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "787:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "787:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "740:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "740:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "740:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "666:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "678:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "689:4:5",
														"type": ""
													}
												],
												"src": "602:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "858:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "868:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "884:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "851:6:5",
														"type": ""
													}
												],
												"src": "818:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "944:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "954:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "983:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "965:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "954:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "926:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "936:7:5",
														"type": ""
													}
												],
												"src": "899:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1043:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1053:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1078:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1071:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1071:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1053:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1025:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1035:7:5",
														"type": ""
													}
												],
												"src": "1001:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1142:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1152:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1167:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1174:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1163:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1152:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1124:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1134:7:5",
														"type": ""
													}
												],
												"src": "1097:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1318:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1335:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1328:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1328:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1229:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1441:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1458:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1461:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1451:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1352:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1518:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1575:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1584:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1587:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1577:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1577:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1577:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1541:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1566:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1548:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1548:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1538:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1538:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:43:5"
															},
															"nodeType": "YulIf",
															"src": "1528:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1511:5:5",
														"type": ""
													}
												],
												"src": "1475:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80631beadbe21461004657806354fc916914610050578063ac63f3c714610080575b600080fd5b61004e61009c565b005b61006a60048036038101906100659190610394565b6100a7565b60405161007791906103d0565b60405180910390f35b61009a60048036038101906100959190610394565b6100c4565b005b6100a53361018e565b565b60006100bd8260006101e890919063ffffffff16565b9050919050565b6100cd336100a7565b6100d657600080fd5b6100df8161027a565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561011c57600080fd5b61012682826101e8565b1561013057600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6101a28160006102d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fc8ecc453f78c13ccc7596603b61935f29b99dc15bb91b91647e1ccf2469ad00a60405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561022357600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61028e8160006100e290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f2860b5ba44f983f8f363ee6eeb3c24cbca3096803fbdd5129b9e253f01cac07660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561030e57600080fd5b61031882826101e8565b61032157600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008135905061038e8161042e565b92915050565b6000602082840312156103aa576103a9610429565b5b60006103b88482850161037f565b91505092915050565b6103ca816103fd565b82525050565b60006020820190506103e560008301846103c1565b92915050565b60006103f682610409565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610437816103eb565b811461044257600080fd5b5056fea26469706673582212204c88086734a98c954b785c2b28a6e52430fd28a6ee1d9afcfbb34f681153c41864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1BEADBE2 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x54FC9169 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xAC63F3C7 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH2 0xC4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA5 CALLER PUSH2 0x18E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD DUP3 PUSH1 0x0 PUSH2 0x1E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD CALLER PUSH2 0xA7 JUMP JUMPDEST PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF DUP2 PUSH2 0x27A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x126 DUP3 DUP3 PUSH2 0x1E8 JUMP JUMPDEST ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1A2 DUP2 PUSH1 0x0 PUSH2 0x2D4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8ECC453F78C13CCC7596603B61935F29B99DC15BB91B91647E1CCF2469AD00A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28E DUP2 PUSH1 0x0 PUSH2 0xE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2860B5BA44F983F8F363EE6EEB3C24CBCA3096803FBDD5129B9E253F01CAC076 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x318 DUP3 DUP3 PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38E DUP2 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0x429 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B8 DUP5 DUP3 DUP6 ADD PUSH2 0x37F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CA DUP2 PUSH2 0x3FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F6 DUP3 PUSH2 0x409 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x3EB JUMP JUMPDEST DUP2 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C DUP9 ADDMOD PUSH8 0x34A98C954B785C2B 0x28 0xA6 0xE5 0x24 ADDRESS REVERT 0x28 0xA6 0xEE SAR SWAP11 0xFC 0xFB 0xB3 0x4F PUSH9 0x1153C41864736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "49:1408:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;903:81;;;:::i;:::-;;553:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;731:99;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;903:81;949:28;966:10;949:16;:28::i;:::-;903:81::o;553:112::-;612:4;635:23;650:7;635:10;:14;;:23;;;;:::i;:::-;628:30;;553:112;;;:::o;731:99::-;447:23;459:10;447:11;:23::i;:::-;439:32;;;;;;801:22:::1;815:7;801:13;:22::i;:::-;731:99:::0;:::o;259:181:3:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;1320:135:2:-;1382:26;1400:7;1382:10;:17;;:26;;;;:::i;:::-;1440:7;1423:25;;;;;;;;;;;;1320:135;:::o;786:190:3:-;882:4;929:1;910:21;;:7;:21;;;;902:30;;;;;;949:4;:11;;:20;961:7;949:20;;;;;;;;;;;;;;;;;;;;;;;;;942:27;;786:190;;;;:::o;1084:127:2:-;1143:23;1158:7;1143:10;:14;;:23;;;;:::i;:::-;1196:7;1181:23;;;;;;;;;;;;1084:127;:::o;514:184:3:-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:109::-;568:21;583:5;568:21;:::i;:::-;563:3;556:34;487:109;;:::o;602:210::-;689:4;727:2;716:9;712:18;704:26;;740:65;802:1;791:9;787:17;778:6;740:65;:::i;:::-;602:210;;;;:::o;899:96::-;936:7;965:24;983:5;965:24;:::i;:::-;954:35;;899:96;;;:::o;1001:90::-;1035:7;1078:5;1071:13;1064:21;1053:32;;1001:90;;;:::o;1097:126::-;1134:7;1174:42;1167:5;1163:54;1152:65;;1097:126;;;:::o;1352:117::-;1461:1;1458;1451:12;1475:122;1548:24;1566:5;1548:24;:::i;:::-;1541:5;1538:35;1528:63;;1587:1;1584;1577:12;1528:63;1475:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "229400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addRegulator(address)": "infinite",
								"isRegulator(address)": "infinite",
								"renounceRegulator()": "infinite"
							},
							"internal": {
								"_addRegulator(address)": "infinite",
								"_removeRegulator(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 49,
									"end": 1457,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 49,
									"end": 1457,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 49,
									"end": 1457,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 252,
									"end": 315,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 252,
									"end": 315,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 252,
									"end": 315,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 252,
									"end": 315,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 315,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 252,
									"end": 315,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 315,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 252,
									"end": 315,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 252,
									"end": 315,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 315,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 252,
									"end": 315,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 283,
									"end": 308,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 297,
									"end": 307,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 283,
									"end": 296,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 283,
									"end": 296,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 283,
									"end": 296,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 283,
									"end": 308,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 283,
									"end": 308,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 283,
									"end": 308,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 283,
									"end": 308,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 283,
									"end": 308,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 49,
									"end": 1457,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 49,
									"end": 1457,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1084,
									"end": 1211,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1084,
									"end": 1211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1158,
									"end": 1165,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1153,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551633"
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1196,
									"end": 1203,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "PUSH",
									"source": 2,
									"value": "2860B5BA44F983F8F363EE6EEB3C24CBCA3096803FBDD5129B9E253F01CAC076"
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "LOG2",
									"source": 2
								},
								{
									"begin": 1084,
									"end": 1211,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1084,
									"end": 1211,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 259,
									"end": 440,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 259,
									"end": 440,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 354,
									"end": 355,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 335,
									"end": 356,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 335,
									"end": 356,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 335,
									"end": 342,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 335,
									"end": 356,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 335,
									"end": 356,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 335,
									"end": 356,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 335,
									"end": 356,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 327,
									"end": 357,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 357,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 327,
									"end": 357,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 376,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 380,
									"end": 384,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 386,
									"end": 393,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 376,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 376,
									"end": 379,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 376,
									"end": 379,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 376,
									"end": 394,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 376,
									"end": 394,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 375,
									"end": 394,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 367,
									"end": 395,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 395,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 367,
									"end": 395,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 429,
									"end": 433,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 406,
									"end": 410,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 406,
									"end": 417,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 417,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 425,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 433,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 406,
									"end": 433,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 406,
									"end": 433,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 259,
									"end": 440,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 259,
									"end": 440,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 259,
									"end": 440,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 786,
									"end": 976,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 786,
									"end": 976,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 882,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 930,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 910,
									"end": 931,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 910,
									"end": 917,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 910,
									"end": 931,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 902,
									"end": 932,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 932,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 902,
									"end": 932,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 949,
									"end": 953,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 949,
									"end": 960,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 960,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 968,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 942,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 942,
									"end": 969,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 49,
									"end": 1457,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 49,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 49,
									"end": 1457,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 49,
									"end": 1457,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 49,
									"end": 1457,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 49,
									"end": 1457,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 49,
									"end": 1457,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 49,
									"end": 1457,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 49,
									"end": 1457,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c88086734a98c954b785c2b28a6e52430fd28a6ee1d9afcfbb34f681153c41864736f6c63430008070033",
									".code": [
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH",
											"source": 2,
											"value": "1BEADBE2"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH",
											"source": 2,
											"value": "54FC9169"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH",
											"source": 2,
											"value": "AC63F3C7"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 49,
											"end": 1457,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 903,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 903,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 903,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 903,
											"end": 984,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 903,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 903,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 984,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 903,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 903,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 949,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 949,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 977,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 977,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 949,
											"end": 977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 984,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 612,
											"end": 616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 650,
											"end": 657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 635,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 635,
											"end": 649,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 635,
											"end": 658,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 635,
											"end": 658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 635,
											"end": 658,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 635,
											"end": 658,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 635,
											"end": 658,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 658,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 635,
											"end": 658,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 658,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 447,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 459,
											"end": 469,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 447,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 447,
											"end": 470,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 470,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 447,
											"end": 470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 439,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 439,
											"end": 471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 439,
											"end": 471,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 439,
											"end": 471,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 439,
											"end": 471,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 439,
											"end": 471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 801,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 815,
											"end": 822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 801,
											"end": 823,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 801,
											"end": 823,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 801,
											"end": 823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 259,
											"end": 440,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 259,
											"end": 440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 354,
											"end": 355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 356,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 356,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 335,
											"end": 342,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 335,
											"end": 356,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 356,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 335,
											"end": 356,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 335,
											"end": 356,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 380,
											"end": 384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 386,
											"end": 393,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 376,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 367,
											"end": 395,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 367,
											"end": 395,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 429,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 406,
											"end": 417,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 425,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 406,
											"end": 433,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 406,
											"end": 433,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 259,
											"end": 440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 259,
											"end": 440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 259,
											"end": 440,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1320,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1320,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1392,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1382,
											"end": 1399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "C8ECC453F78C13CCC7596603B61935F29B99DC15BB91B91647E1CCF2469AD00A"
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1455,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 786,
											"end": 976,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 786,
											"end": 976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 882,
											"end": 886,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 931,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 910,
											"end": 917,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 931,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 902,
											"end": 932,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 902,
											"end": 932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 949,
											"end": 953,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 949,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 968,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 942,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 942,
											"end": 969,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1084,
											"end": 1211,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1084,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1158,
											"end": 1165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "PUSH",
											"source": 2,
											"value": "2860B5BA44F983F8F363EE6EEB3C24CBCA3096803FBDD5129B9E253F01CAC076"
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1211,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 514,
											"end": 698,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 514,
											"end": 698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 593,
											"end": 600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 593,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 593,
											"end": 614,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 593,
											"end": 614,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 585,
											"end": 615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 615,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 585,
											"end": 615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 633,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 637,
											"end": 641,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 643,
											"end": 650,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 633,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 625,
											"end": 652,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 652,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 625,
											"end": 652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 686,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 663,
											"end": 674,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 682,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 514,
											"end": 698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 514,
											"end": 698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 514,
											"end": 698,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 563,
											"end": 566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 556,
											"end": 590,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 602,
											"end": 812,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 602,
											"end": 812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 689,
											"end": 693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 740,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 800,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 787,
											"end": 804,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 778,
											"end": 784,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 740,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 602,
											"end": 812,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 995,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 899,
											"end": 995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 936,
											"end": 943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 983,
											"end": 988,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 965,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 954,
											"end": 989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 954,
											"end": 989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 899,
											"end": 995,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 899,
											"end": 995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 899,
											"end": 995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 899,
											"end": 995,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1083,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1216,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1352,
											"end": 1469,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1352,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1463,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1573,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addRegulator(address)": "ac63f3c7",
							"isRegulator(address)": "54fc9169",
							"renounceRegulator()": "1beadbe2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RegulatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RegulatorRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addRegulator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isRegulator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceRegulator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RegulatorRole.sol\":\"RegulatorRole\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/RegulatorRole.sol\":{\"keccak256\":\"0x09ee07d9405c456dffa5ee0968631413cc1ac8637c9bb86bf591dd2022fe4481\",\"urls\":[\"bzz-raw://e745a51fe118d18336c667cd943db0eec2eb1eb78de3b32acdc56056bfd066da\",\"dweb:/ipfs/QmZ31ewimYbVgK37FmGS1Zh7eUd34kEBu1NmiN6C8qFXnf\"]},\"contracts/Roles.sol\":{\"keccak256\":\"0xdf61e4d307963240fa2c76b34dc7d740e612a18bd6e7d12bd3a1d477f99b7cba\",\"urls\":[\"bzz-raw://2c4d1c7d8de02ef9ee8940593b7e12b098a6b960cdd0ad702d693591beaf4c01\",\"dweb:/ipfs/QmS69k5xbqDfPm47CEwapAYKMs5XgfWBNTuLegkNbHyzHu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 227,
								"contract": "contracts/RegulatorRole.sol:RegulatorRole",
								"label": "regulators",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)322_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Role)322_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 321,
										"contract": "contracts/RegulatorRole.sol:RegulatorRole",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Roles.sol": {
				"Roles": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing addresses assigned to a Role.",
						"kind": "dev",
						"methods": {},
						"title": "Roles",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Roles.sol\":109:978  library Roles {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Roles.sol\":109:978  library Roles {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d26a50a0b896f7c1027a60bd8e388bbd0ba7fea82da4b3a03d1293e02f2dd55364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d26a50a0b896f7c1027a60bd8e388bbd0ba7fea82da4b3a03d1293e02f2dd55364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 PUSH11 0x50A0B896F7C1027A60BD8E CODESIZE DUP12 0xBD SIGNEXTEND 0xA7 INVALID 0xA8 0x2D LOG4 0xB3 LOG0 RETURNDATASIZE SLT SWAP4 0xE0 0x2F 0x2D 0xD5 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "109:869:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d26a50a0b896f7c1027a60bd8e388bbd0ba7fea82da4b3a03d1293e02f2dd55364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 PUSH11 0x50A0B896F7C1027A60BD8E CODESIZE DUP12 0xBD SIGNEXTEND 0xA7 INVALID 0xA8 0x2D LOG4 0xB3 LOG0 RETURNDATASIZE SLT SWAP4 0xE0 0x2F 0x2D 0xD5 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "109:869:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(struct Roles.Role storage pointer,address)": "infinite",
								"has(struct Roles.Role storage pointer,address)": "infinite",
								"remove(struct Roles.Role storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 978,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 109,
									"end": 978,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 109,
									"end": 978,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d26a50a0b896f7c1027a60bd8e388bbd0ba7fea82da4b3a03d1293e02f2dd55364736f6c63430008070033",
									".code": [
										{
											"begin": 109,
											"end": 978,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 109,
											"end": 978,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 109,
											"end": 978,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 109,
											"end": 978,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 978,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 978,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 109,
											"end": 978,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 978,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 109,
											"end": 978,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing addresses assigned to a Role.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Roles\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Roles.sol\":\"Roles\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Roles.sol\":{\"keccak256\":\"0xdf61e4d307963240fa2c76b34dc7d740e612a18bd6e7d12bd3a1d477f99b7cba\",\"urls\":[\"bzz-raw://2c4d1c7d8de02ef9ee8940593b7e12b098a6b960cdd0ad702d693591beaf4c01\",\"dweb:/ipfs/QmS69k5xbqDfPm47CEwapAYKMs5XgfWBNTuLegkNbHyzHu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SupplyChain.sol": {
				"SupplyChain": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "upc",
									"type": "uint256"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "upc",
									"type": "uint256"
								}
							],
							"name": "Available",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "upc",
									"type": "uint256"
								}
							],
							"name": "Bought",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "BuyerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "BuyerRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "PharmaAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "PharmaRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "upc",
									"type": "uint256"
								}
							],
							"name": "Produced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "RegulatorAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "RegulatorRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "upc",
									"type": "uint256"
								}
							],
							"name": "SentToMarket",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "upc",
									"type": "uint256"
								}
							],
							"name": "SentToVerification",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "upc",
									"type": "uint256"
								}
							],
							"name": "Tested",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addBuyer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addPharma",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addRegulator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBuyer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isPharma",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isRegulator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kill",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_upc",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_originPharmaID",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_originPharmaName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_originPharmaInformation",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_originPharmaCountry",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_productName",
									"type": "string"
								}
							],
							"name": "produceMedicine",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceBuyer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renouncePharma",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceRegulator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_upc",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_regulatorId",
									"type": "address"
								}
							],
							"name": "sendToRegulation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_upc",
									"type": "uint256"
								}
							],
							"name": "testMedicine",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SupplyChain.sol\":110:5284  contract SupplyChain is BuyerRole, RegulatorRole, PharmaRole {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SupplyChain.sol\":3257:3323  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/BuyerRole.sol\":267:288  _addBuyer(msg.sender) */\n  tag_7\n    /* \"contracts/BuyerRole.sol\":277:287  msg.sender */\n  caller\n    /* \"contracts/BuyerRole.sol\":267:276  _addBuyer */\n  shl(0x20, tag_8)\n    /* \"contracts/BuyerRole.sol\":267:288  _addBuyer(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/RegulatorRole.sol\":283:308  _addRegulator(msg.sender) */\n  tag_10\n    /* \"contracts/RegulatorRole.sol\":297:307  msg.sender */\n  caller\n    /* \"contracts/RegulatorRole.sol\":283:296  _addRegulator */\n  shl(0x20, tag_11)\n    /* \"contracts/RegulatorRole.sol\":283:308  _addRegulator(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"contracts/PharmaRole.sol\":271:293  _addPharma(msg.sender) */\n  tag_13\n    /* \"contracts/PharmaRole.sol\":282:292  msg.sender */\n  caller\n    /* \"contracts/PharmaRole.sol\":271:281  _addPharma */\n  shl(0x20, tag_14)\n    /* \"contracts/PharmaRole.sol\":271:293  _addPharma(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"contracts/SupplyChain.sol\":3289:3299  msg.sender */\n  caller\n    /* \"contracts/SupplyChain.sol\":3281:3286  owner */\n  0x03\n  0x00\n    /* \"contracts/SupplyChain.sol\":3281:3299  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SupplyChain.sol\":3315:3316  1 */\n  0x01\n    /* \"contracts/SupplyChain.sol\":3309:3312  sku */\n  0x04\n    /* \"contracts/SupplyChain.sol\":3309:3316  sku = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/SupplyChain.sol\":110:5284  contract SupplyChain is BuyerRole, RegulatorRole, PharmaRole {... */\n  jump(tag_16)\n    /* \"contracts/BuyerRole.sol\":1008:1123  function _addBuyer(address account) internal {... */\ntag_8:\n    /* \"contracts/BuyerRole.sol\":1063:1082  buyers.add(account) */\n  tag_18\n    /* \"contracts/BuyerRole.sol\":1074:1081  account */\n  dup2\n    /* \"contracts/BuyerRole.sol\":1063:1069  buyers */\n  0x00\n    /* \"contracts/BuyerRole.sol\":1063:1073  buyers.add */\n  or(tag_0_61, shl(0x20, tag_19))\n  swap1\n    /* \"contracts/BuyerRole.sol\":1063:1082  buyers.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/BuyerRole.sol\":1108:1115  account */\n  dup1\n    /* \"contracts/BuyerRole.sol\":1097:1116  BuyerAdded(account) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/BuyerRole.sol\":1008:1123  function _addBuyer(address account) internal {... */\n  pop\n  jump\t// out\n    /* \"contracts/RegulatorRole.sol\":1084:1211  function _addRegulator(address account) internal {... */\ntag_11:\n    /* \"contracts/RegulatorRole.sol\":1143:1166  regulators.add(account) */\n  tag_21\n    /* \"contracts/RegulatorRole.sol\":1158:1165  account */\n  dup2\n    /* \"contracts/RegulatorRole.sol\":1143:1153  regulators */\n  0x01\n    /* \"contracts/RegulatorRole.sol\":1143:1157  regulators.add */\n  or(tag_0_61, shl(0x20, tag_19))\n  swap1\n    /* \"contracts/RegulatorRole.sol\":1143:1166  regulators.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"contracts/RegulatorRole.sol\":1196:1203  account */\n  dup1\n    /* \"contracts/RegulatorRole.sol\":1181:1204  RegulatorAdded(account) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x2860b5ba44f983f8f363ee6eeb3c24cbca3096803fbdd5129b9e253f01cac076\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/RegulatorRole.sol\":1084:1211  function _addRegulator(address account) internal {... */\n  pop\n  jump\t// out\n    /* \"contracts/PharmaRole.sol\":1027:1145  function _addPharma(address account) internal {... */\ntag_14:\n    /* \"contracts/PharmaRole.sol\":1083:1103  pharmas.add(account) */\n  tag_23\n    /* \"contracts/PharmaRole.sol\":1095:1102  account */\n  dup2\n    /* \"contracts/PharmaRole.sol\":1083:1090  pharmas */\n  0x02\n    /* \"contracts/PharmaRole.sol\":1083:1094  pharmas.add */\n  or(tag_0_61, shl(0x20, tag_19))\n  swap1\n    /* \"contracts/PharmaRole.sol\":1083:1103  pharmas.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"contracts/PharmaRole.sol\":1130:1137  account */\n  dup1\n    /* \"contracts/PharmaRole.sol\":1118:1138  PharmaAdded(account) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x36179de14e9e7cbce2e0a64264f3eb82e80b70aac44ff098d9c6f70b1d7d6595\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/PharmaRole.sol\":1027:1145  function _addPharma(address account) internal {... */\n  pop\n  jump\t// out\n    /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\ntag_19:\n    /* \"contracts/Roles.sol\":354:355  0 */\n  0x00\n    /* \"contracts/Roles.sol\":335:356  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Roles.sol\":335:342  account */\n  dup2\n    /* \"contracts/Roles.sol\":335:356  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Roles.sol\":327:357  require(account != address(0)) */\n  tag_25\n  jumpi\n  0x00\n  dup1\n  revert\ntag_25:\n    /* \"contracts/Roles.sol\":376:394  has(role, account) */\n  tag_26\n    /* \"contracts/Roles.sol\":380:384  role */\n  dup3\n    /* \"contracts/Roles.sol\":386:393  account */\n  dup3\n    /* \"contracts/Roles.sol\":376:379  has */\n  shl(0x20, tag_27)\n    /* \"contracts/Roles.sol\":376:394  has(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"contracts/Roles.sol\":375:394  !has(role, account) */\n  iszero\n    /* \"contracts/Roles.sol\":367:395  require(!has(role, account)) */\n  tag_28\n  jumpi\n  0x00\n  dup1\n  revert\ntag_28:\n    /* \"contracts/Roles.sol\":429:433  true */\n  0x01\n    /* \"contracts/Roles.sol\":406:410  role */\n  dup3\n    /* \"contracts/Roles.sol\":406:417  role.bearer */\n  0x00\n  add\n    /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n  0x00\n    /* \"contracts/Roles.sol\":418:425  account */\n  dup4\n    /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/Roles.sol\":406:433  role.bearer[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\ntag_27:\n    /* \"contracts/Roles.sol\":882:886  bool */\n  0x00\n    /* \"contracts/Roles.sol\":929:930  0 */\n  dup1\n    /* \"contracts/Roles.sol\":910:931  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Roles.sol\":910:917  account */\n  dup3\n    /* \"contracts/Roles.sol\":910:931  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Roles.sol\":902:932  require(account != address(0)) */\n  tag_30\n  jumpi\n  0x00\n  dup1\n  revert\ntag_30:\n    /* \"contracts/Roles.sol\":949:953  role */\n  dup3\n    /* \"contracts/Roles.sol\":949:960  role.bearer */\n  0x00\n  add\n    /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n  0x00\n    /* \"contracts/Roles.sol\":961:968  account */\n  dup4\n    /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/Roles.sol\":942:969  return role.bearer[account] */\n  swap1\n  pop\n    /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SupplyChain.sol\":110:5284  contract SupplyChain is BuyerRole, RegulatorRole, PharmaRole {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SupplyChain.sol\":110:5284  contract SupplyChain is BuyerRole, RegulatorRole, PharmaRole {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64c0daea\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xac63f3c7\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xac63f3c7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbbf89803\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc204a0cf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd1e4fd0f\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x64c0daea\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x81612e4f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8e2b65d7\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x0c5484d7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1b90c4be\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1beadbe2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2a55feec\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x41c0e1b5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x54fc9169\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SupplyChain.sol\":4520:4709  function testMedicine(uint _upc)... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/PharmaRole.sol\":698:788  function addPharma(address account) public onlyPharma {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/RegulatorRole.sol\":903:984  function renounceRegulator() public {... */\n    tag_5:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/BuyerRole.sol\":521:625  function isBuyer(address account) public view returns (bool) {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SupplyChain.sol\":3373:3490  function kill() public {... */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/RegulatorRole.sol\":553:665  function isRegulator(address account) public view returns (bool) {... */\n    tag_8:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SupplyChain.sol\":3592:4428  function produceMedicine(... */\n    tag_9:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/PharmaRole.sol\":858:933  function renouncePharma() public {... */\n    tag_10:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/SupplyChain.sol\":4855:5282  function sendToRegulation(uint _upc, address _regulatorId)... */\n    tag_11:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/RegulatorRole.sol\":731:830  function addRegulator(address account) public onlyRegulator {... */\n    tag_12:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/BuyerRole.sol\":687:774  function addBuyer(address account) public onlyBuyer {... */\n    tag_13:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/BuyerRole.sol\":843:916  function renounceBuyer() public {... */\n    tag_14:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/PharmaRole.sol\":529:635  function isPharma(address account) public view returns (bool) {... */\n    tag_15:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SupplyChain.sol\":4520:4709  function testMedicine(uint _upc)... */\n    tag_21:\n        /* \"contracts/SupplyChain.sol\":4585:4589  _upc */\n      dup1\n        /* \"contracts/SupplyChain.sol\":2530:2544  State.Produced */\n      0x00\n        /* \"contracts/SupplyChain.sol\":2505:2544  items[_upc].itemState == State.Produced */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_63\n      jumpi\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n    tag_63:\n        /* \"contracts/SupplyChain.sol\":2505:2510  items */\n      0x05\n        /* \"contracts/SupplyChain.sol\":2505:2516  items[_upc] */\n      0x00\n        /* \"contracts/SupplyChain.sol\":2511:2515  _upc */\n      dup4\n        /* \"contracts/SupplyChain.sol\":2505:2516  items[_upc] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SupplyChain.sol\":2505:2526  items[_upc].itemState */\n      0x09\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SupplyChain.sol\":2505:2544  items[_upc].itemState == State.Produced */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_66\n      jumpi\n      tag_67\n      tag_65\n      jump\t// in\n    tag_67:\n    tag_66:\n      eq\n        /* \"contracts/SupplyChain.sol\":2497:2545  require(items[_upc].itemState == State.Produced) */\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n        /* \"contracts/SupplyChain.sol\":4619:4623  _upc */\n      dup2\n        /* \"contracts/SupplyChain.sol\":1924:1929  items */\n      0x05\n        /* \"contracts/SupplyChain.sol\":1924:1935  items[_upc] */\n      0x00\n        /* \"contracts/SupplyChain.sol\":1930:1934  _upc */\n      dup3\n        /* \"contracts/SupplyChain.sol\":1924:1935  items[_upc] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SupplyChain.sol\":1924:1943  items[_upc].ownerID */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SupplyChain.sol\":1910:1943  msg.sender == items[_upc].ownerID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SupplyChain.sol\":1910:1920  msg.sender */\n      caller\n        /* \"contracts/SupplyChain.sol\":1910:1943  msg.sender == items[_upc].ownerID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SupplyChain.sol\":1902:1944  require(msg.sender == items[_upc].ownerID) */\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n        /* \"contracts/SupplyChain.sol\":4663:4675  State.Tested */\n      0x01\n        /* \"contracts/SupplyChain.sol\":4639:4644  items */\n      0x05\n        /* \"contracts/SupplyChain.sol\":4639:4650  items[_upc] */\n      0x00\n        /* \"contracts/SupplyChain.sol\":4645:4649  _upc */\n      dup6\n        /* \"contracts/SupplyChain.sol\":4639:4650  items[_upc] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SupplyChain.sol\":4639:4660  items[_upc].itemState */\n      0x09\n      add\n      0x00\n        /* \"contracts/SupplyChain.sol\":4639:4675  items[_upc].itemState = State.Tested */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x06\n      dup2\n      gt\n      iszero\n      tag_72\n      jumpi\n      tag_73\n      tag_65\n      jump\t// in\n    tag_73:\n    tag_72:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SupplyChain.sol\":4690:4702  Tested(_upc) */\n      0x06974b56d21c283fee3ed0905f648b2e17cb684cc8dc972ea99704bea957814e\n        /* \"contracts/SupplyChain.sol\":4697:4701  _upc */\n      dup4\n        /* \"contracts/SupplyChain.sol\":4690:4702  Tested(_upc) */\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SupplyChain.sol\":2555:2556  _ */\n      pop\n        /* \"contracts/SupplyChain.sol\":4520:4709  function testMedicine(uint _upc)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PharmaRole.sol\":698:788  function addPharma(address account) public onlyPharma {... */\n    tag_25:\n        /* \"contracts/PharmaRole.sol\":429:449  isPharma(msg.sender) */\n      tag_77\n        /* \"contracts/PharmaRole.sol\":438:448  msg.sender */\n      caller\n        /* \"contracts/PharmaRole.sol\":429:437  isPharma */\n      tag_59\n        /* \"contracts/PharmaRole.sol\":429:449  isPharma(msg.sender) */\n      jump\t// in\n    tag_77:\n        /* \"contracts/PharmaRole.sol\":421:450  require(isPharma(msg.sender)) */\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n        /* \"contracts/PharmaRole.sol\":762:781  _addPharma(account) */\n      tag_80\n        /* \"contracts/PharmaRole.sol\":773:780  account */\n      dup2\n        /* \"contracts/PharmaRole.sol\":762:772  _addPharma */\n      tag_81\n        /* \"contracts/PharmaRole.sol\":762:781  _addPharma(account) */\n      jump\t// in\n    tag_80:\n        /* \"contracts/PharmaRole.sol\":698:788  function addPharma(address account) public onlyPharma {... */\n      pop\n      jump\t// out\n        /* \"contracts/RegulatorRole.sol\":903:984  function renounceRegulator() public {... */\n    tag_27:\n        /* \"contracts/RegulatorRole.sol\":949:977  _removeRegulator(msg.sender) */\n      tag_83\n        /* \"contracts/RegulatorRole.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/RegulatorRole.sol\":949:965  _removeRegulator */\n      tag_84\n        /* \"contracts/RegulatorRole.sol\":949:977  _removeRegulator(msg.sender) */\n      jump\t// in\n    tag_83:\n        /* \"contracts/RegulatorRole.sol\":903:984  function renounceRegulator() public {... */\n      jump\t// out\n        /* \"contracts/BuyerRole.sol\":521:625  function isBuyer(address account) public view returns (bool) {... */\n    tag_30:\n        /* \"contracts/BuyerRole.sol\":576:580  bool */\n      0x00\n        /* \"contracts/BuyerRole.sol\":599:618  buyers.has(account) */\n      tag_86\n        /* \"contracts/BuyerRole.sol\":610:617  account */\n      dup3\n        /* \"contracts/BuyerRole.sol\":599:605  buyers */\n      0x00\n        /* \"contracts/BuyerRole.sol\":599:609  buyers.has */\n      tag_87\n      swap1\n        /* \"contracts/BuyerRole.sol\":599:618  buyers.has(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"contracts/BuyerRole.sol\":592:618  return buyers.has(account) */\n      swap1\n      pop\n        /* \"contracts/BuyerRole.sol\":521:625  function isBuyer(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SupplyChain.sol\":3373:3490  function kill() public {... */\n    tag_34:\n        /* \"contracts/SupplyChain.sol\":3424:3429  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SupplyChain.sol\":3410:3429  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SupplyChain.sol\":3410:3420  msg.sender */\n      caller\n        /* \"contracts/SupplyChain.sol\":3410:3429  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SupplyChain.sol\":3406:3484  if (msg.sender == owner) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"contracts/SupplyChain.sol\":3466:3471  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SupplyChain.sol\":3445:3473  selfdestruct(payable(owner)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"contracts/SupplyChain.sol\":3406:3484  if (msg.sender == owner) {... */\n    tag_89:\n        /* \"contracts/SupplyChain.sol\":3373:3490  function kill() public {... */\n      jump\t// out\n        /* \"contracts/RegulatorRole.sol\":553:665  function isRegulator(address account) public view returns (bool) {... */\n    tag_37:\n        /* \"contracts/RegulatorRole.sol\":612:616  bool */\n      0x00\n        /* \"contracts/RegulatorRole.sol\":635:658  regulators.has(account) */\n      tag_91\n        /* \"contracts/RegulatorRole.sol\":650:657  account */\n      dup3\n        /* \"contracts/RegulatorRole.sol\":635:645  regulators */\n      0x01\n        /* \"contracts/RegulatorRole.sol\":635:649  regulators.has */\n      tag_87\n      swap1\n        /* \"contracts/RegulatorRole.sol\":635:658  regulators.has(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_91:\n        /* \"contracts/RegulatorRole.sol\":628:658  return regulators.has(account) */\n      swap1\n      pop\n        /* \"contracts/RegulatorRole.sol\":553:665  function isRegulator(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SupplyChain.sol\":3592:4428  function produceMedicine(... */\n    tag_42:\n        /* \"contracts/PharmaRole.sol\":429:449  isPharma(msg.sender) */\n      tag_93\n        /* \"contracts/PharmaRole.sol\":438:448  msg.sender */\n      caller\n        /* \"contracts/PharmaRole.sol\":429:437  isPharma */\n      tag_59\n        /* \"contracts/PharmaRole.sol\":429:449  isPharma(msg.sender) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/PharmaRole.sol\":421:450  require(isPharma(msg.sender)) */\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n        /* \"contracts/SupplyChain.sol\":3886:4369  Item({... */\n      mload(0x40)\n      dup1\n      0x0180\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SupplyChain.sol\":3910:3913  sku */\n      sload(0x04)\n        /* \"contracts/SupplyChain.sol\":3886:4369  Item({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SupplyChain.sol\":3932:3936  _upc */\n      dup8\n        /* \"contracts/SupplyChain.sol\":3886:4369  Item({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SupplyChain.sol\":3959:3969  msg.sender */\n      caller\n        /* \"contracts/SupplyChain.sol\":3886:4369  Item({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SupplyChain.sol\":3999:4014  _originPharmaID */\n      dup7\n        /* \"contracts/SupplyChain.sol\":3886:4369  Item({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SupplyChain.sol\":4046:4063  _originPharmaName */\n      dup6\n        /* \"contracts/SupplyChain.sol\":3886:4369  Item({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SupplyChain.sol\":4102:4126  _originPharmaInformation */\n      dup5\n        /* \"contracts/SupplyChain.sol\":3886:4369  Item({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SupplyChain.sol\":4161:4181  _originPharmaCountry */\n      dup4\n        /* \"contracts/SupplyChain.sol\":3886:4369  Item({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SupplyChain.sol\":4208:4220  _productName */\n      dup3\n        /* \"contracts/SupplyChain.sol\":3886:4369  Item({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SupplyChain.sol\":4248:4249  0 */\n      0x00\n        /* \"contracts/SupplyChain.sol\":3886:4369  Item({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SupplyChain.sol\":4274:4288  State.Produced */\n      0x00\n        /* \"contracts/SupplyChain.sol\":3886:4369  Item({... */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_96\n      jumpi\n      tag_97\n      tag_65\n      jump\t// in\n    tag_97:\n    tag_96:\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SupplyChain.sol\":4323:4324  0 */\n      0x00\n        /* \"contracts/SupplyChain.sol\":3886:4369  Item({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SupplyChain.sol\":4356:4357  0 */\n      0x00\n        /* \"contracts/SupplyChain.sol\":3886:4369  Item({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/SupplyChain.sol\":3872:3877  items */\n      0x05\n        /* \"contracts/SupplyChain.sol\":3872:3883  items[_upc] */\n      0x00\n        /* \"contracts/SupplyChain.sol\":3878:3882  _upc */\n      dup9\n        /* \"contracts/SupplyChain.sol\":3872:3883  items[_upc] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SupplyChain.sol\":3872:4369  items[_upc] = Item({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_98\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_100:\n      pop\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_101\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_101:\n      pop\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_102\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_102:\n      pop\n      0x0100\n      dup3\n      add\n      mload\n      dup2\n      0x08\n      add\n      sstore\n      0x0120\n      dup3\n      add\n      mload\n      dup2\n      0x09\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x06\n      dup2\n      gt\n      iszero\n      tag_103\n      jumpi\n      tag_104\n      tag_65\n      jump\t// in\n    tag_104:\n    tag_103:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x0140\n      dup3\n      add\n      mload\n      dup2\n      0x09\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x0160\n      dup3\n      add\n      mload\n      dup2\n      0x0a\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/SupplyChain.sol\":4391:4392  1 */\n      0x01\n        /* \"contracts/SupplyChain.sol\":4385:4388  sku */\n      sload(0x04)\n        /* \"contracts/SupplyChain.sol\":4385:4392  sku + 1 */\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"contracts/SupplyChain.sol\":4379:4382  sku */\n      0x04\n        /* \"contracts/SupplyChain.sol\":4379:4392  sku = sku + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SupplyChain.sol\":4407:4421  Produced(_upc) */\n      0x9d1715437821cd9a90cba5d1a68995c308d9ad9afc754ed9a1cff429760796e6\n        /* \"contracts/SupplyChain.sol\":4416:4420  _upc */\n      dup7\n        /* \"contracts/SupplyChain.sol\":4407:4421  Produced(_upc) */\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SupplyChain.sol\":3592:4428  function produceMedicine(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PharmaRole.sol\":858:933  function renouncePharma() public {... */\n    tag_44:\n        /* \"contracts/PharmaRole.sol\":901:926  _removePharma(msg.sender) */\n      tag_109\n        /* \"contracts/PharmaRole.sol\":915:925  msg.sender */\n      caller\n        /* \"contracts/PharmaRole.sol\":901:914  _removePharma */\n      tag_110\n        /* \"contracts/PharmaRole.sol\":901:926  _removePharma(msg.sender) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/PharmaRole.sol\":858:933  function renouncePharma() public {... */\n      jump\t// out\n        /* \"contracts/SupplyChain.sol\":4855:5282  function sendToRegulation(uint _upc, address _regulatorId)... */\n    tag_48:\n        /* \"contracts/SupplyChain.sol\":4944:4948  _upc */\n      dup2\n        /* \"contracts/SupplyChain.sol\":2639:2651  State.Tested */\n      0x01\n        /* \"contracts/SupplyChain.sol\":2614:2651  items[_upc].itemState == State.Tested */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_112\n      jumpi\n      tag_113\n      tag_65\n      jump\t// in\n    tag_113:\n    tag_112:\n        /* \"contracts/SupplyChain.sol\":2614:2619  items */\n      0x05\n        /* \"contracts/SupplyChain.sol\":2614:2625  items[_upc] */\n      0x00\n        /* \"contracts/SupplyChain.sol\":2620:2624  _upc */\n      dup4\n        /* \"contracts/SupplyChain.sol\":2614:2625  items[_upc] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SupplyChain.sol\":2614:2635  items[_upc].itemState */\n      0x09\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SupplyChain.sol\":2614:2651  items[_upc].itemState == State.Tested */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_114\n      jumpi\n      tag_115\n      tag_65\n      jump\t// in\n    tag_115:\n    tag_114:\n      eq\n        /* \"contracts/SupplyChain.sol\":2606:2652  require(items[_upc].itemState == State.Tested) */\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n        /* \"contracts/PharmaRole.sol\":429:449  isPharma(msg.sender) */\n      tag_118\n        /* \"contracts/PharmaRole.sol\":438:448  msg.sender */\n      caller\n        /* \"contracts/PharmaRole.sol\":429:437  isPharma */\n      tag_59\n        /* \"contracts/PharmaRole.sol\":429:449  isPharma(msg.sender) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/PharmaRole.sol\":421:450  require(isPharma(msg.sender)) */\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n        /* \"contracts/SupplyChain.sol\":4997:5001  _upc */\n      dup3\n        /* \"contracts/SupplyChain.sol\":1924:1929  items */\n      0x05\n        /* \"contracts/SupplyChain.sol\":1924:1935  items[_upc] */\n      0x00\n        /* \"contracts/SupplyChain.sol\":1930:1934  _upc */\n      dup3\n        /* \"contracts/SupplyChain.sol\":1924:1935  items[_upc] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SupplyChain.sol\":1924:1943  items[_upc].ownerID */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SupplyChain.sol\":1910:1943  msg.sender == items[_upc].ownerID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SupplyChain.sol\":1910:1920  msg.sender */\n      caller\n        /* \"contracts/SupplyChain.sol\":1910:1943  msg.sender == items[_upc].ownerID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SupplyChain.sol\":1902:1944  require(msg.sender == items[_upc].ownerID) */\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n        /* \"contracts/SupplyChain.sol\":5025:5050  isRegulator(_regulatorId) */\n      tag_123\n        /* \"contracts/SupplyChain.sol\":5037:5049  _regulatorId */\n      dup4\n        /* \"contracts/SupplyChain.sol\":5025:5036  isRegulator */\n      tag_37\n        /* \"contracts/SupplyChain.sol\":5025:5050  isRegulator(_regulatorId) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/SupplyChain.sol\":5017:5086  require(isRegulator(_regulatorId), \"This address is not a Regulator\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/SupplyChain.sol\":5122:5134  _regulatorId */\n      dup3\n        /* \"contracts/SupplyChain.sol\":5096:5101  items */\n      0x05\n        /* \"contracts/SupplyChain.sol\":5096:5107  items[_upc] */\n      0x00\n        /* \"contracts/SupplyChain.sol\":5102:5106  _upc */\n      dup7\n        /* \"contracts/SupplyChain.sol\":5096:5107  items[_upc] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SupplyChain.sol\":5096:5119  items[_upc].regulatorId */\n      0x09\n      add\n      0x01\n        /* \"contracts/SupplyChain.sol\":5096:5134  items[_upc].regulatorId = _regulatorId */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SupplyChain.sol\":5168:5192  State.SentToVerification */\n      0x02\n        /* \"contracts/SupplyChain.sol\":5144:5149  items */\n      0x05\n        /* \"contracts/SupplyChain.sol\":5144:5155  items[_upc] */\n      0x00\n        /* \"contracts/SupplyChain.sol\":5150:5154  _upc */\n      dup7\n        /* \"contracts/SupplyChain.sol\":5144:5155  items[_upc] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SupplyChain.sol\":5144:5165  items[_upc].itemState */\n      0x09\n      add\n      0x00\n        /* \"contracts/SupplyChain.sol\":5144:5192  items[_upc].itemState = State.SentToVerification */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x06\n      dup2\n      gt\n      iszero\n      tag_127\n      jumpi\n      tag_128\n      tag_65\n      jump\t// in\n    tag_128:\n    tag_127:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SupplyChain.sol\":5224:5236  _regulatorId */\n      dup3\n        /* \"contracts/SupplyChain.sol\":5202:5207  items */\n      0x05\n        /* \"contracts/SupplyChain.sol\":5202:5213  items[_upc] */\n      0x00\n        /* \"contracts/SupplyChain.sol\":5208:5212  _upc */\n      dup7\n        /* \"contracts/SupplyChain.sol\":5202:5213  items[_upc] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SupplyChain.sol\":5202:5221  items[_upc].ownerID */\n      0x02\n      add\n      0x00\n        /* \"contracts/SupplyChain.sol\":5202:5236  items[_upc].ownerID = _regulatorId */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SupplyChain.sol\":5251:5275  SentToVerification(_upc) */\n      0xf12328dacf931f6c8c8c904ea8b9791d681613ed5ec258dce2866c311795c9ea\n        /* \"contracts/SupplyChain.sol\":5270:5274  _upc */\n      dup5\n        /* \"contracts/SupplyChain.sol\":5251:5275  SentToVerification(_upc) */\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/PharmaRole.sol\":460:461  _ */\n      pop\n        /* \"contracts/SupplyChain.sol\":4855:5282  function sendToRegulation(uint _upc, address _regulatorId)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/RegulatorRole.sol\":731:830  function addRegulator(address account) public onlyRegulator {... */\n    tag_51:\n        /* \"contracts/RegulatorRole.sol\":447:470  isRegulator(msg.sender) */\n      tag_131\n        /* \"contracts/RegulatorRole.sol\":459:469  msg.sender */\n      caller\n        /* \"contracts/RegulatorRole.sol\":447:458  isRegulator */\n      tag_37\n        /* \"contracts/RegulatorRole.sol\":447:470  isRegulator(msg.sender) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/RegulatorRole.sol\":439:471  require(isRegulator(msg.sender)) */\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n        /* \"contracts/RegulatorRole.sol\":801:823  _addRegulator(account) */\n      tag_134\n        /* \"contracts/RegulatorRole.sol\":815:822  account */\n      dup2\n        /* \"contracts/RegulatorRole.sol\":801:814  _addRegulator */\n      tag_135\n        /* \"contracts/RegulatorRole.sol\":801:823  _addRegulator(account) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/RegulatorRole.sol\":731:830  function addRegulator(address account) public onlyRegulator {... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyerRole.sol\":687:774  function addBuyer(address account) public onlyBuyer {... */\n    tag_54:\n        /* \"contracts/BuyerRole.sol\":423:442  isBuyer(msg.sender) */\n      tag_137\n        /* \"contracts/BuyerRole.sol\":431:441  msg.sender */\n      caller\n        /* \"contracts/BuyerRole.sol\":423:430  isBuyer */\n      tag_30\n        /* \"contracts/BuyerRole.sol\":423:442  isBuyer(msg.sender) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/BuyerRole.sol\":415:443  require(isBuyer(msg.sender)) */\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n        /* \"contracts/BuyerRole.sol\":749:767  _addBuyer(account) */\n      tag_140\n        /* \"contracts/BuyerRole.sol\":759:766  account */\n      dup2\n        /* \"contracts/BuyerRole.sol\":749:758  _addBuyer */\n      tag_141\n        /* \"contracts/BuyerRole.sol\":749:767  _addBuyer(account) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/BuyerRole.sol\":687:774  function addBuyer(address account) public onlyBuyer {... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyerRole.sol\":843:916  function renounceBuyer() public {... */\n    tag_56:\n        /* \"contracts/BuyerRole.sol\":885:909  _removeBuyer(msg.sender) */\n      tag_143\n        /* \"contracts/BuyerRole.sol\":898:908  msg.sender */\n      caller\n        /* \"contracts/BuyerRole.sol\":885:897  _removeBuyer */\n      tag_144\n        /* \"contracts/BuyerRole.sol\":885:909  _removeBuyer(msg.sender) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/BuyerRole.sol\":843:916  function renounceBuyer() public {... */\n      jump\t// out\n        /* \"contracts/PharmaRole.sol\":529:635  function isPharma(address account) public view returns (bool) {... */\n    tag_59:\n        /* \"contracts/PharmaRole.sol\":585:589  bool */\n      0x00\n        /* \"contracts/PharmaRole.sol\":608:628  pharmas.has(account) */\n      tag_146\n        /* \"contracts/PharmaRole.sol\":620:627  account */\n      dup3\n        /* \"contracts/PharmaRole.sol\":608:615  pharmas */\n      0x02\n        /* \"contracts/PharmaRole.sol\":608:619  pharmas.has */\n      tag_87\n      swap1\n        /* \"contracts/PharmaRole.sol\":608:628  pharmas.has(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"contracts/PharmaRole.sol\":601:628  return pharmas.has(account) */\n      swap1\n      pop\n        /* \"contracts/PharmaRole.sol\":529:635  function isPharma(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n    tag_61:\n        /* \"contracts/Roles.sol\":354:355  0 */\n      0x00\n        /* \"contracts/Roles.sol\":335:356  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":335:342  account */\n      dup2\n        /* \"contracts/Roles.sol\":335:356  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":327:357  require(account != address(0)) */\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n        /* \"contracts/Roles.sol\":376:394  has(role, account) */\n      tag_149\n        /* \"contracts/Roles.sol\":380:384  role */\n      dup3\n        /* \"contracts/Roles.sol\":386:393  account */\n      dup3\n        /* \"contracts/Roles.sol\":376:379  has */\n      tag_87\n        /* \"contracts/Roles.sol\":376:394  has(role, account) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/Roles.sol\":375:394  !has(role, account) */\n      iszero\n        /* \"contracts/Roles.sol\":367:395  require(!has(role, account)) */\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n        /* \"contracts/Roles.sol\":429:433  true */\n      0x01\n        /* \"contracts/Roles.sol\":406:410  role */\n      dup3\n        /* \"contracts/Roles.sol\":406:417  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":418:425  account */\n      dup4\n        /* \"contracts/Roles.sol\":406:426  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Roles.sol\":406:433  role.bearer[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PharmaRole.sol\":1027:1145  function _addPharma(address account) internal {... */\n    tag_81:\n        /* \"contracts/PharmaRole.sol\":1083:1103  pharmas.add(account) */\n      tag_152\n        /* \"contracts/PharmaRole.sol\":1095:1102  account */\n      dup2\n        /* \"contracts/PharmaRole.sol\":1083:1090  pharmas */\n      0x02\n        /* \"contracts/PharmaRole.sol\":1083:1094  pharmas.add */\n      tag_61\n      swap1\n        /* \"contracts/PharmaRole.sol\":1083:1103  pharmas.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"contracts/PharmaRole.sol\":1130:1137  account */\n      dup1\n        /* \"contracts/PharmaRole.sol\":1118:1138  PharmaAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x36179de14e9e7cbce2e0a64264f3eb82e80b70aac44ff098d9c6f70b1d7d6595\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PharmaRole.sol\":1027:1145  function _addPharma(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/RegulatorRole.sol\":1320:1455  function _removeRegulator(address account) internal {... */\n    tag_84:\n        /* \"contracts/RegulatorRole.sol\":1382:1408  regulators.remove(account) */\n      tag_154\n        /* \"contracts/RegulatorRole.sol\":1400:1407  account */\n      dup2\n        /* \"contracts/RegulatorRole.sol\":1382:1392  regulators */\n      0x01\n        /* \"contracts/RegulatorRole.sol\":1382:1399  regulators.remove */\n      tag_155\n      swap1\n        /* \"contracts/RegulatorRole.sol\":1382:1408  regulators.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/RegulatorRole.sol\":1440:1447  account */\n      dup1\n        /* \"contracts/RegulatorRole.sol\":1423:1448  RegulatorRemoved(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc8ecc453f78c13ccc7596603b61935f29b99dc15bb91b91647e1ccf2469ad00a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/RegulatorRole.sol\":1320:1455  function _removeRegulator(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\n    tag_87:\n        /* \"contracts/Roles.sol\":882:886  bool */\n      0x00\n        /* \"contracts/Roles.sol\":929:930  0 */\n      dup1\n        /* \"contracts/Roles.sol\":910:931  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":910:917  account */\n      dup3\n        /* \"contracts/Roles.sol\":910:931  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":902:932  require(account != address(0)) */\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n        /* \"contracts/Roles.sol\":949:953  role */\n      dup3\n        /* \"contracts/Roles.sol\":949:960  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":961:968  account */\n      dup4\n        /* \"contracts/Roles.sol\":949:969  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Roles.sol\":942:969  return role.bearer[account] */\n      swap1\n      pop\n        /* \"contracts/Roles.sol\":786:976  function has(Role storage role, address account)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PharmaRole.sol\":1248:1374  function _removePharma(address account) internal {... */\n    tag_110:\n        /* \"contracts/PharmaRole.sol\":1307:1330  pharmas.remove(account) */\n      tag_159\n        /* \"contracts/PharmaRole.sol\":1322:1329  account */\n      dup2\n        /* \"contracts/PharmaRole.sol\":1307:1314  pharmas */\n      0x02\n        /* \"contracts/PharmaRole.sol\":1307:1321  pharmas.remove */\n      tag_155\n      swap1\n        /* \"contracts/PharmaRole.sol\":1307:1330  pharmas.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_159:\n        /* \"contracts/PharmaRole.sol\":1359:1366  account */\n      dup1\n        /* \"contracts/PharmaRole.sol\":1345:1367  PharmaRemoved(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9a482e6375ef89327f2177c114191d0b88502ca4a7b961d211cc45786ee5107\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PharmaRole.sol\":1248:1374  function _removePharma(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/RegulatorRole.sol\":1084:1211  function _addRegulator(address account) internal {... */\n    tag_135:\n        /* \"contracts/RegulatorRole.sol\":1143:1166  regulators.add(account) */\n      tag_161\n        /* \"contracts/RegulatorRole.sol\":1158:1165  account */\n      dup2\n        /* \"contracts/RegulatorRole.sol\":1143:1153  regulators */\n      0x01\n        /* \"contracts/RegulatorRole.sol\":1143:1157  regulators.add */\n      tag_61\n      swap1\n        /* \"contracts/RegulatorRole.sol\":1143:1166  regulators.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_161:\n        /* \"contracts/RegulatorRole.sol\":1196:1203  account */\n      dup1\n        /* \"contracts/RegulatorRole.sol\":1181:1204  RegulatorAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2860b5ba44f983f8f363ee6eeb3c24cbca3096803fbdd5129b9e253f01cac076\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/RegulatorRole.sol\":1084:1211  function _addRegulator(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyerRole.sol\":1008:1123  function _addBuyer(address account) internal {... */\n    tag_141:\n        /* \"contracts/BuyerRole.sol\":1063:1082  buyers.add(account) */\n      tag_163\n        /* \"contracts/BuyerRole.sol\":1074:1081  account */\n      dup2\n        /* \"contracts/BuyerRole.sol\":1063:1069  buyers */\n      0x00\n        /* \"contracts/BuyerRole.sol\":1063:1073  buyers.add */\n      tag_61\n      swap1\n        /* \"contracts/BuyerRole.sol\":1063:1082  buyers.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"contracts/BuyerRole.sol\":1108:1115  account */\n      dup1\n        /* \"contracts/BuyerRole.sol\":1097:1116  BuyerAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/BuyerRole.sol\":1008:1123  function _addBuyer(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyerRole.sol\":1224:1347  function _removeBuyer(address account) internal {... */\n    tag_144:\n        /* \"contracts/BuyerRole.sol\":1282:1304  buyers.remove(account) */\n      tag_165\n        /* \"contracts/BuyerRole.sol\":1296:1303  account */\n      dup2\n        /* \"contracts/BuyerRole.sol\":1282:1288  buyers */\n      0x00\n        /* \"contracts/BuyerRole.sol\":1282:1295  buyers.remove */\n      tag_155\n      swap1\n        /* \"contracts/BuyerRole.sol\":1282:1304  buyers.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"contracts/BuyerRole.sol\":1332:1339  account */\n      dup1\n        /* \"contracts/BuyerRole.sol\":1319:1340  BuyerRemoved(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x83fd4cbc7bc934bdfbae994ac6e72fcc0e50abd6995c1949520e761ba650d582\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/BuyerRole.sol\":1224:1347  function _removeBuyer(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n    tag_155:\n        /* \"contracts/Roles.sol\":612:613  0 */\n      0x00\n        /* \"contracts/Roles.sol\":593:614  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":593:600  account */\n      dup2\n        /* \"contracts/Roles.sol\":593:614  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":585:615  require(account != address(0)) */\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n        /* \"contracts/Roles.sol\":633:651  has(role, account) */\n      tag_168\n        /* \"contracts/Roles.sol\":637:641  role */\n      dup3\n        /* \"contracts/Roles.sol\":643:650  account */\n      dup3\n        /* \"contracts/Roles.sol\":633:636  has */\n      tag_87\n        /* \"contracts/Roles.sol\":633:651  has(role, account) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/Roles.sol\":625:652  require(has(role, account)) */\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n        /* \"contracts/Roles.sol\":686:691  false */\n      0x00\n        /* \"contracts/Roles.sol\":663:667  role */\n      dup3\n        /* \"contracts/Roles.sol\":663:674  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":663:683  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":675:682  account */\n      dup4\n        /* \"contracts/Roles.sol\":663:683  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Roles.sol\":663:691  role.bearer[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n    tag_99:\n      dup3\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_173\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_172)\n    tag_173:\n      dup3\n      0x1f\n      lt\n      tag_174\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_172)\n    tag_174:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_172\n      jumpi\n      swap2\n      dup3\n      add\n    tag_175:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_176\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_175)\n    tag_176:\n    tag_172:\n      pop\n      swap1\n      pop\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      pop\n      swap1\n      jump\t// out\n    tag_178:\n    tag_179:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_179)\n    tag_180:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:419   */\n    tag_182:\n        /* \"#utility.yul\":85:90   */\n      0x00\n        /* \"#utility.yul\":110:176   */\n      tag_184\n        /* \"#utility.yul\":126:175   */\n      tag_185\n        /* \"#utility.yul\":168:174   */\n      dup5\n        /* \"#utility.yul\":126:175   */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":110:176   */\n      tag_187\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":101:176   */\n      swap1\n      pop\n        /* \"#utility.yul\":199:205   */\n      dup3\n        /* \"#utility.yul\":192:197   */\n      dup2\n        /* \"#utility.yul\":185:206   */\n      mstore\n        /* \"#utility.yul\":237:241   */\n      0x20\n        /* \"#utility.yul\":230:235   */\n      dup2\n        /* \"#utility.yul\":226:242   */\n      add\n        /* \"#utility.yul\":275:278   */\n      dup5\n        /* \"#utility.yul\":266:272   */\n      dup5\n        /* \"#utility.yul\":261:264   */\n      dup5\n        /* \"#utility.yul\":257:273   */\n      add\n        /* \"#utility.yul\":254:279   */\n      gt\n        /* \"#utility.yul\":251:363   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":282:361   */\n      tag_189\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":251:363   */\n    tag_188:\n        /* \"#utility.yul\":372:413   */\n      tag_191\n        /* \"#utility.yul\":406:412   */\n      dup5\n        /* \"#utility.yul\":401:404   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":372:413   */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":91:419   */\n      pop\n        /* \"#utility.yul\":7:419   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":425:564   */\n    tag_193:\n        /* \"#utility.yul\":471:476   */\n      0x00\n        /* \"#utility.yul\":509:515   */\n      dup2\n        /* \"#utility.yul\":496:516   */\n      calldataload\n        /* \"#utility.yul\":487:516   */\n      swap1\n      pop\n        /* \"#utility.yul\":525:558   */\n      tag_195\n        /* \"#utility.yul\":552:557   */\n      dup2\n        /* \"#utility.yul\":525:558   */\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":425:564   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":584:924   */\n    tag_197:\n        /* \"#utility.yul\":640:645   */\n      0x00\n        /* \"#utility.yul\":689:692   */\n      dup3\n        /* \"#utility.yul\":682:686   */\n      0x1f\n        /* \"#utility.yul\":674:680   */\n      dup4\n        /* \"#utility.yul\":670:687   */\n      add\n        /* \"#utility.yul\":666:693   */\n      slt\n        /* \"#utility.yul\":656:778   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":697:776   */\n      tag_200\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":656:778   */\n    tag_199:\n        /* \"#utility.yul\":814:820   */\n      dup2\n        /* \"#utility.yul\":801:821   */\n      calldataload\n        /* \"#utility.yul\":839:918   */\n      tag_202\n        /* \"#utility.yul\":914:917   */\n      dup5\n        /* \"#utility.yul\":906:912   */\n      dup3\n        /* \"#utility.yul\":899:903   */\n      0x20\n        /* \"#utility.yul\":891:897   */\n      dup7\n        /* \"#utility.yul\":887:904   */\n      add\n        /* \"#utility.yul\":839:918   */\n      tag_182\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":830:918   */\n      swap2\n      pop\n        /* \"#utility.yul\":646:924   */\n      pop\n        /* \"#utility.yul\":584:924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":930:1069   */\n    tag_203:\n        /* \"#utility.yul\":976:981   */\n      0x00\n        /* \"#utility.yul\":1014:1020   */\n      dup2\n        /* \"#utility.yul\":1001:1021   */\n      calldataload\n        /* \"#utility.yul\":992:1021   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1063   */\n      tag_205\n        /* \"#utility.yul\":1057:1062   */\n      dup2\n        /* \"#utility.yul\":1030:1063   */\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":930:1069   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1075:1404   */\n    tag_24:\n        /* \"#utility.yul\":1134:1140   */\n      0x00\n        /* \"#utility.yul\":1183:1185   */\n      0x20\n        /* \"#utility.yul\":1171:1180   */\n      dup3\n        /* \"#utility.yul\":1162:1169   */\n      dup5\n        /* \"#utility.yul\":1158:1181   */\n      sub\n        /* \"#utility.yul\":1154:1186   */\n      slt\n        /* \"#utility.yul\":1151:1270   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":1189:1268   */\n      tag_209\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1151:1270   */\n    tag_208:\n        /* \"#utility.yul\":1309:1310   */\n      0x00\n        /* \"#utility.yul\":1334:1387   */\n      tag_211\n        /* \"#utility.yul\":1379:1386   */\n      dup5\n        /* \"#utility.yul\":1370:1376   */\n      dup3\n        /* \"#utility.yul\":1359:1368   */\n      dup6\n        /* \"#utility.yul\":1355:1377   */\n      add\n        /* \"#utility.yul\":1334:1387   */\n      tag_193\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1324:1387   */\n      swap2\n      pop\n        /* \"#utility.yul\":1280:1397   */\n      pop\n        /* \"#utility.yul\":1075:1404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1410:1739   */\n    tag_20:\n        /* \"#utility.yul\":1469:1475   */\n      0x00\n        /* \"#utility.yul\":1518:1520   */\n      0x20\n        /* \"#utility.yul\":1506:1515   */\n      dup3\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1493:1516   */\n      sub\n        /* \"#utility.yul\":1489:1521   */\n      slt\n        /* \"#utility.yul\":1486:1605   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1524:1603   */\n      tag_214\n      tag_210\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1486:1605   */\n    tag_213:\n        /* \"#utility.yul\":1644:1645   */\n      0x00\n        /* \"#utility.yul\":1669:1722   */\n      tag_215\n        /* \"#utility.yul\":1714:1721   */\n      dup5\n        /* \"#utility.yul\":1705:1711   */\n      dup3\n        /* \"#utility.yul\":1694:1703   */\n      dup6\n        /* \"#utility.yul\":1690:1712   */\n      add\n        /* \"#utility.yul\":1669:1722   */\n      tag_203\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1659:1722   */\n      swap2\n      pop\n        /* \"#utility.yul\":1615:1732   */\n      pop\n        /* \"#utility.yul\":1410:1739   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1745:2219   */\n    tag_47:\n        /* \"#utility.yul\":1813:1819   */\n      0x00\n        /* \"#utility.yul\":1821:1827   */\n      dup1\n        /* \"#utility.yul\":1870:1872   */\n      0x40\n        /* \"#utility.yul\":1858:1867   */\n      dup4\n        /* \"#utility.yul\":1849:1856   */\n      dup6\n        /* \"#utility.yul\":1845:1868   */\n      sub\n        /* \"#utility.yul\":1841:1873   */\n      slt\n        /* \"#utility.yul\":1838:1957   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":1876:1955   */\n      tag_218\n      tag_210\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1838:1957   */\n    tag_217:\n        /* \"#utility.yul\":1996:1997   */\n      0x00\n        /* \"#utility.yul\":2021:2074   */\n      tag_219\n        /* \"#utility.yul\":2066:2073   */\n      dup6\n        /* \"#utility.yul\":2057:2063   */\n      dup3\n        /* \"#utility.yul\":2046:2055   */\n      dup7\n        /* \"#utility.yul\":2042:2064   */\n      add\n        /* \"#utility.yul\":2021:2074   */\n      tag_203\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2011:2074   */\n      swap3\n      pop\n        /* \"#utility.yul\":1967:2084   */\n      pop\n        /* \"#utility.yul\":2123:2125   */\n      0x20\n        /* \"#utility.yul\":2149:2202   */\n      tag_220\n        /* \"#utility.yul\":2194:2201   */\n      dup6\n        /* \"#utility.yul\":2185:2191   */\n      dup3\n        /* \"#utility.yul\":2174:2183   */\n      dup7\n        /* \"#utility.yul\":2170:2192   */\n      add\n        /* \"#utility.yul\":2149:2202   */\n      tag_193\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2139:2202   */\n      swap2\n      pop\n        /* \"#utility.yul\":2094:2212   */\n      pop\n        /* \"#utility.yul\":1745:2219   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2225:4002   */\n    tag_41:\n        /* \"#utility.yul\":2369:2375   */\n      0x00\n        /* \"#utility.yul\":2377:2383   */\n      dup1\n        /* \"#utility.yul\":2385:2391   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup1\n        /* \"#utility.yul\":2401:2407   */\n      0x00\n        /* \"#utility.yul\":2409:2415   */\n      dup1\n        /* \"#utility.yul\":2458:2461   */\n      0xc0\n        /* \"#utility.yul\":2446:2455   */\n      dup8\n        /* \"#utility.yul\":2437:2444   */\n      dup10\n        /* \"#utility.yul\":2433:2456   */\n      sub\n        /* \"#utility.yul\":2429:2462   */\n      slt\n        /* \"#utility.yul\":2426:2546   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":2465:2544   */\n      tag_223\n      tag_210\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2426:2546   */\n    tag_222:\n        /* \"#utility.yul\":2585:2586   */\n      0x00\n        /* \"#utility.yul\":2610:2663   */\n      tag_224\n        /* \"#utility.yul\":2655:2662   */\n      dup10\n        /* \"#utility.yul\":2646:2652   */\n      dup3\n        /* \"#utility.yul\":2635:2644   */\n      dup11\n        /* \"#utility.yul\":2631:2653   */\n      add\n        /* \"#utility.yul\":2610:2663   */\n      tag_203\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2600:2663   */\n      swap7\n      pop\n        /* \"#utility.yul\":2556:2673   */\n      pop\n        /* \"#utility.yul\":2712:2714   */\n      0x20\n        /* \"#utility.yul\":2738:2791   */\n      tag_225\n        /* \"#utility.yul\":2783:2790   */\n      dup10\n        /* \"#utility.yul\":2774:2780   */\n      dup3\n        /* \"#utility.yul\":2763:2772   */\n      dup11\n        /* \"#utility.yul\":2759:2781   */\n      add\n        /* \"#utility.yul\":2738:2791   */\n      tag_193\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2728:2791   */\n      swap6\n      pop\n        /* \"#utility.yul\":2683:2801   */\n      pop\n        /* \"#utility.yul\":2868:2870   */\n      0x40\n        /* \"#utility.yul\":2857:2866   */\n      dup8\n        /* \"#utility.yul\":2853:2871   */\n      add\n        /* \"#utility.yul\":2840:2872   */\n      calldataload\n        /* \"#utility.yul\":2899:2917   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2891:2897   */\n      dup2\n        /* \"#utility.yul\":2888:2918   */\n      gt\n        /* \"#utility.yul\":2885:3002   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":2921:3000   */\n      tag_227\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2885:3002   */\n    tag_226:\n        /* \"#utility.yul\":3026:3089   */\n      tag_229\n        /* \"#utility.yul\":3081:3088   */\n      dup10\n        /* \"#utility.yul\":3072:3078   */\n      dup3\n        /* \"#utility.yul\":3061:3070   */\n      dup11\n        /* \"#utility.yul\":3057:3079   */\n      add\n        /* \"#utility.yul\":3026:3089   */\n      tag_197\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3016:3089   */\n      swap5\n      pop\n        /* \"#utility.yul\":2811:3099   */\n      pop\n        /* \"#utility.yul\":3166:3168   */\n      0x60\n        /* \"#utility.yul\":3155:3164   */\n      dup8\n        /* \"#utility.yul\":3151:3169   */\n      add\n        /* \"#utility.yul\":3138:3170   */\n      calldataload\n        /* \"#utility.yul\":3197:3215   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3189:3195   */\n      dup2\n        /* \"#utility.yul\":3186:3216   */\n      gt\n        /* \"#utility.yul\":3183:3300   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":3219:3298   */\n      tag_231\n      tag_228\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3183:3300   */\n    tag_230:\n        /* \"#utility.yul\":3324:3387   */\n      tag_232\n        /* \"#utility.yul\":3379:3386   */\n      dup10\n        /* \"#utility.yul\":3370:3376   */\n      dup3\n        /* \"#utility.yul\":3359:3368   */\n      dup11\n        /* \"#utility.yul\":3355:3377   */\n      add\n        /* \"#utility.yul\":3324:3387   */\n      tag_197\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3314:3387   */\n      swap4\n      pop\n        /* \"#utility.yul\":3109:3397   */\n      pop\n        /* \"#utility.yul\":3464:3467   */\n      0x80\n        /* \"#utility.yul\":3453:3462   */\n      dup8\n        /* \"#utility.yul\":3449:3468   */\n      add\n        /* \"#utility.yul\":3436:3469   */\n      calldataload\n        /* \"#utility.yul\":3496:3514   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3488:3494   */\n      dup2\n        /* \"#utility.yul\":3485:3515   */\n      gt\n        /* \"#utility.yul\":3482:3599   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":3518:3597   */\n      tag_234\n      tag_228\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3482:3599   */\n    tag_233:\n        /* \"#utility.yul\":3623:3686   */\n      tag_235\n        /* \"#utility.yul\":3678:3685   */\n      dup10\n        /* \"#utility.yul\":3669:3675   */\n      dup3\n        /* \"#utility.yul\":3658:3667   */\n      dup11\n        /* \"#utility.yul\":3654:3676   */\n      add\n        /* \"#utility.yul\":3623:3686   */\n      tag_197\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":3613:3686   */\n      swap3\n      pop\n        /* \"#utility.yul\":3407:3696   */\n      pop\n        /* \"#utility.yul\":3763:3766   */\n      0xa0\n        /* \"#utility.yul\":3752:3761   */\n      dup8\n        /* \"#utility.yul\":3748:3767   */\n      add\n        /* \"#utility.yul\":3735:3768   */\n      calldataload\n        /* \"#utility.yul\":3795:3813   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3787:3793   */\n      dup2\n        /* \"#utility.yul\":3784:3814   */\n      gt\n        /* \"#utility.yul\":3781:3898   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":3817:3896   */\n      tag_237\n      tag_228\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3781:3898   */\n    tag_236:\n        /* \"#utility.yul\":3922:3985   */\n      tag_238\n        /* \"#utility.yul\":3977:3984   */\n      dup10\n        /* \"#utility.yul\":3968:3974   */\n      dup3\n        /* \"#utility.yul\":3957:3966   */\n      dup11\n        /* \"#utility.yul\":3953:3975   */\n      add\n        /* \"#utility.yul\":3922:3985   */\n      tag_197\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3912:3985   */\n      swap2\n      pop\n        /* \"#utility.yul\":3706:3995   */\n      pop\n        /* \"#utility.yul\":2225:4002   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":4008:4117   */\n    tag_239:\n        /* \"#utility.yul\":4089:4110   */\n      tag_241\n        /* \"#utility.yul\":4104:4109   */\n      dup2\n        /* \"#utility.yul\":4089:4110   */\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":4084:4087   */\n      dup3\n        /* \"#utility.yul\":4077:4111   */\n      mstore\n        /* \"#utility.yul\":4008:4117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4123:4489   */\n    tag_243:\n        /* \"#utility.yul\":4265:4268   */\n      0x00\n        /* \"#utility.yul\":4286:4353   */\n      tag_245\n        /* \"#utility.yul\":4350:4352   */\n      0x1f\n        /* \"#utility.yul\":4345:4348   */\n      dup4\n        /* \"#utility.yul\":4286:4353   */\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4279:4353   */\n      swap2\n      pop\n        /* \"#utility.yul\":4362:4455   */\n      tag_247\n        /* \"#utility.yul\":4451:4454   */\n      dup3\n        /* \"#utility.yul\":4362:4455   */\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4480:4482   */\n      0x20\n        /* \"#utility.yul\":4475:4478   */\n      dup3\n        /* \"#utility.yul\":4471:4483   */\n      add\n        /* \"#utility.yul\":4464:4483   */\n      swap1\n      pop\n        /* \"#utility.yul\":4123:4489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4495:4613   */\n    tag_249:\n        /* \"#utility.yul\":4582:4606   */\n      tag_251\n        /* \"#utility.yul\":4600:4605   */\n      dup2\n        /* \"#utility.yul\":4582:4606   */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4577:4580   */\n      dup3\n        /* \"#utility.yul\":4570:4607   */\n      mstore\n        /* \"#utility.yul\":4495:4613   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4619:4829   */\n    tag_32:\n        /* \"#utility.yul\":4706:4710   */\n      0x00\n        /* \"#utility.yul\":4744:4746   */\n      0x20\n        /* \"#utility.yul\":4733:4742   */\n      dup3\n        /* \"#utility.yul\":4729:4747   */\n      add\n        /* \"#utility.yul\":4721:4747   */\n      swap1\n      pop\n        /* \"#utility.yul\":4757:4822   */\n      tag_254\n        /* \"#utility.yul\":4819:4820   */\n      0x00\n        /* \"#utility.yul\":4808:4817   */\n      dup4\n        /* \"#utility.yul\":4804:4821   */\n      add\n        /* \"#utility.yul\":4795:4801   */\n      dup5\n        /* \"#utility.yul\":4757:4822   */\n      tag_239\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4619:4829   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4835:5254   */\n    tag_126:\n        /* \"#utility.yul\":5001:5005   */\n      0x00\n        /* \"#utility.yul\":5039:5041   */\n      0x20\n        /* \"#utility.yul\":5028:5037   */\n      dup3\n        /* \"#utility.yul\":5024:5042   */\n      add\n        /* \"#utility.yul\":5016:5042   */\n      swap1\n      pop\n        /* \"#utility.yul\":5088:5097   */\n      dup2\n        /* \"#utility.yul\":5082:5086   */\n      dup2\n        /* \"#utility.yul\":5078:5098   */\n      sub\n        /* \"#utility.yul\":5074:5075   */\n      0x00\n        /* \"#utility.yul\":5063:5072   */\n      dup4\n        /* \"#utility.yul\":5059:5076   */\n      add\n        /* \"#utility.yul\":5052:5099   */\n      mstore\n        /* \"#utility.yul\":5116:5247   */\n      tag_256\n        /* \"#utility.yul\":5242:5246   */\n      dup2\n        /* \"#utility.yul\":5116:5247   */\n      tag_243\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":5108:5247   */\n      swap1\n      pop\n        /* \"#utility.yul\":4835:5254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5260:5482   */\n    tag_75:\n        /* \"#utility.yul\":5353:5357   */\n      0x00\n        /* \"#utility.yul\":5391:5393   */\n      0x20\n        /* \"#utility.yul\":5380:5389   */\n      dup3\n        /* \"#utility.yul\":5376:5394   */\n      add\n        /* \"#utility.yul\":5368:5394   */\n      swap1\n      pop\n        /* \"#utility.yul\":5404:5475   */\n      tag_258\n        /* \"#utility.yul\":5472:5473   */\n      0x00\n        /* \"#utility.yul\":5461:5470   */\n      dup4\n        /* \"#utility.yul\":5457:5474   */\n      add\n        /* \"#utility.yul\":5448:5454   */\n      dup5\n        /* \"#utility.yul\":5404:5475   */\n      tag_249\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5260:5482   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5488:5617   */\n    tag_187:\n        /* \"#utility.yul\":5522:5528   */\n      0x00\n        /* \"#utility.yul\":5549:5569   */\n      tag_260\n      tag_261\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5539:5569   */\n      swap1\n      pop\n        /* \"#utility.yul\":5578:5611   */\n      tag_262\n        /* \"#utility.yul\":5606:5610   */\n      dup3\n        /* \"#utility.yul\":5598:5604   */\n      dup3\n        /* \"#utility.yul\":5578:5611   */\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5488:5617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5698   */\n    tag_261:\n        /* \"#utility.yul\":5656:5662   */\n      0x00\n        /* \"#utility.yul\":5689:5691   */\n      0x40\n        /* \"#utility.yul\":5683:5692   */\n      mload\n        /* \"#utility.yul\":5673:5692   */\n      swap1\n      pop\n        /* \"#utility.yul\":5623:5698   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5704:6012   */\n    tag_186:\n        /* \"#utility.yul\":5766:5770   */\n      0x00\n        /* \"#utility.yul\":5856:5874   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5848:5854   */\n      dup3\n        /* \"#utility.yul\":5845:5875   */\n      gt\n        /* \"#utility.yul\":5842:5898   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":5878:5896   */\n      tag_267\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":5842:5898   */\n    tag_266:\n        /* \"#utility.yul\":5916:5945   */\n      tag_269\n        /* \"#utility.yul\":5938:5944   */\n      dup3\n        /* \"#utility.yul\":5916:5945   */\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5908:5945   */\n      swap1\n      pop\n        /* \"#utility.yul\":6000:6004   */\n      0x20\n        /* \"#utility.yul\":5994:5998   */\n      dup2\n        /* \"#utility.yul\":5990:6005   */\n      add\n        /* \"#utility.yul\":5982:6005   */\n      swap1\n      pop\n        /* \"#utility.yul\":5704:6012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6018:6187   */\n    tag_246:\n        /* \"#utility.yul\":6102:6113   */\n      0x00\n        /* \"#utility.yul\":6136:6142   */\n      dup3\n        /* \"#utility.yul\":6131:6134   */\n      dup3\n        /* \"#utility.yul\":6124:6143   */\n      mstore\n        /* \"#utility.yul\":6176:6180   */\n      0x20\n        /* \"#utility.yul\":6171:6174   */\n      dup3\n        /* \"#utility.yul\":6167:6181   */\n      add\n        /* \"#utility.yul\":6152:6181   */\n      swap1\n      pop\n        /* \"#utility.yul\":6018:6187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6193:6498   */\n    tag_106:\n        /* \"#utility.yul\":6233:6236   */\n      0x00\n        /* \"#utility.yul\":6252:6272   */\n      tag_273\n        /* \"#utility.yul\":6270:6271   */\n      dup3\n        /* \"#utility.yul\":6252:6272   */\n      tag_252\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6247:6272   */\n      swap2\n      pop\n        /* \"#utility.yul\":6286:6306   */\n      tag_274\n        /* \"#utility.yul\":6304:6305   */\n      dup4\n        /* \"#utility.yul\":6286:6306   */\n      tag_252\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":6281:6306   */\n      swap3\n      pop\n        /* \"#utility.yul\":6440:6441   */\n      dup3\n        /* \"#utility.yul\":6372:6438   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6368:6442   */\n      sub\n        /* \"#utility.yul\":6365:6366   */\n      dup3\n        /* \"#utility.yul\":6362:6443   */\n      gt\n        /* \"#utility.yul\":6359:6466   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":6446:6464   */\n      tag_276\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6359:6466   */\n    tag_275:\n        /* \"#utility.yul\":6490:6491   */\n      dup3\n        /* \"#utility.yul\":6487:6488   */\n      dup3\n        /* \"#utility.yul\":6483:6492   */\n      add\n        /* \"#utility.yul\":6476:6492   */\n      swap1\n      pop\n        /* \"#utility.yul\":6193:6498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6504:6600   */\n    tag_278:\n        /* \"#utility.yul\":6541:6548   */\n      0x00\n        /* \"#utility.yul\":6570:6594   */\n      tag_280\n        /* \"#utility.yul\":6588:6593   */\n      dup3\n        /* \"#utility.yul\":6570:6594   */\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6559:6594   */\n      swap1\n      pop\n        /* \"#utility.yul\":6504:6600   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6606:6696   */\n    tag_242:\n        /* \"#utility.yul\":6640:6647   */\n      0x00\n        /* \"#utility.yul\":6683:6688   */\n      dup2\n        /* \"#utility.yul\":6676:6689   */\n      iszero\n        /* \"#utility.yul\":6669:6690   */\n      iszero\n        /* \"#utility.yul\":6658:6690   */\n      swap1\n      pop\n        /* \"#utility.yul\":6606:6696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6702:6828   */\n    tag_281:\n        /* \"#utility.yul\":6739:6746   */\n      0x00\n        /* \"#utility.yul\":6779:6821   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6772:6777   */\n      dup3\n        /* \"#utility.yul\":6768:6822   */\n      and\n        /* \"#utility.yul\":6757:6822   */\n      swap1\n      pop\n        /* \"#utility.yul\":6702:6828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6834:6911   */\n    tag_252:\n        /* \"#utility.yul\":6871:6878   */\n      0x00\n        /* \"#utility.yul\":6900:6905   */\n      dup2\n        /* \"#utility.yul\":6889:6905   */\n      swap1\n      pop\n        /* \"#utility.yul\":6834:6911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6917:7071   */\n    tag_192:\n        /* \"#utility.yul\":7001:7007   */\n      dup3\n        /* \"#utility.yul\":6996:6999   */\n      dup2\n        /* \"#utility.yul\":6991:6994   */\n      dup4\n        /* \"#utility.yul\":6978:7008   */\n      calldatacopy\n        /* \"#utility.yul\":7063:7064   */\n      0x00\n        /* \"#utility.yul\":7054:7060   */\n      dup4\n        /* \"#utility.yul\":7049:7052   */\n      dup4\n        /* \"#utility.yul\":7045:7061   */\n      add\n        /* \"#utility.yul\":7038:7065   */\n      mstore\n        /* \"#utility.yul\":6917:7071   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7077:7397   */\n    tag_171:\n        /* \"#utility.yul\":7121:7127   */\n      0x00\n        /* \"#utility.yul\":7158:7159   */\n      0x02\n        /* \"#utility.yul\":7152:7156   */\n      dup3\n        /* \"#utility.yul\":7148:7160   */\n      div\n        /* \"#utility.yul\":7138:7160   */\n      swap1\n      pop\n        /* \"#utility.yul\":7205:7206   */\n      0x01\n        /* \"#utility.yul\":7199:7203   */\n      dup3\n        /* \"#utility.yul\":7195:7207   */\n      and\n        /* \"#utility.yul\":7226:7244   */\n      dup1\n        /* \"#utility.yul\":7216:7297   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":7282:7286   */\n      0x7f\n        /* \"#utility.yul\":7274:7280   */\n      dup3\n        /* \"#utility.yul\":7270:7287   */\n      and\n        /* \"#utility.yul\":7260:7287   */\n      swap2\n      pop\n        /* \"#utility.yul\":7216:7297   */\n    tag_287:\n        /* \"#utility.yul\":7344:7346   */\n      0x20\n        /* \"#utility.yul\":7336:7342   */\n      dup3\n        /* \"#utility.yul\":7333:7347   */\n      lt\n        /* \"#utility.yul\":7313:7331   */\n      dup2\n        /* \"#utility.yul\":7310:7348   */\n      eq\n        /* \"#utility.yul\":7307:7391   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":7363:7381   */\n      tag_289\n      tag_290\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":7307:7391   */\n    tag_288:\n        /* \"#utility.yul\":7128:7397   */\n      pop\n        /* \"#utility.yul\":7077:7397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7403:7684   */\n    tag_263:\n        /* \"#utility.yul\":7486:7513   */\n      tag_292\n        /* \"#utility.yul\":7508:7512   */\n      dup3\n        /* \"#utility.yul\":7486:7513   */\n      tag_270\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":7478:7484   */\n      dup2\n        /* \"#utility.yul\":7474:7514   */\n      add\n        /* \"#utility.yul\":7616:7622   */\n      dup2\n        /* \"#utility.yul\":7604:7614   */\n      dup2\n        /* \"#utility.yul\":7601:7623   */\n      lt\n        /* \"#utility.yul\":7580:7598   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7568:7578   */\n      dup3\n        /* \"#utility.yul\":7565:7599   */\n      gt\n        /* \"#utility.yul\":7562:7624   */\n      or\n        /* \"#utility.yul\":7559:7647   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":7627:7645   */\n      tag_294\n      tag_268\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7559:7647   */\n    tag_293:\n        /* \"#utility.yul\":7667:7677   */\n      dup1\n        /* \"#utility.yul\":7663:7665   */\n      0x40\n        /* \"#utility.yul\":7656:7678   */\n      mstore\n        /* \"#utility.yul\":7446:7684   */\n      pop\n        /* \"#utility.yul\":7403:7684   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7690:7870   */\n    tag_277:\n        /* \"#utility.yul\":7738:7815   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7735:7736   */\n      0x00\n        /* \"#utility.yul\":7728:7816   */\n      mstore\n        /* \"#utility.yul\":7835:7839   */\n      0x11\n        /* \"#utility.yul\":7832:7833   */\n      0x04\n        /* \"#utility.yul\":7825:7840   */\n      mstore\n        /* \"#utility.yul\":7859:7863   */\n      0x24\n        /* \"#utility.yul\":7856:7857   */\n      0x00\n        /* \"#utility.yul\":7849:7864   */\n      revert\n        /* \"#utility.yul\":7876:8056   */\n    tag_65:\n        /* \"#utility.yul\":7924:8001   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7921:7922   */\n      0x00\n        /* \"#utility.yul\":7914:8002   */\n      mstore\n        /* \"#utility.yul\":8021:8025   */\n      0x21\n        /* \"#utility.yul\":8018:8019   */\n      0x04\n        /* \"#utility.yul\":8011:8026   */\n      mstore\n        /* \"#utility.yul\":8045:8049   */\n      0x24\n        /* \"#utility.yul\":8042:8043   */\n      0x00\n        /* \"#utility.yul\":8035:8050   */\n      revert\n        /* \"#utility.yul\":8062:8242   */\n    tag_290:\n        /* \"#utility.yul\":8110:8187   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8107:8108   */\n      0x00\n        /* \"#utility.yul\":8100:8188   */\n      mstore\n        /* \"#utility.yul\":8207:8211   */\n      0x22\n        /* \"#utility.yul\":8204:8205   */\n      0x04\n        /* \"#utility.yul\":8197:8212   */\n      mstore\n        /* \"#utility.yul\":8231:8235   */\n      0x24\n        /* \"#utility.yul\":8228:8229   */\n      0x00\n        /* \"#utility.yul\":8221:8236   */\n      revert\n        /* \"#utility.yul\":8248:8428   */\n    tag_268:\n        /* \"#utility.yul\":8296:8373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8293:8294   */\n      0x00\n        /* \"#utility.yul\":8286:8374   */\n      mstore\n        /* \"#utility.yul\":8393:8397   */\n      0x41\n        /* \"#utility.yul\":8390:8391   */\n      0x04\n        /* \"#utility.yul\":8383:8398   */\n      mstore\n        /* \"#utility.yul\":8417:8421   */\n      0x24\n        /* \"#utility.yul\":8414:8415   */\n      0x00\n        /* \"#utility.yul\":8407:8422   */\n      revert\n        /* \"#utility.yul\":8434:8551   */\n    tag_201:\n        /* \"#utility.yul\":8543:8544   */\n      0x00\n        /* \"#utility.yul\":8540:8541   */\n      dup1\n        /* \"#utility.yul\":8533:8545   */\n      revert\n        /* \"#utility.yul\":8557:8674   */\n    tag_190:\n        /* \"#utility.yul\":8666:8667   */\n      0x00\n        /* \"#utility.yul\":8663:8664   */\n      dup1\n        /* \"#utility.yul\":8656:8668   */\n      revert\n        /* \"#utility.yul\":8680:8797   */\n    tag_228:\n        /* \"#utility.yul\":8789:8790   */\n      0x00\n        /* \"#utility.yul\":8786:8787   */\n      dup1\n        /* \"#utility.yul\":8779:8791   */\n      revert\n        /* \"#utility.yul\":8803:8920   */\n    tag_210:\n        /* \"#utility.yul\":8912:8913   */\n      0x00\n        /* \"#utility.yul\":8909:8910   */\n      dup1\n        /* \"#utility.yul\":8902:8914   */\n      revert\n        /* \"#utility.yul\":8926:9028   */\n    tag_270:\n        /* \"#utility.yul\":8967:8973   */\n      0x00\n        /* \"#utility.yul\":9018:9020   */\n      0x1f\n        /* \"#utility.yul\":9014:9021   */\n      not\n        /* \"#utility.yul\":9009:9011   */\n      0x1f\n        /* \"#utility.yul\":9002:9007   */\n      dup4\n        /* \"#utility.yul\":8998:9012   */\n      add\n        /* \"#utility.yul\":8994:9022   */\n      and\n        /* \"#utility.yul\":8984:9022   */\n      swap1\n      pop\n        /* \"#utility.yul\":8926:9028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9034:9215   */\n    tag_248:\n        /* \"#utility.yul\":9174:9207   */\n      0x546869732061646472657373206973206e6f74206120526567756c61746f7200\n        /* \"#utility.yul\":9170:9171   */\n      0x00\n        /* \"#utility.yul\":9162:9168   */\n      dup3\n        /* \"#utility.yul\":9158:9172   */\n      add\n        /* \"#utility.yul\":9151:9208   */\n      mstore\n        /* \"#utility.yul\":9034:9215   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9221:9343   */\n    tag_196:\n        /* \"#utility.yul\":9294:9318   */\n      tag_306\n        /* \"#utility.yul\":9312:9317   */\n      dup2\n        /* \"#utility.yul\":9294:9318   */\n      tag_278\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":9287:9292   */\n      dup2\n        /* \"#utility.yul\":9284:9319   */\n      eq\n        /* \"#utility.yul\":9274:9337   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":9333:9334   */\n      0x00\n        /* \"#utility.yul\":9330:9331   */\n      dup1\n        /* \"#utility.yul\":9323:9335   */\n      revert\n        /* \"#utility.yul\":9274:9337   */\n    tag_307:\n        /* \"#utility.yul\":9221:9343   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9349:9471   */\n    tag_206:\n        /* \"#utility.yul\":9422:9446   */\n      tag_309\n        /* \"#utility.yul\":9440:9445   */\n      dup2\n        /* \"#utility.yul\":9422:9446   */\n      tag_252\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":9415:9420   */\n      dup2\n        /* \"#utility.yul\":9412:9447   */\n      eq\n        /* \"#utility.yul\":9402:9465   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":9461:9462   */\n      0x00\n        /* \"#utility.yul\":9458:9459   */\n      dup1\n        /* \"#utility.yul\":9451:9463   */\n      revert\n        /* \"#utility.yul\":9402:9465   */\n    tag_310:\n        /* \"#utility.yul\":9349:9471   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122013f52287c55f1353d0f31a919cef3a42142e9824d19117f1d0433269caec142964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_236": {
									"entryPoint": null,
									"id": 236,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_688": {
									"entryPoint": null,
									"id": 688,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addBuyer_87": {
									"entryPoint": 148,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addPharma_192": {
									"entryPoint": 342,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addRegulator_297": {
									"entryPoint": 245,
									"id": 297,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_357": {
									"entryPoint": 439,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_417": {
									"entryPoint": 621,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5062000023336200009460201b60201c565b6200003433620000f560201b60201c565b62000045336200015660201b60201c565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160048190555062000300565b620000af816000620001b760201b62000a3c1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a60405160405180910390a250565b62000110816001620001b760201b62000a3c1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f2860b5ba44f983f8f363ee6eeb3c24cbca3096803fbdd5129b9e253f01cac07660405160405180910390a250565b62000171816002620001b760201b62000a3c1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f36179de14e9e7cbce2e0a64264f3eb82e80b70aac44ff098d9c6f70b1d7d659560405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620001f257600080fd5b6200020482826200026d60201b60201c565b156200020f57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620002a957600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61149180620003106000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806364c0daea1161008c578063ac63f3c711610066578063ac63f3c7146101c2578063bbf89803146101de578063c204a0cf146101fa578063d1e4fd0f14610204576100cf565b806364c0daea1461018057806381612e4f1461019c5780638e2b65d7146101a6576100cf565b80630c5484d7146100d45780631b90c4be146100f05780631beadbe21461010c5780632a55feec1461011657806341c0e1b51461014657806354fc916914610150575b600080fd5b6100ee60048036038101906100e99190610fab565b610234565b005b61010a60048036038101906101059190610f7e565b610373565b005b610114610391565b005b610130600480360381019061012b9190610f7e565b61039c565b60405161013d9190611156565b60405180910390f35b61014e6103b9565b005b61016a60048036038101906101659190610f7e565b61044c565b6040516101779190611156565b60405180910390f35b61019a60048036038101906101959190611018565b610469565b005b6101a4610789565b005b6101c060048036038101906101bb9190610fd8565b610794565b005b6101dc60048036038101906101d79190610f7e565b6109d8565b005b6101f860048036038101906101f39190610f7e565b6109f6565b005b610202610a14565b005b61021e60048036038101906102199190610f7e565b610a1f565b60405161022b9190611156565b60405180910390f35b806000600681111561024957610248611352565b5b6005600083815260200190815260200160002060090160009054906101000a900460ff16600681111561027f5761027e611352565b5b1461028957600080fd5b816005600082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f857600080fd5b60016005600085815260200190815260200160002060090160006101000a81548160ff0219169083600681111561033257610331611352565b5b02179055507f06974b56d21c283fee3ed0905f648b2e17cb684cc8dc972ea99704bea957814e836040516103669190611191565b60405180910390a1505050565b61037c33610a1f565b61038557600080fd5b61038e81610ae8565b50565b61039a33610b42565b565b60006103b2826000610b9c90919063ffffffff16565b9050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561044a57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b6000610462826001610b9c90919063ffffffff16565b9050919050565b61047233610a1f565b61047b57600080fd5b60405180610180016040528060045481526020018781526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018281526020016000815260200160006006811115610500576104ff611352565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525060056000888152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550608082015181600401908051906020019061060e929190610e41565b5060a082015181600501908051906020019061062b929190610e41565b5060c0820151816006019080519060200190610648929190610e41565b5060e0820151816007019080519060200190610665929190610e41565b5061010082015181600801556101208201518160090160006101000a81548160ff0219169083600681111561069d5761069c611352565b5b02179055506101408201518160090160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061016082015181600a0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060016004546107449190611213565b6004819055507f9d1715437821cd9a90cba5d1a68995c308d9ad9afc754ed9a1cff429760796e6866040516107799190611191565b60405180910390a1505050505050565b61079233610c2e565b565b81600160068111156107a9576107a8611352565b5b6005600083815260200190815260200160002060090160009054906101000a900460ff1660068111156107df576107de611352565b5b146107e957600080fd5b6107f233610a1f565b6107fb57600080fd5b826005600082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461086a57600080fd5b6108738361044c565b6108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a990611171565b60405180910390fd5b826005600086815260200190815260200160002060090160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060026005600086815260200190815260200160002060090160006101000a81548160ff0219169083600681111561094157610940611352565b5b0217905550826005600086815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff12328dacf931f6c8c8c904ea8b9791d681613ed5ec258dce2866c311795c9ea846040516109ca9190611191565b60405180910390a150505050565b6109e13361044c565b6109ea57600080fd5b6109f381610c88565b50565b6109ff3361039c565b610a0857600080fd5b610a1181610ce2565b50565b610a1d33610d3c565b565b6000610a35826002610b9c90919063ffffffff16565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a7657600080fd5b610a808282610b9c565b15610a8a57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b610afc816002610a3c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f36179de14e9e7cbce2e0a64264f3eb82e80b70aac44ff098d9c6f70b1d7d659560405160405180910390a250565b610b56816001610d9690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fc8ecc453f78c13ccc7596603b61935f29b99dc15bb91b91647e1ccf2469ad00a60405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bd757600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610c42816002610d9690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fa9a482e6375ef89327f2177c114191d0b88502ca4a7b961d211cc45786ee510760405160405180910390a250565b610c9c816001610a3c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f2860b5ba44f983f8f363ee6eeb3c24cbca3096803fbdd5129b9e253f01cac07660405160405180910390a250565b610cf6816000610a3c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a60405160405180910390a250565b610d50816000610d9690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f83fd4cbc7bc934bdfbae994ac6e72fcc0e50abd6995c1949520e761ba650d58260405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610dd057600080fd5b610dda8282610b9c565b610de357600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b828054610e4d906112c0565b90600052602060002090601f016020900481019282610e6f5760008555610eb6565b82601f10610e8857805160ff1916838001178555610eb6565b82800160010185558215610eb6579182015b82811115610eb5578251825591602001919060010190610e9a565b5b509050610ec39190610ec7565b5090565b5b80821115610ee0576000816000905550600101610ec8565b5090565b6000610ef7610ef2846111d1565b6111ac565b905082815260208101848484011115610f1357610f126113e4565b5b610f1e8482856112b1565b509392505050565b600081359050610f358161142d565b92915050565b600082601f830112610f5057610f4f6113df565b5b8135610f60848260208601610ee4565b91505092915050565b600081359050610f7881611444565b92915050565b600060208284031215610f9457610f936113ee565b5b6000610fa284828501610f26565b91505092915050565b600060208284031215610fc157610fc06113ee565b5b6000610fcf84828501610f69565b91505092915050565b60008060408385031215610fef57610fee6113ee565b5b6000610ffd85828601610f69565b925050602061100e85828601610f26565b9150509250929050565b60008060008060008060c08789031215611035576110346113ee565b5b600061104389828a01610f69565b965050602061105489828a01610f26565b955050604087013567ffffffffffffffff811115611075576110746113e9565b5b61108189828a01610f3b565b945050606087013567ffffffffffffffff8111156110a2576110a16113e9565b5b6110ae89828a01610f3b565b935050608087013567ffffffffffffffff8111156110cf576110ce6113e9565b5b6110db89828a01610f3b565b92505060a087013567ffffffffffffffff8111156110fc576110fb6113e9565b5b61110889828a01610f3b565b9150509295509295509295565b61111e8161127b565b82525050565b6000611131601f83611202565b915061113c82611404565b602082019050919050565b611150816112a7565b82525050565b600060208201905061116b6000830184611115565b92915050565b6000602082019050818103600083015261118a81611124565b9050919050565b60006020820190506111a66000830184611147565b92915050565b60006111b66111c7565b90506111c282826112f2565b919050565b6000604051905090565b600067ffffffffffffffff8211156111ec576111eb6113b0565b5b6111f5826113f3565b9050602081019050919050565b600082825260208201905092915050565b600061121e826112a7565b9150611229836112a7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561125e5761125d611323565b5b828201905092915050565b600061127482611287565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b600060028204905060018216806112d857607f821691505b602082108114156112ec576112eb611381565b5b50919050565b6112fb826113f3565b810181811067ffffffffffffffff8211171561131a576113196113b0565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f546869732061646472657373206973206e6f74206120526567756c61746f7200600082015250565b61143681611269565b811461144157600080fd5b50565b61144d816112a7565b811461145857600080fd5b5056fea264697066735822122013f52287c55f1353d0f31a919cef3a42142e9824d19117f1d0433269caec142964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23 CALLER PUSH3 0x94 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x34 CALLER PUSH3 0xF5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x45 CALLER PUSH3 0x156 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x300 JUMP JUMPDEST PUSH3 0xAF DUP2 PUSH1 0x0 PUSH3 0x1B7 PUSH1 0x20 SHL PUSH3 0xA3C OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6599D9DD7F97CCDC3D99AB507544F9F6EBFCA20C63A7E3C018DA49EEAEFB164A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH3 0x110 DUP2 PUSH1 0x1 PUSH3 0x1B7 PUSH1 0x20 SHL PUSH3 0xA3C OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2860B5BA44F983F8F363EE6EEB3C24CBCA3096803FBDD5129B9E253F01CAC076 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH3 0x171 DUP2 PUSH1 0x2 PUSH3 0x1B7 PUSH1 0x20 SHL PUSH3 0xA3C OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36179DE14E9E7CBCE2E0A64264F3EB82E80B70AAC44FF098D9C6F70B1D7D6595 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x204 DUP3 DUP3 PUSH3 0x26D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1491 DUP1 PUSH3 0x310 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64C0DAEA GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xAC63F3C7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xAC63F3C7 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xBBF89803 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xC204A0CF EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xD1E4FD0F EQ PUSH2 0x204 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x64C0DAEA EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x81612E4F EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x8E2B65D7 EQ PUSH2 0x1A6 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xC5484D7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x1B90C4BE EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x1BEADBE2 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x2A55FEEC EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x54FC9169 EQ PUSH2 0x150 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xFAB JUMP JUMPDEST PUSH2 0x234 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x391 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH2 0x3B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH2 0x789 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x9D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x9F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH2 0xA14 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x1352 JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x27F JUMPI PUSH2 0x27E PUSH2 0x1352 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x332 JUMPI PUSH2 0x331 PUSH2 0x1352 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x6974B56D21C283FEE3ED0905F648B2E17CB684CC8DC972EA99704BEA957814E DUP4 PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x37C CALLER PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38E DUP2 PUSH2 0xAE8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x39A CALLER PUSH2 0xB42 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2 DUP3 PUSH1 0x0 PUSH2 0xB9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x44A JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x462 DUP3 PUSH1 0x1 PUSH2 0xB9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x472 CALLER PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x500 JUMPI PUSH2 0x4FF PUSH2 0x1352 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x60E SWAP3 SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x62B SWAP3 SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x648 SWAP3 SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x665 SWAP3 SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x69D JUMPI PUSH2 0x69C PUSH2 0x1352 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x4 SLOAD PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x9D1715437821CD9A90CBA5D1A68995C308D9AD9AFC754ED9A1CFF429760796E6 DUP7 PUSH1 0x40 MLOAD PUSH2 0x779 SWAP2 SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x792 CALLER PUSH2 0xC2E JUMP JUMPDEST JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x7A9 JUMPI PUSH2 0x7A8 PUSH2 0x1352 JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x7DF JUMPI PUSH2 0x7DE PUSH2 0x1352 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x7E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F2 CALLER PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x86A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x873 DUP4 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A9 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x1352 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xF12328DACF931F6C8C8C904EA8B9791D681613ED5EC258DCE2866C311795C9EA DUP5 PUSH1 0x40 MLOAD PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x9E1 CALLER PUSH2 0x44C JUMP JUMPDEST PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F3 DUP2 PUSH2 0xC88 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9FF CALLER PUSH2 0x39C JUMP JUMPDEST PUSH2 0xA08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA11 DUP2 PUSH2 0xCE2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA1D CALLER PUSH2 0xD3C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA35 DUP3 PUSH1 0x2 PUSH2 0xB9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA80 DUP3 DUP3 PUSH2 0xB9C JUMP JUMPDEST ISZERO PUSH2 0xA8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xAFC DUP2 PUSH1 0x2 PUSH2 0xA3C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36179DE14E9E7CBCE2E0A64264F3EB82E80B70AAC44FF098D9C6F70B1D7D6595 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xB56 DUP2 PUSH1 0x1 PUSH2 0xD96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8ECC453F78C13CCC7596603B61935F29B99DC15BB91B91647E1CCF2469AD00A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC42 DUP2 PUSH1 0x2 PUSH2 0xD96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9A482E6375EF89327F2177C114191D0B88502CA4A7B961D211CC45786EE5107 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xC9C DUP2 PUSH1 0x1 PUSH2 0xA3C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2860B5BA44F983F8F363EE6EEB3C24CBCA3096803FBDD5129B9E253F01CAC076 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xCF6 DUP2 PUSH1 0x0 PUSH2 0xA3C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6599D9DD7F97CCDC3D99AB507544F9F6EBFCA20C63A7E3C018DA49EEAEFB164A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xD50 DUP2 PUSH1 0x0 PUSH2 0xD96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x83FD4CBC7BC934BDFBAE994AC6E72FCC0E50ABD6995C1949520E761BA650D582 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDA DUP3 DUP3 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0xDE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xE4D SWAP1 PUSH2 0x12C0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xE6F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xEB6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xE88 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xEB6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xEB6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xEB5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xE9A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xEC3 SWAP2 SWAP1 PUSH2 0xEC7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xEE0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xEC8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF7 PUSH2 0xEF2 DUP5 PUSH2 0x11D1 JUMP JUMPDEST PUSH2 0x11AC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xF13 JUMPI PUSH2 0xF12 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH2 0xF1E DUP5 DUP3 DUP6 PUSH2 0x12B1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF35 DUP2 PUSH2 0x142D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF50 JUMPI PUSH2 0xF4F PUSH2 0x13DF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF60 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xEE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF78 DUP2 PUSH2 0x1444 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF94 JUMPI PUSH2 0xF93 PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFA2 DUP5 DUP3 DUP6 ADD PUSH2 0xF26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC1 JUMPI PUSH2 0xFC0 PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFCF DUP5 DUP3 DUP6 ADD PUSH2 0xF69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFEF JUMPI PUSH2 0xFEE PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFFD DUP6 DUP3 DUP7 ADD PUSH2 0xF69 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x100E DUP6 DUP3 DUP7 ADD PUSH2 0xF26 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1035 JUMPI PUSH2 0x1034 PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1043 DUP10 DUP3 DUP11 ADD PUSH2 0xF69 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x1054 DUP10 DUP3 DUP11 ADD PUSH2 0xF26 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1075 JUMPI PUSH2 0x1074 PUSH2 0x13E9 JUMP JUMPDEST JUMPDEST PUSH2 0x1081 DUP10 DUP3 DUP11 ADD PUSH2 0xF3B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A2 JUMPI PUSH2 0x10A1 PUSH2 0x13E9 JUMP JUMPDEST JUMPDEST PUSH2 0x10AE DUP10 DUP3 DUP11 ADD PUSH2 0xF3B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10CF JUMPI PUSH2 0x10CE PUSH2 0x13E9 JUMP JUMPDEST JUMPDEST PUSH2 0x10DB DUP10 DUP3 DUP11 ADD PUSH2 0xF3B JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10FC JUMPI PUSH2 0x10FB PUSH2 0x13E9 JUMP JUMPDEST JUMPDEST PUSH2 0x1108 DUP10 DUP3 DUP11 ADD PUSH2 0xF3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x111E DUP2 PUSH2 0x127B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x1F DUP4 PUSH2 0x1202 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1150 DUP2 PUSH2 0x12A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x116B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x118A DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B6 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x11C2 DUP3 DUP3 PUSH2 0x12F2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x11EC JUMPI PUSH2 0x11EB PUSH2 0x13B0 JUMP JUMPDEST JUMPDEST PUSH2 0x11F5 DUP3 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121E DUP3 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1229 DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x125E JUMPI PUSH2 0x125D PUSH2 0x1323 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1274 DUP3 PUSH2 0x1287 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12D8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x12EC JUMPI PUSH2 0x12EB PUSH2 0x1381 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12FB DUP3 PUSH2 0x13F3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x131A JUMPI PUSH2 0x1319 PUSH2 0x13B0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546869732061646472657373206973206E6F74206120526567756C61746F7200 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1436 DUP2 PUSH2 0x1269 JUMP JUMPDEST DUP2 EQ PUSH2 0x1441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x144D DUP2 PUSH2 0x12A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT CREATE2 0x22 DUP8 0xC5 0x5F SGT MSTORE8 0xD0 RETURN BYTE SWAP2 SWAP13 0xEF GASPRICE TIMESTAMP EQ 0x2E SWAP9 0x24 0xD1 SWAP2 OR CALL 0xD0 NUMBER ORIGIN PUSH10 0xCAEC142964736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "110:5174:4:-:0;;;3257:66;;;;;;;;;;267:21:0;277:10;267:9;;;:21;;:::i;:::-;283:25:2;297:10;283:13;;;:25;;:::i;:::-;271:22:1;282:10;271;;;:22;;:::i;:::-;3289:10:4;3281:5;;:18;;;;;;;;;;;;;;;;;;3315:1;3309:3;:7;;;;110:5174;;1008:115:0;1063:19;1074:7;1063:6;:10;;;;;;:19;;;;:::i;:::-;1108:7;1097:19;;;;;;;;;;;;1008:115;:::o;1084:127:2:-;1143:23;1158:7;1143:10;:14;;;;;;:23;;;;:::i;:::-;1196:7;1181:23;;;;;;;;;;;;1084:127;:::o;1027:118:1:-;1083:20;1095:7;1083;:11;;;;;;:20;;;;:::i;:::-;1130:7;1118:20;;;;;;;;;;;;1027:118;:::o;259:181:3:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;786:190::-;882:4;929:1;910:21;;:7;:21;;;;902:30;;;;;;949:4;:11;;:20;961:7;949:20;;;;;;;;;;;;;;;;;;;;;;;;;942:27;;786:190;;;;:::o;110:5174:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addBuyer_87": {
									"entryPoint": 3298,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addPharma_192": {
									"entryPoint": 2792,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addRegulator_297": {
									"entryPoint": 3208,
									"id": 297,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeBuyer_103": {
									"entryPoint": 3388,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removePharma_208": {
									"entryPoint": 3118,
									"id": 208,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeRegulator_313": {
									"entryPoint": 2882,
									"id": 313,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addBuyer_62": {
									"entryPoint": 2550,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addPharma_167": {
									"entryPoint": 883,
									"id": 167,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRegulator_272": {
									"entryPoint": 2520,
									"id": 272,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_357": {
									"entryPoint": 2620,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_417": {
									"entryPoint": 2972,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isBuyer_50": {
									"entryPoint": 924,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isPharma_155": {
									"entryPoint": 2591,
									"id": 155,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isRegulator_260": {
									"entryPoint": 1100,
									"id": 260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@kill_705": {
									"entryPoint": 953,
									"id": 705,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@produceMedicine_760": {
									"entryPoint": 1129,
									"id": 760,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@remove_391": {
									"entryPoint": 3478,
									"id": 391,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceBuyer_71": {
									"entryPoint": 2580,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renouncePharma_176": {
									"entryPoint": 1929,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRegulator_281": {
									"entryPoint": 913,
									"id": 281,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sendToRegulation_833": {
									"entryPoint": 1940,
									"id": 833,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@testMedicine_784": {
									"entryPoint": 564,
									"id": 784,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 3812,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 3899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 4056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 4120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4551,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 4561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 4785,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 4946,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4993,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5040,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5087,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5092,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5097,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5102,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72": {
									"entryPoint": 5124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9474:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "91:328:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "101:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "168:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "126:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "126:49:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "110:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "110:66:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "101:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "192:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "199:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "185:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "185:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "185:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "215:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "230:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "237:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "226:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "226:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "219:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "280:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "282:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "282:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "282:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "261:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "257:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "257:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "275:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "254:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "254:25:5"
															},
															"nodeType": "YulIf",
															"src": "251:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "401:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "406:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "372:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "372:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "372:41:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "64:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "69:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "77:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "85:5:5",
														"type": ""
													}
												],
												"src": "7:412:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "477:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "487:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "509:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "496:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "496:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "487:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "552:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "525:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "525:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "455:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "463:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "471:5:5",
														"type": ""
													}
												],
												"src": "425:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "646:278:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "695:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "697:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "697:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "697:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "674:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "682:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "670:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "689:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "666:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "666:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "659:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "659:35:5"
															},
															"nodeType": "YulIf",
															"src": "656:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "787:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "814:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "801:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "801:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "791:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "830:88:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "891:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "899:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "887:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "887:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "906:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "914:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "839:47:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "839:79:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "830:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "624:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "632:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "640:5:5",
														"type": ""
													}
												],
												"src": "584:340:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "982:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "992:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1014:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1001:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1001:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "992:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1057:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1030:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1030:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1030:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "960:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "968:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "976:5:5",
														"type": ""
													}
												],
												"src": "930:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1141:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1189:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1162:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1171:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1158:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1158:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1183:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1154:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:32:5"
															},
															"nodeType": "YulIf",
															"src": "1151:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1280:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1295:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1309:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1299:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1324:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1359:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1370:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1355:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1355:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1379:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1334:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1334:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1324:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1111:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1122:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1134:6:5",
														"type": ""
													}
												],
												"src": "1075:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1476:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1522:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1524:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1524:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1524:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1506:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1493:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1493:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1518:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1489:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1489:32:5"
															},
															"nodeType": "YulIf",
															"src": "1486:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1615:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1630:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1644:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1634:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1659:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1694:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1705:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1690:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1690:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1714:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1669:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1669:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1659:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1446:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1457:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1469:6:5",
														"type": ""
													}
												],
												"src": "1410:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1828:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1874:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1876:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1876:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1876:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1849:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1858:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1845:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1845:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1870:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:32:5"
															},
															"nodeType": "YulIf",
															"src": "1838:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1967:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1982:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1996:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1986:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2011:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2046:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2057:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2042:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2042:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2066:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2021:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2021:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2011:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2094:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2109:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2123:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2113:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2139:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2174:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2185:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2170:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2170:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2194:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2149:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2149:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2139:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1790:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1801:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1813:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1821:6:5",
														"type": ""
													}
												],
												"src": "1745:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2416:1586:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2463:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2465:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2465:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2465:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2437:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2446:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2433:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2433:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2458:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2429:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:33:5"
															},
															"nodeType": "YulIf",
															"src": "2426:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2556:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2571:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2585:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2575:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2600:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2635:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2646:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2631:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2631:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2655:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2610:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2610:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2600:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2683:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2698:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2702:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2728:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2763:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2774:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2759:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2759:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2783:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2738:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2738:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2728:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2811:288:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2826:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2857:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2868:2:5",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2853:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2853:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2840:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2840:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2830:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2919:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2921:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2921:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2921:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2891:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2899:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2888:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2888:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "2885:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3016:73:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3061:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3072:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3057:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3057:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3081:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3026:30:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3026:63:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3016:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3109:288:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3124:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3155:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3166:2:5",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3151:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3151:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3138:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3138:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3128:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3217:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3219:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3219:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3219:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3189:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3186:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3186:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3183:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3314:73:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3359:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3370:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3355:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3355:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3379:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3324:30:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3324:63:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3314:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3407:289:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3422:47:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3453:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3464:3:5",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3449:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3449:19:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3436:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:33:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3426:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3516:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3518:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3518:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3518:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3488:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3496:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3485:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3485:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3482:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3613:73:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3658:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3669:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3654:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3654:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3678:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3623:30:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3623:63:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3613:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3706:289:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3721:47:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3752:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3763:3:5",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3748:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3748:19:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3735:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3735:33:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3725:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3815:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3817:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3817:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3817:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3787:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3795:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3784:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3784:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3781:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3912:73:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3957:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3968:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3953:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3953:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3977:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3922:30:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3922:63:5"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "3912:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2346:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2357:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2369:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2377:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2385:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2393:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2401:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2409:6:5",
														"type": ""
													}
												],
												"src": "2225:1777:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4067:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4084:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4104:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4089:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4089:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4077:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4077:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4055:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4062:3:5",
														"type": ""
													}
												],
												"src": "4008:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4269:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4279:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4345:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4350:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4286:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4286:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4279:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4451:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72",
																	"nodeType": "YulIdentifier",
																	"src": "4362:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4362:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4362:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4464:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4475:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4480:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4471:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4471:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4464:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4257:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4265:3:5",
														"type": ""
													}
												],
												"src": "4123:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4560:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4577:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4600:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4582:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4582:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4570:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4570:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4570:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4548:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4555:3:5",
														"type": ""
													}
												],
												"src": "4495:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4711:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4721:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4733:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4744:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4729:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4729:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4721:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4795:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4808:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4819:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4804:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4804:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4757:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4757:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4757:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4683:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4695:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4706:4:5",
														"type": ""
													}
												],
												"src": "4619:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5006:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5016:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5028:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5039:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5024:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5024:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5016:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5063:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5074:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5059:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5059:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5082:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5088:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5078:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5078:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5052:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5052:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5052:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5108:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5242:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5116:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5116:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5108:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4986:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5001:4:5",
														"type": ""
													}
												],
												"src": "4835:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5358:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5368:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5380:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5391:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5376:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5376:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5368:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5448:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5461:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5472:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5457:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5457:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5404:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5404:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5330:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5342:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5353:4:5",
														"type": ""
													}
												],
												"src": "5260:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5529:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5539:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5549:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5549:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5539:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5598:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5606:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5578:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5578:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5578:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5513:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5522:6:5",
														"type": ""
													}
												],
												"src": "5488:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5663:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5673:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5689:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5683:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5683:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5673:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5656:6:5",
														"type": ""
													}
												],
												"src": "5623:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5771:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5876:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5878:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5878:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5878:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5848:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5856:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5845:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5845:30:5"
															},
															"nodeType": "YulIf",
															"src": "5842:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5908:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5938:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "5916:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5916:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5908:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5982:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5994:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6000:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5990:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5990:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5982:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5755:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5766:4:5",
														"type": ""
													}
												],
												"src": "5704:308:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6114:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6131:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6136:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6124:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6124:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6124:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6152:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6171:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6176:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6167:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6167:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6152:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6086:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6091:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6102:11:5",
														"type": ""
													}
												],
												"src": "6018:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6237:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6247:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6270:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6252:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6247:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6281:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6304:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6286:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6281:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6444:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6446:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6446:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6446:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6365:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6372:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6440:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6368:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6368:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6362:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:81:5"
															},
															"nodeType": "YulIf",
															"src": "6359:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6476:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6487:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6490:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6483:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6483:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6476:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6224:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6227:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6233:3:5",
														"type": ""
													}
												],
												"src": "6193:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6549:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6559:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6588:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6570:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6570:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6559:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6531:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6541:7:5",
														"type": ""
													}
												],
												"src": "6504:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6648:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6658:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6683:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6676:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6676:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6658:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6630:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6640:7:5",
														"type": ""
													}
												],
												"src": "6606:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6747:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6757:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6772:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6779:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6768:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6768:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6757:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6729:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6739:7:5",
														"type": ""
													}
												],
												"src": "6702:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6879:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6889:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6900:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6889:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6861:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6871:7:5",
														"type": ""
													}
												],
												"src": "6834:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6968:103:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6991:3:5"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6996:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7001:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6978:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6978:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6978:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7049:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7054:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7045:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7045:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7063:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7038:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7038:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7038:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6950:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6955:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6960:6:5",
														"type": ""
													}
												],
												"src": "6917:154:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7128:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7138:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7152:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7158:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7148:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7148:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7138:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7169:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7199:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7205:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7173:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7246:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7260:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7274:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7282:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7270:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7270:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7260:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7226:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7219:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7219:26:5"
															},
															"nodeType": "YulIf",
															"src": "7216:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7349:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "7363:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7363:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7363:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7313:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7336:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7344:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7333:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7333:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7310:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7310:38:5"
															},
															"nodeType": "YulIf",
															"src": "7307:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7112:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7121:6:5",
														"type": ""
													}
												],
												"src": "7077:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7446:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7456:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7508:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7486:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7486:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7474:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7460:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7625:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7627:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7627:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7627:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7568:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7580:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7565:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7565:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7604:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7616:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7601:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7601:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7562:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7562:62:5"
															},
															"nodeType": "YulIf",
															"src": "7559:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7663:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7667:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7656:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7656:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7656:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7432:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7440:4:5",
														"type": ""
													}
												],
												"src": "7403:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7718:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7735:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7738:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7728:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7728:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7728:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7832:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7835:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7825:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7825:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7825:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7856:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7859:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7849:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7849:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7690:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7904:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7921:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7924:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7914:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7914:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7914:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8018:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8021:4:5",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8011:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8011:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8011:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8042:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8045:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8035:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8035:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8035:15:5"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7876:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8090:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8107:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8110:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8100:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8100:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8100:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8204:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8207:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8197:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8197:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8197:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8228:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8231:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8221:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8221:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "8062:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8276:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8293:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8296:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8286:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8286:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8390:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8393:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8383:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8383:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8383:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8414:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8417:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8407:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8407:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8407:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "8248:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8523:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8540:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8543:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8533:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8533:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8533:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "8434:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8646:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8663:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8666:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8656:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8656:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8656:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "8557:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8769:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8786:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8789:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8779:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8779:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8779:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "8680:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8892:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8909:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8912:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8902:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8902:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8902:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "8803:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8974:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8984:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9002:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9009:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8998:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8998:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9018:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9014:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9014:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8994:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8994:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8984:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8957:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "8967:6:5",
														"type": ""
													}
												],
												"src": "8926:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9140:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9162:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9170:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9158:14:5"
																	},
																	{
																		"hexValue": "546869732061646472657373206973206e6f74206120526567756c61746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9174:33:5",
																		"type": "",
																		"value": "This address is not a Regulator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9151:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9151:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9151:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9132:6:5",
														"type": ""
													}
												],
												"src": "9034:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9264:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9321:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9330:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9333:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9323:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9323:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9323:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9287:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9312:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "9294:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9294:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9284:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9284:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9277:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9277:43:5"
															},
															"nodeType": "YulIf",
															"src": "9274:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9257:5:5",
														"type": ""
													}
												],
												"src": "9221:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9392:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9449:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9458:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9461:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9451:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9451:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9451:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9415:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9440:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9422:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9422:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9412:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9412:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9405:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9405:43:5"
															},
															"nodeType": "YulIf",
															"src": "9402:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9385:5:5",
														"type": ""
													}
												],
												"src": "9349:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72(memPtr) {\n\n        mstore(add(memPtr, 0), \"This address is not a Regulator\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64C0DAEA GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xAC63F3C7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xAC63F3C7 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xBBF89803 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xC204A0CF EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xD1E4FD0F EQ PUSH2 0x204 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x64C0DAEA EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x81612E4F EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x8E2B65D7 EQ PUSH2 0x1A6 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xC5484D7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x1B90C4BE EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x1BEADBE2 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x2A55FEEC EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x54FC9169 EQ PUSH2 0x150 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xFAB JUMP JUMPDEST PUSH2 0x234 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x391 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH2 0x3B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH2 0x789 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x9D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x9F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH2 0xA14 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x1352 JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x27F JUMPI PUSH2 0x27E PUSH2 0x1352 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x332 JUMPI PUSH2 0x331 PUSH2 0x1352 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x6974B56D21C283FEE3ED0905F648B2E17CB684CC8DC972EA99704BEA957814E DUP4 PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x37C CALLER PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38E DUP2 PUSH2 0xAE8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x39A CALLER PUSH2 0xB42 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2 DUP3 PUSH1 0x0 PUSH2 0xB9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x44A JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x462 DUP3 PUSH1 0x1 PUSH2 0xB9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x472 CALLER PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x500 JUMPI PUSH2 0x4FF PUSH2 0x1352 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x60E SWAP3 SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x62B SWAP3 SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x648 SWAP3 SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x665 SWAP3 SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x69D JUMPI PUSH2 0x69C PUSH2 0x1352 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x4 SLOAD PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x9D1715437821CD9A90CBA5D1A68995C308D9AD9AFC754ED9A1CFF429760796E6 DUP7 PUSH1 0x40 MLOAD PUSH2 0x779 SWAP2 SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x792 CALLER PUSH2 0xC2E JUMP JUMPDEST JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x7A9 JUMPI PUSH2 0x7A8 PUSH2 0x1352 JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x7DF JUMPI PUSH2 0x7DE PUSH2 0x1352 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x7E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F2 CALLER PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x86A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x873 DUP4 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A9 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x1352 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xF12328DACF931F6C8C8C904EA8B9791D681613ED5EC258DCE2866C311795C9EA DUP5 PUSH1 0x40 MLOAD PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x9E1 CALLER PUSH2 0x44C JUMP JUMPDEST PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F3 DUP2 PUSH2 0xC88 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9FF CALLER PUSH2 0x39C JUMP JUMPDEST PUSH2 0xA08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA11 DUP2 PUSH2 0xCE2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA1D CALLER PUSH2 0xD3C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA35 DUP3 PUSH1 0x2 PUSH2 0xB9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA80 DUP3 DUP3 PUSH2 0xB9C JUMP JUMPDEST ISZERO PUSH2 0xA8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xAFC DUP2 PUSH1 0x2 PUSH2 0xA3C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36179DE14E9E7CBCE2E0A64264F3EB82E80B70AAC44FF098D9C6F70B1D7D6595 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xB56 DUP2 PUSH1 0x1 PUSH2 0xD96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8ECC453F78C13CCC7596603B61935F29B99DC15BB91B91647E1CCF2469AD00A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC42 DUP2 PUSH1 0x2 PUSH2 0xD96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9A482E6375EF89327F2177C114191D0B88502CA4A7B961D211CC45786EE5107 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xC9C DUP2 PUSH1 0x1 PUSH2 0xA3C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2860B5BA44F983F8F363EE6EEB3C24CBCA3096803FBDD5129B9E253F01CAC076 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xCF6 DUP2 PUSH1 0x0 PUSH2 0xA3C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6599D9DD7F97CCDC3D99AB507544F9F6EBFCA20C63A7E3C018DA49EEAEFB164A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xD50 DUP2 PUSH1 0x0 PUSH2 0xD96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x83FD4CBC7BC934BDFBAE994AC6E72FCC0E50ABD6995C1949520E761BA650D582 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDA DUP3 DUP3 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0xDE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xE4D SWAP1 PUSH2 0x12C0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xE6F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xEB6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xE88 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xEB6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xEB6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xEB5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xE9A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xEC3 SWAP2 SWAP1 PUSH2 0xEC7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xEE0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xEC8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF7 PUSH2 0xEF2 DUP5 PUSH2 0x11D1 JUMP JUMPDEST PUSH2 0x11AC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xF13 JUMPI PUSH2 0xF12 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH2 0xF1E DUP5 DUP3 DUP6 PUSH2 0x12B1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF35 DUP2 PUSH2 0x142D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF50 JUMPI PUSH2 0xF4F PUSH2 0x13DF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF60 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xEE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF78 DUP2 PUSH2 0x1444 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF94 JUMPI PUSH2 0xF93 PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFA2 DUP5 DUP3 DUP6 ADD PUSH2 0xF26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC1 JUMPI PUSH2 0xFC0 PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFCF DUP5 DUP3 DUP6 ADD PUSH2 0xF69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFEF JUMPI PUSH2 0xFEE PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFFD DUP6 DUP3 DUP7 ADD PUSH2 0xF69 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x100E DUP6 DUP3 DUP7 ADD PUSH2 0xF26 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1035 JUMPI PUSH2 0x1034 PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1043 DUP10 DUP3 DUP11 ADD PUSH2 0xF69 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x1054 DUP10 DUP3 DUP11 ADD PUSH2 0xF26 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1075 JUMPI PUSH2 0x1074 PUSH2 0x13E9 JUMP JUMPDEST JUMPDEST PUSH2 0x1081 DUP10 DUP3 DUP11 ADD PUSH2 0xF3B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A2 JUMPI PUSH2 0x10A1 PUSH2 0x13E9 JUMP JUMPDEST JUMPDEST PUSH2 0x10AE DUP10 DUP3 DUP11 ADD PUSH2 0xF3B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10CF JUMPI PUSH2 0x10CE PUSH2 0x13E9 JUMP JUMPDEST JUMPDEST PUSH2 0x10DB DUP10 DUP3 DUP11 ADD PUSH2 0xF3B JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10FC JUMPI PUSH2 0x10FB PUSH2 0x13E9 JUMP JUMPDEST JUMPDEST PUSH2 0x1108 DUP10 DUP3 DUP11 ADD PUSH2 0xF3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x111E DUP2 PUSH2 0x127B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x1F DUP4 PUSH2 0x1202 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1150 DUP2 PUSH2 0x12A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x116B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x118A DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B6 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x11C2 DUP3 DUP3 PUSH2 0x12F2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x11EC JUMPI PUSH2 0x11EB PUSH2 0x13B0 JUMP JUMPDEST JUMPDEST PUSH2 0x11F5 DUP3 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121E DUP3 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1229 DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x125E JUMPI PUSH2 0x125D PUSH2 0x1323 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1274 DUP3 PUSH2 0x1287 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12D8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x12EC JUMPI PUSH2 0x12EB PUSH2 0x1381 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12FB DUP3 PUSH2 0x13F3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x131A JUMPI PUSH2 0x1319 PUSH2 0x13B0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546869732061646472657373206973206E6F74206120526567756C61746F7200 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1436 DUP2 PUSH2 0x1269 JUMP JUMPDEST DUP2 EQ PUSH2 0x1441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x144D DUP2 PUSH2 0x12A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT CREATE2 0x22 DUP8 0xC5 0x5F SGT MSTORE8 0xD0 RETURN BYTE SWAP2 SWAP13 0xEF GASPRICE TIMESTAMP EQ 0x2E SWAP9 0x24 0xD1 SWAP2 OR CALL 0xD0 NUMBER ORIGIN PUSH10 0xCAEC142964736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "110:5174:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4520:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;698:90:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;903:81:2;;;:::i;:::-;;521:104:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3373:117:4;;;:::i;:::-;;553:112:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3592:836:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;858:75:1;;;:::i;:::-;;4855:427:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;731:99:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;687:87:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;843:73;;;:::i;:::-;;529:106:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4520:189:4;4585:4;2530:14;2505:39;;;;;;;;:::i;:::-;;:5;:11;2511:4;2505:11;;;;;;;;;;;:21;;;;;;;;;;;;:39;;;;;;;;:::i;:::-;;;2497:48;;;;;;4619:4:::1;1924:5;:11;1930:4;1924:11;;;;;;;;;;;:19;;;;;;;;;;;;1910:33;;:10;:33;;;1902:42;;;::::0;::::1;;4663:12:::2;4639:5;:11;4645:4;4639:11;;;;;;;;;;;:21;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4690:12;4697:4;4690:12;;;;;;:::i;:::-;;;;;;;;2555:1:::1;4520:189:::0;;:::o;698:90:1:-;429:20;438:10;429:8;:20::i;:::-;421:29;;;;;;762:19:::1;773:7;762:10;:19::i;:::-;698:90:::0;:::o;903:81:2:-;949:28;966:10;949:16;:28::i;:::-;903:81::o;521:104:0:-;576:4;599:19;610:7;599:6;:10;;:19;;;;:::i;:::-;592:26;;521:104;;;:::o;3373:117:4:-;3424:5;;;;;;;;;;;3410:19;;:10;:19;;;3406:78;;;3466:5;;;;;;;;;;;3445:28;;;3406:78;3373:117::o;553:112:2:-;612:4;635:23;650:7;635:10;:14;;:23;;;;:::i;:::-;628:30;;553:112;;;:::o;3592:836:4:-;429:20:1;438:10;429:8;:20::i;:::-;421:29;;;;;;3886:483:4::1;;;;;;;;3910:3;;3886:483;;;;3932:4;3886:483;;;;3959:10;3886:483;;;;;;3999:15;3886:483;;;;;;4046:17;3886:483;;;;4102:24;3886:483;;;;4161:20;3886:483;;;;4208:12;3886:483;;;;4248:1;3886:483;;;;4274:14;3886:483;;;;;;;;:::i;:::-;;;;;;4323:1;3886:483;;;;;;4356:1;3886:483;;;;::::0;3872:5:::1;:11;3878:4;3872:11;;;;;;;;;;;:497;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4391:1;4385:3;;:7;;;;:::i;:::-;4379:3;:13;;;;4407:14;4416:4;4407:14;;;;;;:::i;:::-;;;;;;;;3592:836:::0;;;;;;:::o;858:75:1:-;901:25;915:10;901:13;:25::i;:::-;858:75::o;4855:427:4:-;4944:4;2639:12;2614:37;;;;;;;;:::i;:::-;;:5;:11;2620:4;2614:11;;;;;;;;;;;:21;;;;;;;;;;;;:37;;;;;;;;:::i;:::-;;;2606:46;;;;;;429:20:1::1;438:10;429:8;:20::i;:::-;421:29;;;::::0;::::1;;4997:4:4::2;1924:5;:11;1930:4;1924:11;;;;;;;;;;;:19;;;;;;;;;;;;1910:33;;:10;:33;;;1902:42;;;::::0;::::2;;5025:25:::3;5037:12;5025:11;:25::i;:::-;5017:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;5122:12;5096:5;:11;5102:4;5096:11;;;;;;;;;;;:23;;;:38;;;;;;;;;;;;;;;;;;5168:24;5144:5;:11;5150:4;5144:11;;;;;;;;;;;:21;;;:48;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;5224:12;5202:5;:11;5208:4;5202:11;;;;;;;;;;;:19;;;:34;;;;;;;;;;;;;;;;;;5251:24;5270:4;5251:24;;;;;;:::i;:::-;;;;;;;;460:1:1::2;4855:427:4::0;;;:::o;731:99:2:-;447:23;459:10;447:11;:23::i;:::-;439:32;;;;;;801:22:::1;815:7;801:13;:22::i;:::-;731:99:::0;:::o;687:87:0:-;423:19;431:10;423:7;:19::i;:::-;415:28;;;;;;749:18:::1;759:7;749:9;:18::i;:::-;687:87:::0;:::o;843:73::-;885:24;898:10;885:12;:24::i;:::-;843:73::o;529:106:1:-;585:4;608:20;620:7;608;:11;;:20;;;;:::i;:::-;601:27;;529:106;;;:::o;259:181:3:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;1027:118:1:-;1083:20;1095:7;1083;:11;;:20;;;;:::i;:::-;1130:7;1118:20;;;;;;;;;;;;1027:118;:::o;1320:135:2:-;1382:26;1400:7;1382:10;:17;;:26;;;;:::i;:::-;1440:7;1423:25;;;;;;;;;;;;1320:135;:::o;786:190:3:-;882:4;929:1;910:21;;:7;:21;;;;902:30;;;;;;949:4;:11;;:20;961:7;949:20;;;;;;;;;;;;;;;;;;;;;;;;;942:27;;786:190;;;;:::o;1248:126:1:-;1307:23;1322:7;1307;:14;;:23;;;;:::i;:::-;1359:7;1345:22;;;;;;;;;;;;1248:126;:::o;1084:127:2:-;1143:23;1158:7;1143:10;:14;;:23;;;;:::i;:::-;1196:7;1181:23;;;;;;;;;;;;1084:127;:::o;1008:115:0:-;1063:19;1074:7;1063:6;:10;;:19;;;;:::i;:::-;1108:7;1097:19;;;;;;;;;;;;1008:115;:::o;1224:123::-;1282:22;1296:7;1282:6;:13;;:22;;;;:::i;:::-;1332:7;1319:21;;;;;;;;;;;;1224:123;:::o;514:184:3:-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:412:5:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:112;;;282:79;;:::i;:::-;251:112;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;7:412;;;;;:::o;425:139::-;471:5;509:6;496:20;487:29;;525:33;552:5;525:33;:::i;:::-;425:139;;;;:::o;584:340::-;640:5;689:3;682:4;674:6;670:17;666:27;656:122;;697:79;;:::i;:::-;656:122;814:6;801:20;839:79;914:3;906:6;899:4;891:6;887:17;839:79;:::i;:::-;830:88;;646:278;584:340;;;;:::o;930:139::-;976:5;1014:6;1001:20;992:29;;1030:33;1057:5;1030:33;:::i;:::-;930:139;;;;:::o;1075:329::-;1134:6;1183:2;1171:9;1162:7;1158:23;1154:32;1151:119;;;1189:79;;:::i;:::-;1151:119;1309:1;1334:53;1379:7;1370:6;1359:9;1355:22;1334:53;:::i;:::-;1324:63;;1280:117;1075:329;;;;:::o;1410:::-;1469:6;1518:2;1506:9;1497:7;1493:23;1489:32;1486:119;;;1524:79;;:::i;:::-;1486:119;1644:1;1669:53;1714:7;1705:6;1694:9;1690:22;1669:53;:::i;:::-;1659:63;;1615:117;1410:329;;;;:::o;1745:474::-;1813:6;1821;1870:2;1858:9;1849:7;1845:23;1841:32;1838:119;;;1876:79;;:::i;:::-;1838:119;1996:1;2021:53;2066:7;2057:6;2046:9;2042:22;2021:53;:::i;:::-;2011:63;;1967:117;2123:2;2149:53;2194:7;2185:6;2174:9;2170:22;2149:53;:::i;:::-;2139:63;;2094:118;1745:474;;;;;:::o;2225:1777::-;2369:6;2377;2385;2393;2401;2409;2458:3;2446:9;2437:7;2433:23;2429:33;2426:120;;;2465:79;;:::i;:::-;2426:120;2585:1;2610:53;2655:7;2646:6;2635:9;2631:22;2610:53;:::i;:::-;2600:63;;2556:117;2712:2;2738:53;2783:7;2774:6;2763:9;2759:22;2738:53;:::i;:::-;2728:63;;2683:118;2868:2;2857:9;2853:18;2840:32;2899:18;2891:6;2888:30;2885:117;;;2921:79;;:::i;:::-;2885:117;3026:63;3081:7;3072:6;3061:9;3057:22;3026:63;:::i;:::-;3016:73;;2811:288;3166:2;3155:9;3151:18;3138:32;3197:18;3189:6;3186:30;3183:117;;;3219:79;;:::i;:::-;3183:117;3324:63;3379:7;3370:6;3359:9;3355:22;3324:63;:::i;:::-;3314:73;;3109:288;3464:3;3453:9;3449:19;3436:33;3496:18;3488:6;3485:30;3482:117;;;3518:79;;:::i;:::-;3482:117;3623:63;3678:7;3669:6;3658:9;3654:22;3623:63;:::i;:::-;3613:73;;3407:289;3763:3;3752:9;3748:19;3735:33;3795:18;3787:6;3784:30;3781:117;;;3817:79;;:::i;:::-;3781:117;3922:63;3977:7;3968:6;3957:9;3953:22;3922:63;:::i;:::-;3912:73;;3706:289;2225:1777;;;;;;;;:::o;4008:109::-;4089:21;4104:5;4089:21;:::i;:::-;4084:3;4077:34;4008:109;;:::o;4123:366::-;4265:3;4286:67;4350:2;4345:3;4286:67;:::i;:::-;4279:74;;4362:93;4451:3;4362:93;:::i;:::-;4480:2;4475:3;4471:12;4464:19;;4123:366;;;:::o;4495:118::-;4582:24;4600:5;4582:24;:::i;:::-;4577:3;4570:37;4495:118;;:::o;4619:210::-;4706:4;4744:2;4733:9;4729:18;4721:26;;4757:65;4819:1;4808:9;4804:17;4795:6;4757:65;:::i;:::-;4619:210;;;;:::o;4835:419::-;5001:4;5039:2;5028:9;5024:18;5016:26;;5088:9;5082:4;5078:20;5074:1;5063:9;5059:17;5052:47;5116:131;5242:4;5116:131;:::i;:::-;5108:139;;4835:419;;;:::o;5260:222::-;5353:4;5391:2;5380:9;5376:18;5368:26;;5404:71;5472:1;5461:9;5457:17;5448:6;5404:71;:::i;:::-;5260:222;;;;:::o;5488:129::-;5522:6;5549:20;;:::i;:::-;5539:30;;5578:33;5606:4;5598:6;5578:33;:::i;:::-;5488:129;;;:::o;5623:75::-;5656:6;5689:2;5683:9;5673:19;;5623:75;:::o;5704:308::-;5766:4;5856:18;5848:6;5845:30;5842:56;;;5878:18;;:::i;:::-;5842:56;5916:29;5938:6;5916:29;:::i;:::-;5908:37;;6000:4;5994;5990:15;5982:23;;5704:308;;;:::o;6018:169::-;6102:11;6136:6;6131:3;6124:19;6176:4;6171:3;6167:14;6152:29;;6018:169;;;;:::o;6193:305::-;6233:3;6252:20;6270:1;6252:20;:::i;:::-;6247:25;;6286:20;6304:1;6286:20;:::i;:::-;6281:25;;6440:1;6372:66;6368:74;6365:1;6362:81;6359:107;;;6446:18;;:::i;:::-;6359:107;6490:1;6487;6483:9;6476:16;;6193:305;;;;:::o;6504:96::-;6541:7;6570:24;6588:5;6570:24;:::i;:::-;6559:35;;6504:96;;;:::o;6606:90::-;6640:7;6683:5;6676:13;6669:21;6658:32;;6606:90;;;:::o;6702:126::-;6739:7;6779:42;6772:5;6768:54;6757:65;;6702:126;;;:::o;6834:77::-;6871:7;6900:5;6889:16;;6834:77;;;:::o;6917:154::-;7001:6;6996:3;6991;6978:30;7063:1;7054:6;7049:3;7045:16;7038:27;6917:154;;;:::o;7077:320::-;7121:6;7158:1;7152:4;7148:12;7138:22;;7205:1;7199:4;7195:12;7226:18;7216:81;;7282:4;7274:6;7270:17;7260:27;;7216:81;7344:2;7336:6;7333:14;7313:18;7310:38;7307:84;;;7363:18;;:::i;:::-;7307:84;7128:269;7077:320;;;:::o;7403:281::-;7486:27;7508:4;7486:27;:::i;:::-;7478:6;7474:40;7616:6;7604:10;7601:22;7580:18;7568:10;7565:34;7562:62;7559:88;;;7627:18;;:::i;:::-;7559:88;7667:10;7663:2;7656:22;7446:238;7403:281;;:::o;7690:180::-;7738:77;7735:1;7728:88;7835:4;7832:1;7825:15;7859:4;7856:1;7849:15;7876:180;7924:77;7921:1;7914:88;8021:4;8018:1;8011:15;8045:4;8042:1;8035:15;8062:180;8110:77;8107:1;8100:88;8207:4;8204:1;8197:15;8231:4;8228:1;8221:15;8248:180;8296:77;8293:1;8286:88;8393:4;8390:1;8383:15;8417:4;8414:1;8407:15;8434:117;8543:1;8540;8533:12;8557:117;8666:1;8663;8656:12;8680:117;8789:1;8786;8779:12;8803:117;8912:1;8909;8902:12;8926:102;8967:6;9018:2;9014:7;9009:2;9002:5;8998:14;8994:28;8984:38;;8926:102;;;:::o;9034:181::-;9174:33;9170:1;9162:6;9158:14;9151:57;9034:181;:::o;9221:122::-;9294:24;9312:5;9294:24;:::i;:::-;9287:5;9284:35;9274:63;;9333:1;9330;9323:12;9274:63;9221:122;:::o;9349:::-;9422:24;9440:5;9422:24;:::i;:::-;9415:5;9412:35;9402:63;;9461:1;9458;9451:12;9402:63;9349:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1053000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addBuyer(address)": "infinite",
								"addPharma(address)": "infinite",
								"addRegulator(address)": "infinite",
								"isBuyer(address)": "infinite",
								"isPharma(address)": "infinite",
								"isRegulator(address)": "infinite",
								"kill()": "32141",
								"produceMedicine(uint256,address,string,string,string,string)": "infinite",
								"renounceBuyer()": "infinite",
								"renouncePharma()": "infinite",
								"renounceRegulator()": "infinite",
								"sendToRegulation(uint256,address)": "infinite",
								"testMedicine(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 110,
									"end": 5284,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 110,
									"end": 5284,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 110,
									"end": 5284,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3257,
									"end": 3323,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 3257,
									"end": 3323,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3257,
									"end": 3323,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3257,
									"end": 3323,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3257,
									"end": 3323,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3257,
									"end": 3323,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3257,
									"end": 3323,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3257,
									"end": 3323,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3257,
									"end": 3323,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3257,
									"end": 3323,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3257,
									"end": 3323,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 267,
									"end": 288,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 277,
									"end": 287,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 267,
									"end": 276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 267,
									"end": 276,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 267,
									"end": 276,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 267,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 267,
									"end": 288,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 267,
									"end": 288,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 267,
									"end": 288,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 267,
									"end": 288,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 283,
									"end": 308,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 297,
									"end": 307,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 283,
									"end": 296,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 283,
									"end": 296,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 283,
									"end": 296,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 283,
									"end": 308,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 283,
									"end": 308,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 283,
									"end": 308,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 283,
									"end": 308,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 283,
									"end": 308,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 271,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 282,
									"end": 292,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 271,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 271,
									"end": 281,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 271,
									"end": 281,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 271,
									"end": 293,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 271,
									"end": 293,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 271,
									"end": 293,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 271,
									"end": 293,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 271,
									"end": 293,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3289,
									"end": 3299,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3286,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3281,
									"end": 3286,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3315,
									"end": 3316,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3309,
									"end": 3312,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3309,
									"end": 3316,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3309,
									"end": 3316,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3309,
									"end": 3316,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3309,
									"end": 3316,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 110,
									"end": 5284,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 110,
									"end": 5284,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1008,
									"end": 1123,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1008,
									"end": 1123,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1074,
									"end": 1081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1069,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1063,
									"end": 1073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1063,
									"end": 1073,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1063,
									"end": 1073,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551677"
								},
								{
									"begin": 1063,
									"end": 1073,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1063,
									"end": 1082,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1108,
									"end": 1115,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "PUSH",
									"source": 0,
									"value": "6599D9DD7F97CCDC3D99AB507544F9F6EBFCA20C63A7E3C018DA49EEAEFB164A"
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1116,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1123,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1123,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1084,
									"end": 1211,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1084,
									"end": 1211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1158,
									"end": 1165,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1153,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551677"
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1196,
									"end": 1203,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "PUSH",
									"source": 2,
									"value": "2860B5BA44F983F8F363EE6EEB3C24CBCA3096803FBDD5129B9E253F01CAC076"
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1204,
									"name": "LOG2",
									"source": 2
								},
								{
									"begin": 1084,
									"end": 1211,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1084,
									"end": 1211,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1027,
									"end": 1145,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1027,
									"end": 1145,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1095,
									"end": 1102,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1090,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1083,
									"end": 1094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1083,
									"end": 1094,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1083,
									"end": 1094,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551677"
								},
								{
									"begin": 1083,
									"end": 1094,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "PUSH",
									"source": 1,
									"value": "36179DE14E9E7CBCE2E0A64264F3EB82E80B70AAC44FF098D9C6F70B1D7D6595"
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "LOG2",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1145,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1145,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 259,
									"end": 440,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 259,
									"end": 440,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 354,
									"end": 355,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 335,
									"end": 356,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 335,
									"end": 356,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 335,
									"end": 342,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 335,
									"end": 356,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 335,
									"end": 356,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 335,
									"end": 356,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 335,
									"end": 356,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 327,
									"end": 357,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 357,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 327,
									"end": 357,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 327,
									"end": 357,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 376,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 380,
									"end": 384,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 386,
									"end": 393,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 376,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 376,
									"end": 379,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 376,
									"end": 379,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 376,
									"end": 394,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 376,
									"end": 394,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 375,
									"end": 394,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 367,
									"end": 395,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 395,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 367,
									"end": 395,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 367,
									"end": 395,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 429,
									"end": 433,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 406,
									"end": 410,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 406,
									"end": 417,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 417,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 425,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 426,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 406,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 433,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 406,
									"end": 433,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 406,
									"end": 433,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 406,
									"end": 433,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 259,
									"end": 440,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 259,
									"end": 440,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 259,
									"end": 440,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 786,
									"end": 976,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 786,
									"end": 976,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 882,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 930,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 910,
									"end": 931,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 910,
									"end": 917,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 910,
									"end": 931,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 910,
									"end": 931,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 902,
									"end": 932,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 932,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 902,
									"end": 932,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 902,
									"end": 932,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 949,
									"end": 953,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 949,
									"end": 960,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 960,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 968,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 949,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 949,
									"end": 969,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 942,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 942,
									"end": 969,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 786,
									"end": 976,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 110,
									"end": 5284,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 110,
									"end": 5284,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 110,
									"end": 5284,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 110,
									"end": 5284,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 110,
									"end": 5284,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 110,
									"end": 5284,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 110,
									"end": 5284,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 110,
									"end": 5284,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 110,
									"end": 5284,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013f52287c55f1353d0f31a919cef3a42142e9824d19117f1d0433269caec142964736f6c63430008070033",
									".code": [
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "64C0DAEA"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "AC63F3C7"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "AC63F3C7"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "BBF89803"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "C204A0CF"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "D1E4FD0F"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "64C0DAEA"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "81612E4F"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "8E2B65D7"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "C5484D7"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "1B90C4BE"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "1BEADBE2"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "2A55FEEC"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "41C0E1B5"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "54FC9169"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 110,
											"end": 5284,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 698,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 903,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 903,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 903,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 903,
											"end": 984,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 903,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 903,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 984,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 521,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3490,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3373,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3373,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3373,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3373,
											"end": 3490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3373,
											"end": 3490,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3373,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3373,
											"end": 3490,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 553,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 858,
											"end": 933,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 858,
											"end": 933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 858,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 858,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 858,
											"end": 933,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 858,
											"end": 933,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 858,
											"end": 933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 858,
											"end": 933,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 731,
											"end": 830,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 774,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 843,
											"end": 916,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 843,
											"end": 916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 843,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 843,
											"end": 916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 843,
											"end": 916,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 843,
											"end": 916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 916,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 635,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4585,
											"end": 4589,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2515,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2497,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2497,
											"end": 2545,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2497,
											"end": 2545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2545,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2497,
											"end": 2545,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2497,
											"end": 2545,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2497,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1934,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1943,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1920,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1943,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1943,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1902,
											"end": 1944,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1944,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1944,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1902,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4663,
											"end": 4675,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4639,
											"end": 4644,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4639,
											"end": 4650,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4645,
											"end": 4649,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4650,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4650,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4639,
											"end": 4650,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4650,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4650,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4639,
											"end": 4650,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4650,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4650,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "PUSH",
											"source": 4,
											"value": "6974B56D21C283FEE3ED0905F648B2E17CB684CC8DC972EA99704BEA957814E"
										},
										{
											"begin": 4697,
											"end": 4701,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4709,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 698,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 429,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 438,
											"end": 448,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 429,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 429,
											"end": 449,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 429,
											"end": 449,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 429,
											"end": 449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 421,
											"end": 450,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 421,
											"end": 450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 762,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 762,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 762,
											"end": 781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 762,
											"end": 781,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 762,
											"end": 781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 788,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 903,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 903,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 949,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 949,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 949,
											"end": 977,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 977,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 949,
											"end": 977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 984,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 610,
											"end": 617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 599,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 599,
											"end": 618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 599,
											"end": 618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 599,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 599,
											"end": 618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 599,
											"end": 618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 599,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3373,
											"end": 3490,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3373,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3429,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3410,
											"end": 3429,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3420,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3429,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3410,
											"end": 3429,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3429,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3484,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3406,
											"end": 3484,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3473,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3445,
											"end": 3473,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3473,
											"name": "SELFDESTRUCT",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3484,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3406,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3373,
											"end": 3490,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 612,
											"end": 616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 650,
											"end": 657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 635,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 635,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 635,
											"end": 649,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 635,
											"end": 658,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 635,
											"end": 658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 635,
											"end": 658,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 635,
											"end": 658,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 635,
											"end": 658,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 658,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 635,
											"end": 658,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 658,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 553,
											"end": 665,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 429,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 438,
											"end": 448,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 429,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 429,
											"end": 449,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 429,
											"end": 449,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 429,
											"end": 449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 421,
											"end": 450,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 421,
											"end": 450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3910,
											"end": 3913,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3910,
											"end": 3913,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 3936,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3959,
											"end": 3969,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3999,
											"end": 4014,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4063,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4126,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4208,
											"end": 4220,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4356,
											"end": 4357,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3877,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3872,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3882,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3883,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 3883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3883,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 3883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3883,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4392,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4385,
											"end": 4388,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4385,
											"end": 4388,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4385,
											"end": 4392,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4392,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4385,
											"end": 4392,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4385,
											"end": 4392,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4385,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4382,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4379,
											"end": 4392,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4392,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4392,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4392,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "9D1715437821CD9A90CBA5D1A68995C308D9AD9AFC754ED9A1CFF429760796E6"
										},
										{
											"begin": 4416,
											"end": 4420,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 4428,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 858,
											"end": 933,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 858,
											"end": 933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 901,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 915,
											"end": 925,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 901,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 901,
											"end": 926,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 901,
											"end": 926,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 901,
											"end": 926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 858,
											"end": 933,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 4948,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2624,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2635,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2614,
											"end": 2635,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2635,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2635,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2635,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2614,
											"end": 2635,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2635,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2635,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2614,
											"end": 2635,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2651,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2606,
											"end": 2652,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2652,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2652,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2652,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2652,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2606,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 429,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 438,
											"end": 448,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 429,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 429,
											"end": 449,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 429,
											"end": 449,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 429,
											"end": 449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 421,
											"end": 450,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 421,
											"end": 450,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 421,
											"end": 450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1934,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1943,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1920,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1943,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1943,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1902,
											"end": 1944,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1944,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1944,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1902,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5037,
											"end": 5049,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 5025,
											"end": 5050,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5025,
											"end": 5050,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5025,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5017,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5122,
											"end": 5134,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5101,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5096,
											"end": 5107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5107,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5107,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5107,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5096,
											"end": 5107,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5107,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5107,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5107,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5107,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5096,
											"end": 5107,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5107,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5134,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5144,
											"end": 5149,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5144,
											"end": 5155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5150,
											"end": 5154,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5155,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5155,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5144,
											"end": 5155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5155,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5155,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5155,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5144,
											"end": 5155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5144,
											"end": 5155,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 5144,
											"end": 5165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5192,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5224,
											"end": 5236,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5207,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5202,
											"end": 5213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5212,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5213,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5213,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5213,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5213,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5213,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5221,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5202,
											"end": 5221,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5221,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "PUSH",
											"source": 4,
											"value": "F12328DACF931F6C8C8C904EA8B9791D681613ED5EC258DCE2866C311795C9EA"
										},
										{
											"begin": 5270,
											"end": 5274,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5251,
											"end": 5275,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 460,
											"end": 461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 5282,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 731,
											"end": 830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 447,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 459,
											"end": 469,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 447,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 447,
											"end": 470,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 470,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 447,
											"end": 470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 439,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 439,
											"end": 471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 439,
											"end": 471,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 439,
											"end": 471,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 439,
											"end": 471,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 439,
											"end": 471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 801,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 815,
											"end": 822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 801,
											"end": 823,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 801,
											"end": 823,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 801,
											"end": 823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 731,
											"end": 830,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 687,
											"end": 774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 423,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 431,
											"end": 441,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 423,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 423,
											"end": 442,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 423,
											"end": 442,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 423,
											"end": 442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 415,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 415,
											"end": 443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 415,
											"end": 443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 415,
											"end": 443,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 415,
											"end": 443,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 415,
											"end": 443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 749,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 759,
											"end": 766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 749,
											"end": 767,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 767,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 749,
											"end": 767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 774,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 843,
											"end": 916,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 843,
											"end": 916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 885,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 898,
											"end": 908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 885,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 885,
											"end": 909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 885,
											"end": 909,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 885,
											"end": 909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 916,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 585,
											"end": 589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 620,
											"end": 627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 608,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 608,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 608,
											"end": 619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 608,
											"end": 628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 608,
											"end": 628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 608,
											"end": 628,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 608,
											"end": 628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 608,
											"end": 628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 608,
											"end": 628,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 608,
											"end": 628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 601,
											"end": 628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 601,
											"end": 628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 529,
											"end": 635,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 259,
											"end": 440,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 259,
											"end": 440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 354,
											"end": 355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 356,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 356,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 335,
											"end": 342,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 335,
											"end": 356,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 356,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 335,
											"end": 356,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 335,
											"end": 356,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 380,
											"end": 384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 386,
											"end": 393,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 376,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 367,
											"end": 395,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 367,
											"end": 395,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 367,
											"end": 395,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 429,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 406,
											"end": 417,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 425,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 406,
											"end": 433,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 406,
											"end": 433,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 406,
											"end": 433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 259,
											"end": 440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 259,
											"end": 440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 259,
											"end": 440,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1027,
											"end": 1145,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1027,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1095,
											"end": 1102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1090,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1083,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1083,
											"end": 1094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1083,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "36179DE14E9E7CBCE2E0A64264F3EB82E80B70AAC44FF098D9C6F70B1D7D6595"
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1145,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1320,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1320,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1392,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1382,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1382,
											"end": 1399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "C8ECC453F78C13CCC7596603B61935F29B99DC15BB91B91647E1CCF2469AD00A"
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1455,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 786,
											"end": 976,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 786,
											"end": 976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 882,
											"end": 886,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 931,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 910,
											"end": 917,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 931,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 910,
											"end": 931,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 902,
											"end": 932,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 902,
											"end": 932,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 902,
											"end": 932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 949,
											"end": 953,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 949,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 968,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 942,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 942,
											"end": 969,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 976,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1248,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1248,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1314,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1307,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1307,
											"end": 1321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1307,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "A9A482E6375EF89327F2177C114191D0B88502CA4A7B961D211CC45786EE5107"
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1374,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1084,
											"end": 1211,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1084,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1158,
											"end": 1165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1153,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1143,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "PUSH",
											"source": 2,
											"value": "2860B5BA44F983F8F363EE6EEB3C24CBCA3096803FBDD5129B9E253F01CAC076"
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1211,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1008,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1008,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1074,
											"end": 1081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1063,
											"end": 1073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1063,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "6599D9DD7F97CCDC3D99AB507544F9F6EBFCA20C63A7E3C018DA49EEAEFB164A"
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1123,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1224,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1224,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1296,
											"end": 1303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1282,
											"end": 1295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1282,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "83FD4CBC7BC934BDFBAE994AC6E72FCC0E50ABD6995C1949520E761BA650D582"
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1340,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 514,
											"end": 698,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 514,
											"end": 698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 593,
											"end": 600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 593,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 593,
											"end": 614,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 593,
											"end": 614,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 585,
											"end": 615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 615,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 585,
											"end": 615,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 585,
											"end": 615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 633,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 637,
											"end": 641,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 643,
											"end": 650,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 633,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 625,
											"end": 652,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 652,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 625,
											"end": 652,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 625,
											"end": 652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 686,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 663,
											"end": 674,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 682,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 663,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 514,
											"end": 698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 514,
											"end": 698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 514,
											"end": 698,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "170"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "171"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "170"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "173"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "172"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "173"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "174"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "172"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "174"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "172"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "175"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "176"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "175"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "176"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "172"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "178"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "178"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "180"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "180"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 419,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 7,
											"end": 419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 85,
											"end": 90,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 168,
											"end": 174,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 126,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 110,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 101,
											"end": 176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 101,
											"end": 176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 199,
											"end": 205,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 192,
											"end": 197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 185,
											"end": 206,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 237,
											"end": 241,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 230,
											"end": 235,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 226,
											"end": 242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 275,
											"end": 278,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 266,
											"end": 272,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 261,
											"end": 264,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 257,
											"end": 273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 254,
											"end": 279,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 251,
											"end": 363,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 251,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 251,
											"end": 363,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 282,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 282,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 282,
											"end": 361,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 282,
											"end": 361,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 282,
											"end": 361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 251,
											"end": 363,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 251,
											"end": 363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 372,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 406,
											"end": 412,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 401,
											"end": 404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 372,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 372,
											"end": 413,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 372,
											"end": 413,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 372,
											"end": 413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 91,
											"end": 419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 419,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7,
											"end": 419,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 419,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 425,
											"end": 564,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 425,
											"end": 564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 471,
											"end": 476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 515,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 496,
											"end": 516,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 552,
											"end": 557,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 525,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 425,
											"end": 564,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 425,
											"end": 564,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 425,
											"end": 564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 425,
											"end": 564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 425,
											"end": 564,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 584,
											"end": 924,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 584,
											"end": 924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 640,
											"end": 645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 692,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 682,
											"end": 686,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 674,
											"end": 680,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 670,
											"end": 687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 666,
											"end": 693,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 656,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 656,
											"end": 778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 697,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 697,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 697,
											"end": 776,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 697,
											"end": 776,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 697,
											"end": 776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 656,
											"end": 778,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 656,
											"end": 778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 814,
											"end": 820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 801,
											"end": 821,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 839,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 914,
											"end": 917,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 906,
											"end": 912,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 899,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 887,
											"end": 904,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 839,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 839,
											"end": 918,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 839,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 839,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 830,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 830,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 646,
											"end": 924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 584,
											"end": 924,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 584,
											"end": 924,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 584,
											"end": 924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 584,
											"end": 924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 584,
											"end": 924,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 930,
											"end": 1069,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 930,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 976,
											"end": 981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1021,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1057,
											"end": 1062,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1030,
											"end": 1063,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1030,
											"end": 1063,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1030,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1069,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1069,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1069,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1069,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1069,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1075,
											"end": 1404,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1075,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1180,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1169,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1181,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1186,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1270,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1151,
											"end": 1270,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1189,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1189,
											"end": 1268,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1189,
											"end": 1268,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1189,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1270,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1151,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1368,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1334,
											"end": 1387,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1387,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1334,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1387,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1280,
											"end": 1397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1404,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1404,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1410,
											"end": 1739,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1520,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1515,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1493,
											"end": 1516,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1521,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1486,
											"end": 1605,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1486,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1486,
											"end": 1605,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1524,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1524,
											"end": 1603,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1524,
											"end": 1603,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1524,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1486,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1486,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1714,
											"end": 1721,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1711,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1703,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1712,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1669,
											"end": 1722,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1722,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1669,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1722,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1739,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1739,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1739,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1745,
											"end": 2219,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1745,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1872,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1867,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1845,
											"end": 1868,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1873,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1957,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1838,
											"end": 1957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1876,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1876,
											"end": 1955,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 1955,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1876,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1957,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1838,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 1997,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2066,
											"end": 2073,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2063,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2055,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2021,
											"end": 2074,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2021,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2021,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 2084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2125,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2194,
											"end": 2201,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2183,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2149,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2149,
											"end": 2202,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2149,
											"end": 2202,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2149,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2202,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2202,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 2219,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 2219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 2219,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 2219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 2219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 2219,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2225,
											"end": 4002,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2225,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2369,
											"end": 2375,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2391,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2407,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2415,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2461,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 2446,
											"end": 2455,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2437,
											"end": 2444,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2456,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2462,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2546,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2426,
											"end": 2546,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2465,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2465,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2465,
											"end": 2544,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2465,
											"end": 2544,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2465,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2546,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2426,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2655,
											"end": 2662,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2646,
											"end": 2652,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2644,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2610,
											"end": 2663,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2610,
											"end": 2663,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2610,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2600,
											"end": 2663,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2600,
											"end": 2663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2673,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2714,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 2772,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2759,
											"end": 2781,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 2791,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 2791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2683,
											"end": 2801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2870,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2857,
											"end": 2866,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 2917,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2891,
											"end": 2897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2918,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 3002,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2885,
											"end": 3002,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2921,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2921,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2921,
											"end": 3000,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2921,
											"end": 3000,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2921,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 3002,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2885,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 3081,
											"end": 3088,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3072,
											"end": 3078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3070,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3026,
											"end": 3089,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3026,
											"end": 3089,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 3026,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3016,
											"end": 3089,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3016,
											"end": 3089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 3099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3168,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3138,
											"end": 3170,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3189,
											"end": 3195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3300,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3183,
											"end": 3300,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3219,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3219,
											"end": 3298,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3219,
											"end": 3298,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3219,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3300,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3183,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3379,
											"end": 3386,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3368,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3355,
											"end": 3377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3324,
											"end": 3387,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3324,
											"end": 3387,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3324,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3387,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3464,
											"end": 3467,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3468,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3469,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3514,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3515,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3599,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 3482,
											"end": 3599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3518,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3518,
											"end": 3597,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3518,
											"end": 3597,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3518,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3599,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 3482,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3675,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3667,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3623,
											"end": 3686,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3623,
											"end": 3686,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 3623,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3686,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3763,
											"end": 3766,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 3752,
											"end": 3761,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 3767,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3735,
											"end": 3768,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3813,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3787,
											"end": 3793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3814,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3898,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 3781,
											"end": 3898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3817,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3817,
											"end": 3896,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3817,
											"end": 3896,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3817,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3898,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 3781,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 3977,
											"end": 3984,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 3966,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 3975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3922,
											"end": 3985,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3922,
											"end": 3985,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 3922,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3985,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 4002,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 4002,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 4002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 4002,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 4002,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 4002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 4002,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 4002,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 4002,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4008,
											"end": 4117,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 4008,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4089,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 4104,
											"end": 4109,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4089,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 4089,
											"end": 4110,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4089,
											"end": 4110,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 4089,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4084,
											"end": 4087,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4008,
											"end": 4117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4008,
											"end": 4117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4008,
											"end": 4117,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4123,
											"end": 4489,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 4123,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4268,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4350,
											"end": 4352,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4345,
											"end": 4348,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4286,
											"end": 4353,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4286,
											"end": 4353,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4286,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4353,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4353,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4451,
											"end": 4454,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4362,
											"end": 4455,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4362,
											"end": 4455,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4362,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4482,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4475,
											"end": 4478,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4483,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4123,
											"end": 4489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4123,
											"end": 4489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4123,
											"end": 4489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4123,
											"end": 4489,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4495,
											"end": 4613,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 4495,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4582,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4600,
											"end": 4605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4582,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 4582,
											"end": 4606,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4582,
											"end": 4606,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4582,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4580,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4607,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4495,
											"end": 4613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4495,
											"end": 4613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4495,
											"end": 4613,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4619,
											"end": 4829,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4619,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4746,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4733,
											"end": 4742,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4819,
											"end": 4820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4817,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4804,
											"end": 4821,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4795,
											"end": 4801,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 4757,
											"end": 4822,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4757,
											"end": 4822,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4757,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4829,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4829,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4835,
											"end": 5254,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 4835,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5005,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5041,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5082,
											"end": 5086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5078,
											"end": 5098,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5072,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5099,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5116,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5242,
											"end": 5246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5116,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5116,
											"end": 5247,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5116,
											"end": 5247,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5116,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4835,
											"end": 5254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4835,
											"end": 5254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4835,
											"end": 5254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4835,
											"end": 5254,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5260,
											"end": 5482,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 5260,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5353,
											"end": 5357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5393,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5380,
											"end": 5389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5368,
											"end": 5394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5368,
											"end": 5394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5404,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5472,
											"end": 5473,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5470,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5457,
											"end": 5474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5448,
											"end": 5454,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5404,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 5404,
											"end": 5475,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5404,
											"end": 5475,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5404,
											"end": 5475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5482,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5482,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5482,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5488,
											"end": 5617,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 5488,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5549,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5549,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5549,
											"end": 5569,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5549,
											"end": 5569,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5549,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5539,
											"end": 5569,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5539,
											"end": 5569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5578,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 5606,
											"end": 5610,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5598,
											"end": 5604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5578,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5578,
											"end": 5611,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5578,
											"end": 5611,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 5578,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5488,
											"end": 5617,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5488,
											"end": 5617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5488,
											"end": 5617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5488,
											"end": 5617,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5623,
											"end": 5698,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5623,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5683,
											"end": 5692,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5673,
											"end": 5692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5673,
											"end": 5692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5623,
											"end": 5698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5623,
											"end": 5698,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5704,
											"end": 6012,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 5704,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5874,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5848,
											"end": 5854,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5845,
											"end": 5875,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5842,
											"end": 5898,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5842,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 5842,
											"end": 5898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5878,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 5878,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 5878,
											"end": 5896,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5878,
											"end": 5896,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 5878,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5842,
											"end": 5898,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 5842,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5916,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 5938,
											"end": 5944,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5916,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 5916,
											"end": 5945,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5916,
											"end": 5945,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 5916,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6000,
											"end": 6004,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5994,
											"end": 5998,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6005,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5704,
											"end": 6012,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5704,
											"end": 6012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5704,
											"end": 6012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5704,
											"end": 6012,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6018,
											"end": 6187,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 6018,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6102,
											"end": 6113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6136,
											"end": 6142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6131,
											"end": 6134,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6124,
											"end": 6143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6176,
											"end": 6180,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6171,
											"end": 6174,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6167,
											"end": 6181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6018,
											"end": 6187,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6018,
											"end": 6187,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6018,
											"end": 6187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6018,
											"end": 6187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6018,
											"end": 6187,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6193,
											"end": 6498,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 6193,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6252,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6252,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 6252,
											"end": 6272,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6252,
											"end": 6272,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 6252,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6247,
											"end": 6272,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6247,
											"end": 6272,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6286,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6286,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 6286,
											"end": 6306,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6286,
											"end": 6306,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 6286,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6281,
											"end": 6306,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6281,
											"end": 6306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6440,
											"end": 6441,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6368,
											"end": 6442,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6365,
											"end": 6366,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6443,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6466,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 6359,
											"end": 6466,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6446,
											"end": 6464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 6446,
											"end": 6464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 6446,
											"end": 6464,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6446,
											"end": 6464,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 6446,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6466,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 6359,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6490,
											"end": 6491,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6487,
											"end": 6488,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6193,
											"end": 6498,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6193,
											"end": 6498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6193,
											"end": 6498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6193,
											"end": 6498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6193,
											"end": 6498,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6504,
											"end": 6600,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 6504,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6541,
											"end": 6548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 6588,
											"end": 6593,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 6570,
											"end": 6594,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6570,
											"end": 6594,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 6570,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6559,
											"end": 6594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6559,
											"end": 6594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6504,
											"end": 6600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6504,
											"end": 6600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6504,
											"end": 6600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6504,
											"end": 6600,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6606,
											"end": 6696,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6606,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6683,
											"end": 6688,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6676,
											"end": 6689,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6669,
											"end": 6690,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6696,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6696,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6702,
											"end": 6828,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 6702,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6739,
											"end": 6746,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6779,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6772,
											"end": 6777,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6768,
											"end": 6822,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6757,
											"end": 6822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6757,
											"end": 6822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6702,
											"end": 6828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6702,
											"end": 6828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6702,
											"end": 6828,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6702,
											"end": 6828,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6834,
											"end": 6911,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 6834,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6871,
											"end": 6878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 6905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 6905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6911,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6917,
											"end": 7071,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 6917,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7001,
											"end": 7007,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6996,
											"end": 6999,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 6994,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6978,
											"end": 7008,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 7063,
											"end": 7064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 7060,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7049,
											"end": 7052,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7061,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7065,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6917,
											"end": 7071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6917,
											"end": 7071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6917,
											"end": 7071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6917,
											"end": 7071,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7077,
											"end": 7397,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 7077,
											"end": 7397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7121,
											"end": 7127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7158,
											"end": 7159,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7152,
											"end": 7156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7148,
											"end": 7160,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7138,
											"end": 7160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7138,
											"end": 7160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7205,
											"end": 7206,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7199,
											"end": 7203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7207,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7226,
											"end": 7244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7216,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 7216,
											"end": 7297,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7286,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 7274,
											"end": 7280,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7287,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7216,
											"end": 7297,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 7216,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7344,
											"end": 7346,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7336,
											"end": 7342,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7333,
											"end": 7347,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7313,
											"end": 7331,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7310,
											"end": 7348,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7307,
											"end": 7391,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7307,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 7307,
											"end": 7391,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7307,
											"end": 7391,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 7307,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7128,
											"end": 7397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7077,
											"end": 7397,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7077,
											"end": 7397,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7077,
											"end": 7397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7077,
											"end": 7397,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7403,
											"end": 7684,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 7403,
											"end": 7684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7486,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 7508,
											"end": 7512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7486,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 7486,
											"end": 7513,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7486,
											"end": 7513,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 7486,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7474,
											"end": 7514,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7616,
											"end": 7622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7604,
											"end": 7614,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7623,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7580,
											"end": 7598,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7568,
											"end": 7578,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7565,
											"end": 7599,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7562,
											"end": 7624,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 7559,
											"end": 7647,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7559,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 7559,
											"end": 7647,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7559,
											"end": 7647,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 7559,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7667,
											"end": 7677,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7663,
											"end": 7665,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7656,
											"end": 7678,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7446,
											"end": 7684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 7684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 7684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 7684,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7690,
											"end": 7870,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 7690,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7815,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7735,
											"end": 7736,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7728,
											"end": 7816,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7835,
											"end": 7839,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 7832,
											"end": 7833,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7825,
											"end": 7840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7859,
											"end": 7863,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7856,
											"end": 7857,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7849,
											"end": 7864,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7876,
											"end": 8056,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 7876,
											"end": 8056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 8001,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7921,
											"end": 7922,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7914,
											"end": 8002,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8021,
											"end": 8025,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 8018,
											"end": 8019,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8011,
											"end": 8026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8045,
											"end": 8049,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8042,
											"end": 8043,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8062,
											"end": 8242,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 8062,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8110,
											"end": 8187,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8107,
											"end": 8108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8100,
											"end": 8188,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8211,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 8204,
											"end": 8205,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8197,
											"end": 8212,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8231,
											"end": 8235,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8228,
											"end": 8229,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8236,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8248,
											"end": 8428,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 8248,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8296,
											"end": 8373,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8293,
											"end": 8294,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8286,
											"end": 8374,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8393,
											"end": 8397,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 8390,
											"end": 8391,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8383,
											"end": 8398,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8417,
											"end": 8421,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8414,
											"end": 8415,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8422,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8434,
											"end": 8551,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 8434,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8543,
											"end": 8544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8540,
											"end": 8541,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8533,
											"end": 8545,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8557,
											"end": 8674,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 8557,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8666,
											"end": 8667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8663,
											"end": 8664,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8656,
											"end": 8668,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8680,
											"end": 8797,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 8680,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8789,
											"end": 8790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8786,
											"end": 8787,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8779,
											"end": 8791,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8920,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 8803,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8912,
											"end": 8913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8909,
											"end": 8910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8902,
											"end": 8914,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8926,
											"end": 9028,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 8926,
											"end": 9028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8967,
											"end": 8973,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9018,
											"end": 9020,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 9014,
											"end": 9021,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9011,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 9002,
											"end": 9007,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9012,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9022,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8984,
											"end": 9022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8984,
											"end": 9022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8926,
											"end": 9028,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8926,
											"end": 9028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8926,
											"end": 9028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8926,
											"end": 9028,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9034,
											"end": 9215,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 9034,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9174,
											"end": 9207,
											"name": "PUSH",
											"source": 5,
											"value": "546869732061646472657373206973206E6F74206120526567756C61746F7200"
										},
										{
											"begin": 9170,
											"end": 9171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9162,
											"end": 9168,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9158,
											"end": 9172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9151,
											"end": 9208,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9034,
											"end": 9215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9034,
											"end": 9215,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9221,
											"end": 9343,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 9221,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9294,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 9312,
											"end": 9317,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9294,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 9294,
											"end": 9318,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9294,
											"end": 9318,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 9294,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9287,
											"end": 9292,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9284,
											"end": 9319,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9274,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 9274,
											"end": 9337,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9333,
											"end": 9334,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9330,
											"end": 9331,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9323,
											"end": 9335,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9274,
											"end": 9337,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 9274,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9343,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9349,
											"end": 9471,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 9349,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9422,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 9440,
											"end": 9445,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9422,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 9422,
											"end": 9446,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9422,
											"end": 9446,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 9422,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9415,
											"end": 9420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9412,
											"end": 9447,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9402,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 9402,
											"end": 9465,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9461,
											"end": 9462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9458,
											"end": 9459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9463,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9402,
											"end": 9465,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 9402,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9349,
											"end": 9471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9349,
											"end": 9471,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addBuyer(address)": "bbf89803",
							"addPharma(address)": "1b90c4be",
							"addRegulator(address)": "ac63f3c7",
							"isBuyer(address)": "2a55feec",
							"isPharma(address)": "d1e4fd0f",
							"isRegulator(address)": "54fc9169",
							"kill()": "41c0e1b5",
							"produceMedicine(uint256,address,string,string,string,string)": "64c0daea",
							"renounceBuyer()": "c204a0cf",
							"renouncePharma()": "81612e4f",
							"renounceRegulator()": "1beadbe2",
							"sendToRegulation(uint256,address)": "8e2b65d7",
							"testMedicine(uint256)": "0c5484d7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upc\",\"type\":\"uint256\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upc\",\"type\":\"uint256\"}],\"name\":\"Available\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upc\",\"type\":\"uint256\"}],\"name\":\"Bought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"BuyerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"BuyerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PharmaAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PharmaRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upc\",\"type\":\"uint256\"}],\"name\":\"Produced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RegulatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RegulatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upc\",\"type\":\"uint256\"}],\"name\":\"SentToMarket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upc\",\"type\":\"uint256\"}],\"name\":\"SentToVerification\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upc\",\"type\":\"uint256\"}],\"name\":\"Tested\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBuyer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPharma\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addRegulator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBuyer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPharma\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isRegulator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_upc\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_originPharmaID\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_originPharmaName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_originPharmaInformation\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_originPharmaCountry\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_productName\",\"type\":\"string\"}],\"name\":\"produceMedicine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceBuyer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renouncePharma\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceRegulator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_upc\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_regulatorId\",\"type\":\"address\"}],\"name\":\"sendToRegulation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_upc\",\"type\":\"uint256\"}],\"name\":\"testMedicine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SupplyChain.sol\":\"SupplyChain\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BuyerRole.sol\":{\"keccak256\":\"0xa196b2b213bc6b4eb9ef23962f6725a81f690ecc4db18023eb5561bba5486cdd\",\"urls\":[\"bzz-raw://bbe33d2729eb10cda34e79d6001426bc7baa72ea8a636cd5c09f61f59f6083f5\",\"dweb:/ipfs/QmTk84wnfVrPqMbYDNH8dBqTwoJhVDbFw9rHJPaYk9aRLi\"]},\"contracts/PharmaRole.sol\":{\"keccak256\":\"0x61cefd40b84ccb1bea0077e84c58ac6c6a6f05915604e5435f5af82751c200ad\",\"urls\":[\"bzz-raw://3fd9f9843df0c954562261015374c6978cd643068395ef936b48a67d7824a115\",\"dweb:/ipfs/Qmdtm5UztW9aDp2eADo7Rk5tavuwiWQrvoj7mnzgNPNexA\"]},\"contracts/RegulatorRole.sol\":{\"keccak256\":\"0x09ee07d9405c456dffa5ee0968631413cc1ac8637c9bb86bf591dd2022fe4481\",\"urls\":[\"bzz-raw://e745a51fe118d18336c667cd943db0eec2eb1eb78de3b32acdc56056bfd066da\",\"dweb:/ipfs/QmZ31ewimYbVgK37FmGS1Zh7eUd34kEBu1NmiN6C8qFXnf\"]},\"contracts/Roles.sol\":{\"keccak256\":\"0xdf61e4d307963240fa2c76b34dc7d740e612a18bd6e7d12bd3a1d477f99b7cba\",\"urls\":[\"bzz-raw://2c4d1c7d8de02ef9ee8940593b7e12b098a6b960cdd0ad702d693591beaf4c01\",\"dweb:/ipfs/QmS69k5xbqDfPm47CEwapAYKMs5XgfWBNTuLegkNbHyzHu\"]},\"contracts/SupplyChain.sol\":{\"keccak256\":\"0x8e50d1034beca3f22cf21703f321c614a62f2aec5cc8749e7d9ab36012600510\",\"urls\":[\"bzz-raw://bead23bd866aab11eccf35d6aec0e08f923f7d55200386bd660512f033e9dff8\",\"dweb:/ipfs/QmNtQkYQQGfWCLBKNj5kkuD8BHSEcZnjKnQqMimeF1azc8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 17,
								"contract": "contracts/SupplyChain.sol:SupplyChain",
								"label": "buyers",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)322_storage"
							},
							{
								"astId": 227,
								"contract": "contracts/SupplyChain.sol:SupplyChain",
								"label": "regulators",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Role)322_storage"
							},
							{
								"astId": 122,
								"contract": "contracts/SupplyChain.sol:SupplyChain",
								"label": "pharmas",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(Role)322_storage"
							},
							{
								"astId": 431,
								"contract": "contracts/SupplyChain.sol:SupplyChain",
								"label": "owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 433,
								"contract": "contracts/SupplyChain.sol:SupplyChain",
								"label": "sku",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 438,
								"contract": "contracts/SupplyChain.sol:SupplyChain",
								"label": "items",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(Item)482_storage)"
							},
							{
								"astId": 443,
								"contract": "contracts/SupplyChain.sol:SupplyChain",
								"label": "itemsHistory",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_string_storage)dyn_storage": {
								"base": "t_string_storage",
								"encoding": "dynamic_array",
								"label": "string[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(State)451": {
								"encoding": "inplace",
								"label": "enum SupplyChain.State",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string[])",
								"numberOfBytes": "32",
								"value": "t_array(t_string_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_struct(Item)482_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct SupplyChain.Item)",
								"numberOfBytes": "32",
								"value": "t_struct(Item)482_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Item)482_storage": {
								"encoding": "inplace",
								"label": "struct SupplyChain.Item",
								"members": [
									{
										"astId": 458,
										"contract": "contracts/SupplyChain.sol:SupplyChain",
										"label": "sku",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 460,
										"contract": "contracts/SupplyChain.sol:SupplyChain",
										"label": "upc",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 462,
										"contract": "contracts/SupplyChain.sol:SupplyChain",
										"label": "ownerID",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 464,
										"contract": "contracts/SupplyChain.sol:SupplyChain",
										"label": "originPharmaID",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 466,
										"contract": "contracts/SupplyChain.sol:SupplyChain",
										"label": "originPharmaName",
										"offset": 0,
										"slot": "4",
										"type": "t_string_storage"
									},
									{
										"astId": 468,
										"contract": "contracts/SupplyChain.sol:SupplyChain",
										"label": "originPharmaInformation",
										"offset": 0,
										"slot": "5",
										"type": "t_string_storage"
									},
									{
										"astId": 470,
										"contract": "contracts/SupplyChain.sol:SupplyChain",
										"label": "originPharmaCountry",
										"offset": 0,
										"slot": "6",
										"type": "t_string_storage"
									},
									{
										"astId": 472,
										"contract": "contracts/SupplyChain.sol:SupplyChain",
										"label": "productName",
										"offset": 0,
										"slot": "7",
										"type": "t_string_storage"
									},
									{
										"astId": 474,
										"contract": "contracts/SupplyChain.sol:SupplyChain",
										"label": "productPrice",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 477,
										"contract": "contracts/SupplyChain.sol:SupplyChain",
										"label": "itemState",
										"offset": 0,
										"slot": "9",
										"type": "t_enum(State)451"
									},
									{
										"astId": 479,
										"contract": "contracts/SupplyChain.sol:SupplyChain",
										"label": "regulatorId",
										"offset": 1,
										"slot": "9",
										"type": "t_address"
									},
									{
										"astId": 481,
										"contract": "contracts/SupplyChain.sol:SupplyChain",
										"label": "buyerId",
										"offset": 0,
										"slot": "10",
										"type": "t_address"
									}
								],
								"numberOfBytes": "352"
							},
							"t_struct(Role)322_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 321,
										"contract": "contracts/SupplyChain.sol:SupplyChain",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/BuyerRole.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/BuyerRole.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/PharmaRole.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/PharmaRole.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/RegulatorRole.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/RegulatorRole.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Roles.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Roles.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/SupplyChain.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/SupplyChain.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/BuyerRole.sol:13:5:\n   |\n13 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 295,
					"file": "contracts/BuyerRole.sol",
					"start": 236
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/PharmaRole.sol:13:5:\n   |\n13 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 300,
					"file": "contracts/PharmaRole.sol",
					"start": 240
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/RegulatorRole.sol:13:5:\n   |\n13 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 315,
					"file": "contracts/RegulatorRole.sol",
					"start": 252
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/BuyerRole.sol": {
				"ast": {
					"absolutePath": "contracts/BuyerRole.sol",
					"exportedSymbols": {
						"BuyerRole": [
							104
						],
						"Roles": [
							418
						]
					},
					"id": 105,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "contracts/Roles.sol",
							"file": "./Roles.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 419,
							"src": "26:21:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104
							],
							"name": "BuyerRole",
							"nameLocation": "58:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 6,
									"libraryName": {
										"id": 3,
										"name": "Roles",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 418,
										"src": "80:5:0"
									},
									"nodeType": "UsingForDirective",
									"src": "74:27:0",
									"typeName": {
										"id": 5,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4,
											"name": "Roles.Role",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 322,
											"src": "90:10:0"
										},
										"referencedDeclaration": 322,
										"src": "90:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"anonymous": false,
									"id": 10,
									"name": "BuyerAdded",
									"nameLocation": "113:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "140:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "124:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "124:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "123:25:0"
									},
									"src": "107:42:0"
								},
								{
									"anonymous": false,
									"id": 14,
									"name": "BuyerRemoved",
									"nameLocation": "160:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "189:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "173:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:25:0"
									},
									"src": "154:44:0"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "buyers",
									"nameLocation": "223:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "204:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$322_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"id": 16,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 15,
											"name": "Roles.Role",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 322,
											"src": "204:10:0"
										},
										"referencedDeclaration": 322,
										"src": "204:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "257:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 21,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "277:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "277:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 20,
														"name": "_addBuyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "267:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "267:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "267:21:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "257:0:0"
									},
									"scope": 104,
									"src": "236:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "405:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 30,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "431:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "431:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 29,
																"name": "isBuyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "423:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "423:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 28,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "415:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "415:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "415:28:0"
											},
											{
												"id": 35,
												"nodeType": "PlaceholderStatement",
												"src": "453:1:0"
											}
										]
									},
									"id": 37,
									"name": "onlyBuyer",
									"nameLocation": "393:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "402:2:0"
									},
									"src": "384:77:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "582:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "610:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 44,
															"name": "buyers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "599:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$322_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 45,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 417,
														"src": "599:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$322_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$322_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "599:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 43,
												"id": 48,
												"nodeType": "Return",
												"src": "592:26:0"
											}
										]
									},
									"functionSelector": "2a55feec",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBuyer",
									"nameLocation": "530:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "546:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "538:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:17:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "576:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "576:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "575:6:0"
									},
									"scope": 104,
									"src": "521:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "739:35:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 58,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "759:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 57,
														"name": "_addBuyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "749:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "749:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "749:18:0"
											}
										]
									},
									"functionSelector": "bbf89803",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 55,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 54,
												"name": "onlyBuyer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 37,
												"src": "729:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "729:9:0"
										}
									],
									"name": "addBuyer",
									"nameLocation": "696:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "713:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "705:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:17:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "739:0:0"
									},
									"scope": 104,
									"src": "687:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "875:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 66,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "898:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "898:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 65,
														"name": "_removeBuyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "885:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "885:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "885:24:0"
											}
										]
									},
									"functionSelector": "c204a0cf",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceBuyer",
									"nameLocation": "852:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:0"
									},
									"scope": 104,
									"src": "843:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "1053:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1074:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 76,
															"name": "buyers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1063:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$322_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 78,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "1063:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$322_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$322_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1063:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1063:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 83,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1108:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 82,
														"name": "BuyerAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1097:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1097:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "EmitStatement",
												"src": "1092:24:0"
											}
										]
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addBuyer",
									"nameLocation": "1017:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1035:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1027:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1053:0:0"
									},
									"scope": 104,
									"src": "1008:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "1272:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 95,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1296:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 92,
															"name": "buyers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1282:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$322_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 391,
														"src": "1282:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$322_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$322_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1282:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "1282:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1332:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "BuyerRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1319:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1319:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "1314:26:0"
											}
										]
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeBuyer",
									"nameLocation": "1233:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1254:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1246:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:17:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1272:0:0"
									},
									"scope": 104,
									"src": "1224:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "49:1300:0",
							"usedErrors": []
						}
					],
					"src": "0:1350:0"
				},
				"id": 0
			},
			"contracts/PharmaRole.sol": {
				"ast": {
					"absolutePath": "contracts/PharmaRole.sol",
					"exportedSymbols": {
						"PharmaRole": [
							209
						],
						"Roles": [
							418
						]
					},
					"id": 210,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "contracts/Roles.sol",
							"file": "./Roles.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 210,
							"sourceUnit": 419,
							"src": "26:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "PharmaRole",
							"nameLocation": "58:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 111,
									"libraryName": {
										"id": 108,
										"name": "Roles",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 418,
										"src": "81:5:1"
									},
									"nodeType": "UsingForDirective",
									"src": "75:27:1",
									"typeName": {
										"id": 110,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 109,
											"name": "Roles.Role",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 322,
											"src": "91:10:1"
										},
										"referencedDeclaration": 322,
										"src": "91:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"anonymous": false,
									"id": 115,
									"name": "PharmaAdded",
									"nameLocation": "114:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "142:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "126:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "125:25:1"
									},
									"src": "108:43:1"
								},
								{
									"anonymous": false,
									"id": 119,
									"name": "PharmaRemoved",
									"nameLocation": "162:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "192:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "176:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "176:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:25:1"
									},
									"src": "156:45:1"
								},
								{
									"constant": false,
									"id": 122,
									"mutability": "mutable",
									"name": "pharmas",
									"nameLocation": "226:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "207:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$322_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"id": 121,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 120,
											"name": "Roles.Role",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 322,
											"src": "207:10:1"
										},
										"referencedDeclaration": 322,
										"src": "207:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "261:39:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 126,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "282:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "282:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 125,
														"name": "_addPharma",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "271:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "271:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "271:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "261:0:1"
									},
									"scope": 209,
									"src": "240:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "411:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 135,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "438:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "438:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 134,
																"name": "isPharma",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "429:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "429:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "421:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "421:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "421:29:1"
											},
											{
												"id": 140,
												"nodeType": "PlaceholderStatement",
												"src": "460:1:1"
											}
										]
									},
									"id": 142,
									"name": "onlyPharma",
									"nameLocation": "398:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:2:1"
									},
									"src": "389:79:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "591:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "620:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 149,
															"name": "pharmas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "608:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$322_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 417,
														"src": "608:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$322_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$322_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "608:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 148,
												"id": 153,
												"nodeType": "Return",
												"src": "601:27:1"
											}
										]
									},
									"functionSelector": "d1e4fd0f",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPharma",
									"nameLocation": "538:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "555:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "547:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:17:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "585:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "585:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:6:1"
									},
									"scope": 209,
									"src": "529:106:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "752:36:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "773:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 162,
														"name": "_addPharma",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "762:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "762:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "762:19:1"
											}
										]
									},
									"functionSelector": "1b90c4be",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 160,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 159,
												"name": "onlyPharma",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "741:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "741:10:1"
										}
									],
									"name": "addPharma",
									"nameLocation": "707:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "725:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "717:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "716:17:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "752:0:1"
									},
									"scope": 209,
									"src": "698:90:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "891:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 171,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "915:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "915:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 170,
														"name": "_removePharma",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "901:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "901:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "901:25:1"
											}
										]
									},
									"functionSelector": "81612e4f",
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renouncePharma",
									"nameLocation": "867:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "881:2:1"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:0:1"
									},
									"scope": 209,
									"src": "858:75:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1073:72:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "1095:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 181,
															"name": "pharmas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1083:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$322_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "1083:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$322_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$322_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1083:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1083:20:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "1130:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "PharmaAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1118:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1118:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "1113:25:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addPharma",
									"nameLocation": "1036:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1055:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1047:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1047:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:17:1"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:0:1"
									},
									"scope": 209,
									"src": "1027:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "1297:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "1322:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 197,
															"name": "pharmas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1307:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$322_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 391,
														"src": "1307:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$322_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$322_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1307:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "1307:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 204,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "1359:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "PharmaRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "1345:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1345:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "EmitStatement",
												"src": "1340:27:1"
											}
										]
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removePharma",
									"nameLocation": "1257:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1279:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1271:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:17:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1297:0:1"
									},
									"scope": 209,
									"src": "1248:126:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 210,
							"src": "49:1327:1",
							"usedErrors": []
						}
					],
					"src": "0:1377:1"
				},
				"id": 1
			},
			"contracts/RegulatorRole.sol": {
				"ast": {
					"absolutePath": "contracts/RegulatorRole.sol",
					"exportedSymbols": {
						"RegulatorRole": [
							314
						],
						"Roles": [
							418
						]
					},
					"id": 315,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 211,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"absolutePath": "contracts/Roles.sol",
							"file": "./Roles.sol",
							"id": 212,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 315,
							"sourceUnit": 419,
							"src": "26:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 314,
							"linearizedBaseContracts": [
								314
							],
							"name": "RegulatorRole",
							"nameLocation": "58:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 216,
									"libraryName": {
										"id": 213,
										"name": "Roles",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 418,
										"src": "84:5:2"
									},
									"nodeType": "UsingForDirective",
									"src": "78:27:2",
									"typeName": {
										"id": 215,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 214,
											"name": "Roles.Role",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 322,
											"src": "94:10:2"
										},
										"referencedDeclaration": 322,
										"src": "94:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"anonymous": false,
									"id": 220,
									"name": "RegulatorAdded",
									"nameLocation": "117:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "148:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "132:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:25:2"
									},
									"src": "111:46:2"
								},
								{
									"anonymous": false,
									"id": 224,
									"name": "RegulatorRemoved",
									"nameLocation": "168:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "201:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "185:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "184:25:2"
									},
									"src": "162:48:2"
								},
								{
									"constant": false,
									"id": 227,
									"mutability": "mutable",
									"name": "regulators",
									"nameLocation": "235:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 314,
									"src": "216:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$322_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"id": 226,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 225,
											"name": "Roles.Role",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 322,
											"src": "216:10:2"
										},
										"referencedDeclaration": 322,
										"src": "216:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "273:42:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 231,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "297:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "297:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 230,
														"name": "_addRegulator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "283:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "283:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "283:25:2"
											}
										]
									},
									"id": 236,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:2"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:0:2"
									},
									"scope": 314,
									"src": "252:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "429:60:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 240,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "459:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "459:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 239,
																"name": "isRegulator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "447:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "447:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "439:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "439:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "439:32:2"
											},
											{
												"id": 245,
												"nodeType": "PlaceholderStatement",
												"src": "481:1:2"
											}
										]
									},
									"id": 247,
									"name": "onlyRegulator",
									"nameLocation": "413:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "426:2:2"
									},
									"src": "404:85:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "618:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "650:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 254,
															"name": "regulators",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "635:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$322_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 255,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 417,
														"src": "635:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$322_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$322_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "635:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 253,
												"id": 258,
												"nodeType": "Return",
												"src": "628:30:2"
											}
										]
									},
									"functionSelector": "54fc9169",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRegulator",
									"nameLocation": "562:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "582:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "574:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:17:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "612:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 251,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "612:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:6:2"
									},
									"scope": 314,
									"src": "553:112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "791:39:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "815:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "_addRegulator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "801:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "801:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "801:22:2"
											}
										]
									},
									"functionSelector": "ac63f3c7",
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 265,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 264,
												"name": "onlyRegulator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 247,
												"src": "777:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "777:13:2"
										}
									],
									"name": "addRegulator",
									"nameLocation": "740:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "761:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "753:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:17:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:0:2"
									},
									"scope": 314,
									"src": "731:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "939:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 276,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "966:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "966:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 275,
														"name": "_removeRegulator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "949:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "949:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "949:28:2"
											}
										]
									},
									"functionSelector": "1beadbe2",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRegulator",
									"nameLocation": "912:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "929:2:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "939:0:2"
									},
									"scope": 314,
									"src": "903:81:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "1133:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 289,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1158:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 286,
															"name": "regulators",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "1143:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$322_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "1143:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$322_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$322_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1143:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "1143:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 293,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1196:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 292,
														"name": "RegulatorAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "1181:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1181:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 295,
												"nodeType": "EmitStatement",
												"src": "1176:28:2"
											}
										]
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addRegulator",
									"nameLocation": "1093:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1115:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1107:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:17:2"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1133:0:2"
									},
									"scope": 314,
									"src": "1084:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1372:83:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "1400:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 302,
															"name": "regulators",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "1382:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$322_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 391,
														"src": "1382:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$322_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$322_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1382:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "1382:26:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 309,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "1440:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 308,
														"name": "RegulatorRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "1423:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1423:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "EmitStatement",
												"src": "1418:30:2"
											}
										]
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeRegulator",
									"nameLocation": "1329:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1354:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1346:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1345:17:2"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1372:0:2"
									},
									"scope": 314,
									"src": "1320:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 315,
							"src": "49:1408:2",
							"usedErrors": []
						}
					],
					"src": "0:1458:2"
				},
				"id": 2
			},
			"contracts/Roles.sol": {
				"ast": {
					"absolutePath": "contracts/Roles.sol",
					"exportedSymbols": {
						"Roles": [
							418
						]
					},
					"id": 419,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 316,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 317,
								"nodeType": "StructuredDocumentation",
								"src": "26:82:3",
								"text": " @title Roles\n @dev Library for managing addresses assigned to a Role."
							},
							"fullyImplemented": true,
							"id": 418,
							"linearizedBaseContracts": [
								418
							],
							"name": "Roles",
							"nameLocation": "117:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Roles.Role",
									"id": 322,
									"members": [
										{
											"constant": false,
											"id": 321,
											"mutability": "mutable",
											"name": "bearer",
											"nameLocation": "176:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 322,
											"src": "151:31:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 320,
												"keyType": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "159:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "151:24:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Role",
									"nameLocation": "136:4:3",
									"nodeType": "StructDefinition",
									"scope": 418,
									"src": "129:60:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "317:123:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "335:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "354:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "346:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 333,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "346:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "346:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "335:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "327:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "327:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "327:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "375:19:3",
															"subExpression": {
																"arguments": [
																	{
																		"id": 342,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "380:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		}
																	},
																	{
																		"id": 343,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "386:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 341,
																	"name": "has",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "376:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$322_storage_ptr_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																	}
																},
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "376:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "367:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "367:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "367:28:3"
											},
											{
												"expression": {
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 348,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "406:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 321,
															"src": "406:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 352,
														"indexExpression": {
															"id": 350,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "418:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "406:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "429:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "406:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "406:27:3"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "195:59:3",
										"text": " @dev give an account access to this role"
									},
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "268:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "285:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "272:17:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 324,
														"name": "Role",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 322,
														"src": "272:4:3"
													},
													"referencedDeclaration": 322,
													"src": "272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:36:3"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "317:0:3"
									},
									"scope": 418,
									"src": "259:181:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "575:123:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 367,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "593:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "612:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 368,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "604:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "604:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "593:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "585:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "585:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "585:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 377,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "637:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	}
																},
																{
																	"id": 378,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "643:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 376,
																"name": "has",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "633:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$322_storage_ptr_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "633:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "625:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "625:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "625:27:3"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 382,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "663:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 321,
															"src": "663:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 386,
														"indexExpression": {
															"id": 384,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "675:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "663:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "686:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "663:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "663:28:3"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "446:63:3",
										"text": " @dev remove an account's access to this role"
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "523:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "543:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "530:17:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 360,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 359,
														"name": "Role",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 322,
														"src": "530:4:3"
													},
													"referencedDeclaration": 322,
													"src": "530:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "557:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "549:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:36:3"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:0:3"
									},
									"scope": 418,
									"src": "514:184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "892:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "910:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "929:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "921:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 404,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "921:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "921:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "910:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "902:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "902:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "902:30:3"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 411,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "949:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "bearer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 321,
														"src": "949:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 414,
													"indexExpression": {
														"id": 413,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "961:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "949:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 401,
												"id": 415,
												"nodeType": "Return",
												"src": "942:27:3"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "704:77:3",
										"text": " @dev check if an account has this role\n @return bool"
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "has",
									"nameLocation": "795:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "812:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "799:17:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 394,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 393,
														"name": "Role",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 322,
														"src": "799:4:3"
													},
													"referencedDeclaration": 322,
													"src": "799:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$322_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "826:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "818:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:36:3"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "882:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "882:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "881:6:3"
									},
									"scope": 418,
									"src": "786:190:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 419,
							"src": "109:869:3",
							"usedErrors": []
						}
					],
					"src": "0:979:3"
				},
				"id": 3
			},
			"contracts/SupplyChain.sol": {
				"ast": {
					"absolutePath": "contracts/SupplyChain.sol",
					"exportedSymbols": {
						"BuyerRole": [
							104
						],
						"PharmaRole": [
							209
						],
						"RegulatorRole": [
							314
						],
						"Roles": [
							418
						],
						"SupplyChain": [
							834
						]
					},
					"id": 835,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 420,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:4"
						},
						{
							"absolutePath": "contracts/BuyerRole.sol",
							"file": "./BuyerRole.sol",
							"id": 421,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 835,
							"sourceUnit": 105,
							"src": "26:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/RegulatorRole.sol",
							"file": "./RegulatorRole.sol",
							"id": 422,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 835,
							"sourceUnit": 315,
							"src": "52:29:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/PharmaRole.sol",
							"file": "./PharmaRole.sol",
							"id": 423,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 835,
							"sourceUnit": 210,
							"src": "82:26:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 424,
										"name": "BuyerRole",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "134:9:4"
									},
									"id": 425,
									"nodeType": "InheritanceSpecifier",
									"src": "134:9:4"
								},
								{
									"baseName": {
										"id": 426,
										"name": "RegulatorRole",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 314,
										"src": "145:13:4"
									},
									"id": 427,
									"nodeType": "InheritanceSpecifier",
									"src": "145:13:4"
								},
								{
									"baseName": {
										"id": 428,
										"name": "PharmaRole",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 209,
										"src": "160:10:4"
									},
									"id": 429,
									"nodeType": "InheritanceSpecifier",
									"src": "160:10:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 834,
							"linearizedBaseContracts": [
								834,
								209,
								314,
								104
							],
							"name": "SupplyChain",
							"nameLocation": "119:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 431,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "185:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 834,
									"src": "177:13:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 430,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "177:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 433,
									"mutability": "mutable",
									"name": "sku",
									"nameLocation": "268:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 834,
									"src": "263:8:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 432,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "263:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 438,
									"mutability": "mutable",
									"name": "items",
									"nameLocation": "369:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 834,
									"src": "347:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
										"typeString": "mapping(uint256 => struct SupplyChain.Item)"
									},
									"typeName": {
										"id": 437,
										"keyType": {
											"id": 434,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "355:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "347:21:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
											"typeString": "mapping(uint256 => struct SupplyChain.Item)"
										},
										"valueType": {
											"id": 436,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 435,
												"name": "Item",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 482,
												"src": "363:4:4"
											},
											"referencedDeclaration": 482,
											"src": "363:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Item_$482_storage_ptr",
												"typeString": "struct SupplyChain.Item"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 443,
									"mutability": "mutable",
									"name": "itemsHistory",
									"nameLocation": "574:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 834,
									"src": "548:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
										"typeString": "mapping(uint256 => string[])"
									},
									"typeName": {
										"id": 442,
										"keyType": {
											"id": 439,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "556:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "548:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
											"typeString": "mapping(uint256 => string[])"
										},
										"valueType": {
											"baseType": {
												"id": 440,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "564:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"id": 441,
											"nodeType": "ArrayTypeName",
											"src": "564:8:4",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
												"typeString": "string[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "SupplyChain.State",
									"id": 451,
									"members": [
										{
											"id": 444,
											"name": "Produced",
											"nameLocation": "668:8:4",
											"nodeType": "EnumValue",
											"src": "668:8:4"
										},
										{
											"id": 445,
											"name": "Tested",
											"nameLocation": "691:6:4",
											"nodeType": "EnumValue",
											"src": "691:6:4"
										},
										{
											"id": 446,
											"name": "SentToVerification",
											"nameLocation": "712:18:4",
											"nodeType": "EnumValue",
											"src": "712:18:4"
										},
										{
											"id": 447,
											"name": "Approved",
											"nameLocation": "745:8:4",
											"nodeType": "EnumValue",
											"src": "745:8:4"
										},
										{
											"id": 448,
											"name": "SentToMarket",
											"nameLocation": "768:12:4",
											"nodeType": "EnumValue",
											"src": "768:12:4"
										},
										{
											"id": 449,
											"name": "Bought",
											"nameLocation": "795:6:4",
											"nodeType": "EnumValue",
											"src": "795:6:4"
										},
										{
											"id": 450,
											"name": "Available",
											"nameLocation": "816:9:4",
											"nodeType": "EnumValue",
											"src": "816:9:4"
										}
									],
									"name": "State",
									"nameLocation": "652:5:4",
									"nodeType": "EnumDefinition",
									"src": "647:189:4"
								},
								{
									"constant": true,
									"id": 456,
									"mutability": "constant",
									"name": "defaultState",
									"nameLocation": "857:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 834,
									"src": "842:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_State_$451",
										"typeString": "enum SupplyChain.State"
									},
									"typeName": {
										"id": 453,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 452,
											"name": "State",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 451,
											"src": "842:5:4"
										},
										"referencedDeclaration": 451,
										"src": "842:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_State_$451",
											"typeString": "enum SupplyChain.State"
										}
									},
									"value": {
										"expression": {
											"id": 454,
											"name": "State",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 451,
											"src": "872:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_State_$451_$",
												"typeString": "type(enum SupplyChain.State)"
											}
										},
										"id": 455,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Produced",
										"nodeType": "MemberAccess",
										"referencedDeclaration": 444,
										"src": "872:14:4",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_State_$451",
											"typeString": "enum SupplyChain.State"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "SupplyChain.Item",
									"id": 482,
									"members": [
										{
											"constant": false,
											"id": 458,
											"mutability": "mutable",
											"name": "sku",
											"nameLocation": "977:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "972:8:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 457,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "972:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 460,
											"mutability": "mutable",
											"name": "upc",
											"nameLocation": "995:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "990:8:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 459,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "990:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 462,
											"mutability": "mutable",
											"name": "ownerID",
											"nameLocation": "1016:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "1008:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 461,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 464,
											"mutability": "mutable",
											"name": "originPharmaID",
											"nameLocation": "1041:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "1033:22:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 463,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1033:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 466,
											"mutability": "mutable",
											"name": "originPharmaName",
											"nameLocation": "1072:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "1065:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 465,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1065:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 468,
											"mutability": "mutable",
											"name": "originPharmaInformation",
											"nameLocation": "1105:23:4",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "1098:30:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 467,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1098:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 470,
											"mutability": "mutable",
											"name": "originPharmaCountry",
											"nameLocation": "1145:19:4",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "1138:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 469,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1138:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 472,
											"mutability": "mutable",
											"name": "productName",
											"nameLocation": "1181:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "1174:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 471,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1174:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 474,
											"mutability": "mutable",
											"name": "productPrice",
											"nameLocation": "1207:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "1202:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 473,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1202:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 477,
											"mutability": "mutable",
											"name": "itemState",
											"nameLocation": "1235:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "1229:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_State_$451",
												"typeString": "enum SupplyChain.State"
											},
											"typeName": {
												"id": 476,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 475,
													"name": "State",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 451,
													"src": "1229:5:4"
												},
												"referencedDeclaration": 451,
												"src": "1229:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_State_$451",
													"typeString": "enum SupplyChain.State"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 479,
											"mutability": "mutable",
											"name": "regulatorId",
											"nameLocation": "1262:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "1254:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 478,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1254:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 481,
											"mutability": "mutable",
											"name": "buyerId",
											"nameLocation": "1291:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "1283:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 480,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1283:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Item",
									"nameLocation": "957:4:4",
									"nodeType": "StructDefinition",
									"scope": 834,
									"src": "950:355:4",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 486,
									"name": "Produced",
									"nameLocation": "1317:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"indexed": false,
												"mutability": "mutable",
												"name": "upc",
												"nameLocation": "1331:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1326:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1326:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1325:10:4"
									},
									"src": "1311:25:4"
								},
								{
									"anonymous": false,
									"id": 490,
									"name": "Tested",
									"nameLocation": "1347:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"indexed": false,
												"mutability": "mutable",
												"name": "upc",
												"nameLocation": "1359:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1354:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1354:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:10:4"
									},
									"src": "1341:23:4"
								},
								{
									"anonymous": false,
									"id": 494,
									"name": "SentToVerification",
									"nameLocation": "1375:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"indexed": false,
												"mutability": "mutable",
												"name": "upc",
												"nameLocation": "1399:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1394:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1394:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1393:10:4"
									},
									"src": "1369:35:4"
								},
								{
									"anonymous": false,
									"id": 498,
									"name": "Approved",
									"nameLocation": "1415:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"indexed": false,
												"mutability": "mutable",
												"name": "upc",
												"nameLocation": "1429:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1424:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1424:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:10:4"
									},
									"src": "1409:25:4"
								},
								{
									"anonymous": false,
									"id": 502,
									"name": "SentToMarket",
									"nameLocation": "1445:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"indexed": false,
												"mutability": "mutable",
												"name": "upc",
												"nameLocation": "1463:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "1458:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1458:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:10:4"
									},
									"src": "1439:29:4"
								},
								{
									"anonymous": false,
									"id": 506,
									"name": "Bought",
									"nameLocation": "1479:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"indexed": false,
												"mutability": "mutable",
												"name": "upc",
												"nameLocation": "1491:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1486:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1486:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:10:4"
									},
									"src": "1473:23:4"
								},
								{
									"anonymous": false,
									"id": 510,
									"name": "Available",
									"nameLocation": "1507:9:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"indexed": false,
												"mutability": "mutable",
												"name": "upc",
												"nameLocation": "1522:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "1517:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1517:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1516:10:4"
									},
									"src": "1501:26:4"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "1636:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 513,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1654:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1654:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 515,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "1668:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1654:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1646:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1646:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "1646:28:4"
											},
											{
												"id": 519,
												"nodeType": "PlaceholderStatement",
												"src": "1684:1:4"
											}
										]
									},
									"id": 521,
									"name": "onlyOwner",
									"nameLocation": "1624:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1633:2:4"
									},
									"src": "1615:77:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "1787:59:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 526,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1805:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1805:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 528,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "1819:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1805:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1797:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "1797:31:4"
											},
											{
												"id": 532,
												"nodeType": "PlaceholderStatement",
												"src": "1838:1:4"
											}
										]
									},
									"id": 534,
									"name": "verifyCaller",
									"nameLocation": "1756:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1777:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "1769:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1768:18:4"
									},
									"src": "1747:99:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "1892:70:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 539,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1910:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1910:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 541,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "1924:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
																			"typeString": "mapping(uint256 => struct SupplyChain.Item storage ref)"
																		}
																	},
																	"id": 543,
																	"indexExpression": {
																		"id": 542,
																		"name": "_upc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "1930:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1924:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$482_storage",
																		"typeString": "struct SupplyChain.Item storage ref"
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ownerID",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 462,
																"src": "1924:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1910:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1902:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1902:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "1902:42:4"
											},
											{
												"id": 548,
												"nodeType": "PlaceholderStatement",
												"src": "1954:1:4"
											}
										]
									},
									"id": 550,
									"name": "onlyOwnerOfMedicine",
									"nameLocation": "1861:19:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "_upc",
												"nameLocation": "1886:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "1881:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1881:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1880:11:4"
									},
									"src": "1852:110:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "2090:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 555,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2108:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2108:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 557,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "2121:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2108:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2100:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2100:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "2100:28:4"
											},
											{
												"id": 561,
												"nodeType": "PlaceholderStatement",
												"src": "2138:1:4"
											}
										]
									},
									"id": 563,
									"name": "paidEnough",
									"nameLocation": "2066:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "2082:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "2077:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2077:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:13:4"
									},
									"src": "2057:89:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "2487:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_State_$451",
																"typeString": "enum SupplyChain.State"
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 568,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "2505:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
																			"typeString": "mapping(uint256 => struct SupplyChain.Item storage ref)"
																		}
																	},
																	"id": 570,
																	"indexExpression": {
																		"id": 569,
																		"name": "_upc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 565,
																		"src": "2511:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2505:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$482_storage",
																		"typeString": "struct SupplyChain.Item storage ref"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "itemState",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 477,
																"src": "2505:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 572,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2530:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$451_$",
																		"typeString": "type(enum SupplyChain.State)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Produced",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 444,
																"src": "2530:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															"src": "2505:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2497:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "2497:48:4"
											},
											{
												"id": 577,
												"nodeType": "PlaceholderStatement",
												"src": "2555:1:4"
											}
										]
									},
									"id": 579,
									"name": "produced",
									"nameLocation": "2467:8:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "_upc",
												"nameLocation": "2481:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2476:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2476:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2475:11:4"
									},
									"src": "2458:105:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "2596:74:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_State_$451",
																"typeString": "enum SupplyChain.State"
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 584,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "2614:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
																			"typeString": "mapping(uint256 => struct SupplyChain.Item storage ref)"
																		}
																	},
																	"id": 586,
																	"indexExpression": {
																		"id": 585,
																		"name": "_upc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "2620:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2614:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$482_storage",
																		"typeString": "struct SupplyChain.Item storage ref"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "itemState",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 477,
																"src": "2614:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 588,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2639:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$451_$",
																		"typeString": "type(enum SupplyChain.State)"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Tested",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 445,
																"src": "2639:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															"src": "2614:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2606:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "2606:46:4"
											},
											{
												"id": 593,
												"nodeType": "PlaceholderStatement",
												"src": "2662:1:4"
											}
										]
									},
									"id": 595,
									"name": "tested",
									"nameLocation": "2578:6:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "_upc",
												"nameLocation": "2590:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "2585:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2585:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:11:4"
									},
									"src": "2569:101:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "2715:86:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_State_$451",
																"typeString": "enum SupplyChain.State"
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 600,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "2733:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
																			"typeString": "mapping(uint256 => struct SupplyChain.Item storage ref)"
																		}
																	},
																	"id": 602,
																	"indexExpression": {
																		"id": 601,
																		"name": "_upc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "2739:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2733:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$482_storage",
																		"typeString": "struct SupplyChain.Item storage ref"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "itemState",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 477,
																"src": "2733:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 604,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2758:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$451_$",
																		"typeString": "type(enum SupplyChain.State)"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SentToVerification",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 446,
																"src": "2758:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															"src": "2733:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2725:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2725:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "2725:58:4"
											},
											{
												"id": 609,
												"nodeType": "PlaceholderStatement",
												"src": "2793:1:4"
											}
										]
									},
									"id": 611,
									"name": "sentToVerification",
									"nameLocation": "2685:18:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "_upc",
												"nameLocation": "2709:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "2704:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2704:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:11:4"
									},
									"src": "2676:125:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "2836:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_State_$451",
																"typeString": "enum SupplyChain.State"
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 616,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "2854:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
																			"typeString": "mapping(uint256 => struct SupplyChain.Item storage ref)"
																		}
																	},
																	"id": 618,
																	"indexExpression": {
																		"id": 617,
																		"name": "_upc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "2860:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2854:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$482_storage",
																		"typeString": "struct SupplyChain.Item storage ref"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "itemState",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 477,
																"src": "2854:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 620,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2879:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$451_$",
																		"typeString": "type(enum SupplyChain.State)"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Approved",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 447,
																"src": "2879:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															"src": "2854:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2846:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2846:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "2846:48:4"
											},
											{
												"id": 625,
												"nodeType": "PlaceholderStatement",
												"src": "2904:1:4"
											}
										]
									},
									"id": 627,
									"name": "approved",
									"nameLocation": "2816:8:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "_upc",
												"nameLocation": "2830:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "2825:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:11:4"
									},
									"src": "2807:105:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "2951:80:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_State_$451",
																"typeString": "enum SupplyChain.State"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 632,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "2969:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
																			"typeString": "mapping(uint256 => struct SupplyChain.Item storage ref)"
																		}
																	},
																	"id": 634,
																	"indexExpression": {
																		"id": 633,
																		"name": "_upc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 629,
																		"src": "2975:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2969:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$482_storage",
																		"typeString": "struct SupplyChain.Item storage ref"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "itemState",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 477,
																"src": "2969:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 636,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2994:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$451_$",
																		"typeString": "type(enum SupplyChain.State)"
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SentToMarket",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 448,
																"src": "2994:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															"src": "2969:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2961:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2961:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "2961:52:4"
											},
											{
												"id": 641,
												"nodeType": "PlaceholderStatement",
												"src": "3023:1:4"
											}
										]
									},
									"id": 643,
									"name": "sentToMarket",
									"nameLocation": "2927:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "_upc",
												"nameLocation": "2945:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "2940:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2940:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:11:4"
									},
									"src": "2918:113:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "3064:74:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_State_$451",
																"typeString": "enum SupplyChain.State"
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 648,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "3082:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
																			"typeString": "mapping(uint256 => struct SupplyChain.Item storage ref)"
																		}
																	},
																	"id": 650,
																	"indexExpression": {
																		"id": 649,
																		"name": "_upc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 645,
																		"src": "3088:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3082:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$482_storage",
																		"typeString": "struct SupplyChain.Item storage ref"
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "itemState",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 477,
																"src": "3082:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 652,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "3107:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$451_$",
																		"typeString": "type(enum SupplyChain.State)"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Bought",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 449,
																"src": "3107:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															"src": "3082:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3074:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3074:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "3074:46:4"
											},
											{
												"id": 657,
												"nodeType": "PlaceholderStatement",
												"src": "3130:1:4"
											}
										]
									},
									"id": 659,
									"name": "bought",
									"nameLocation": "3046:6:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "_upc",
												"nameLocation": "3058:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "3053:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3053:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3052:11:4"
									},
									"src": "3037:101:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "3174:77:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_State_$451",
																"typeString": "enum SupplyChain.State"
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 664,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "3192:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
																			"typeString": "mapping(uint256 => struct SupplyChain.Item storage ref)"
																		}
																	},
																	"id": 666,
																	"indexExpression": {
																		"id": 665,
																		"name": "_upc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "3198:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3192:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$482_storage",
																		"typeString": "struct SupplyChain.Item storage ref"
																	}
																},
																"id": 667,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "itemState",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 477,
																"src": "3192:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 668,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "3217:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$451_$",
																		"typeString": "type(enum SupplyChain.State)"
																	}
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Available",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 450,
																"src": "3217:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															"src": "3192:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3184:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3184:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "3184:49:4"
											},
											{
												"id": 673,
												"nodeType": "PlaceholderStatement",
												"src": "3243:1:4"
											}
										]
									},
									"id": 675,
									"name": "available",
									"nameLocation": "3153:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "_upc",
												"nameLocation": "3168:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "3163:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3163:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3162:11:4"
									},
									"src": "3144:107:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "3271:52:4",
										"statements": [
											{
												"expression": {
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 678,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "3281:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 679,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3289:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3289:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3281:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "3281:18:4"
											},
											{
												"expression": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 683,
														"name": "sku",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "3309:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3315:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3309:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "3309:7:4"
											}
										]
									},
									"id": 688,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3268:2:4"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3271:0:4"
									},
									"scope": 834,
									"src": "3257:66:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3396:94:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 691,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3410:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3410:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 693,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "3424:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3410:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "3406:78:4",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "3431:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 698,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 431,
																				"src": "3466:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3458:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3458:8:4",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3458:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 695,
																	"name": "selfdestruct",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967275,
																	"src": "3445:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
																		"typeString": "function (address payable)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3445:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 701,
															"nodeType": "ExpressionStatement",
															"src": "3445:28:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "41c0e1b5",
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "kill",
									"nameLocation": "3382:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3386:2:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3396:0:4"
									},
									"scope": 834,
									"src": "3373:117:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "3862:566:4",
										"statements": [
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 722,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "3872:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
																"typeString": "mapping(uint256 => struct SupplyChain.Item storage ref)"
															}
														},
														"id": 724,
														"indexExpression": {
															"id": 723,
															"name": "_upc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "3878:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3872:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$482_storage",
															"typeString": "struct SupplyChain.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 726,
																"name": "sku",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "3910:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 727,
																"name": "_upc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "3932:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 728,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3959:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3959:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 730,
																"name": "_originPharmaID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "3999:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 731,
																"name": "_originPharmaName",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "4046:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 732,
																"name": "_originPharmaInformation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "4102:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 733,
																"name": "_originPharmaCountry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "4161:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 734,
																"name": "_productName",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "4208:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"hexValue": "30",
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4248:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"expression": {
																	"id": 736,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "4274:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$451_$",
																		"typeString": "type(enum SupplyChain.State)"
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Produced",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 444,
																"src": "4274:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4323:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4315:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 738,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4315:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4315:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4356:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4348:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 742,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4348:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4348:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_enum$_State_$451",
																	"typeString": "enum SupplyChain.State"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 725,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3886:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$482_storage_ptr_$",
																"typeString": "type(struct SupplyChain.Item storage pointer)"
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"sku",
															"upc",
															"ownerID",
															"originPharmaID",
															"originPharmaName",
															"originPharmaInformation",
															"originPharmaCountry",
															"productName",
															"productPrice",
															"itemState",
															"regulatorId",
															"buyerId"
														],
														"nodeType": "FunctionCall",
														"src": "3886:483:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$482_memory_ptr",
															"typeString": "struct SupplyChain.Item memory"
														}
													},
													"src": "3872:497:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$482_storage",
														"typeString": "struct SupplyChain.Item storage ref"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "3872:497:4"
											},
											{
												"expression": {
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 749,
														"name": "sku",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "4379:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 750,
															"name": "sku",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "4385:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4391:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4385:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4379:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "4379:13:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 756,
															"name": "_upc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "4416:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 755,
														"name": "Produced",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "4407:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4407:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "EmitStatement",
												"src": "4402:19:4"
											}
										]
									},
									"functionSelector": "64c0daea",
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 720,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 719,
												"name": "onlyPharma",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "3851:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3851:10:4"
										}
									],
									"name": "produceMedicine",
									"nameLocation": "3601:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "_upc",
												"nameLocation": "3631:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "3626:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3626:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "_originPharmaID",
												"nameLocation": "3653:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "3645:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "_originPharmaName",
												"nameLocation": "3692:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "3678:31:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 710,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3678:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "_originPharmaInformation",
												"nameLocation": "3733:24:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "3719:38:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 712,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3719:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "_originPharmaCountry",
												"nameLocation": "3781:20:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "3767:34:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 714,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3767:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "_productName",
												"nameLocation": "3825:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "3811:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 716,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3811:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:227:4"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3862:0:4"
									},
									"scope": 834,
									"src": "3592:836:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "4629:80:4",
										"statements": [
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 771,
																"name": "items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "4639:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
																	"typeString": "mapping(uint256 => struct SupplyChain.Item storage ref)"
																}
															},
															"id": 773,
															"indexExpression": {
																"id": 772,
																"name": "_upc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "4645:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4639:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$482_storage",
																"typeString": "struct SupplyChain.Item storage ref"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "itemState",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4639:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$451",
															"typeString": "enum SupplyChain.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 775,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4663:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$451_$",
																"typeString": "type(enum SupplyChain.State)"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Tested",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 445,
														"src": "4663:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$451",
															"typeString": "enum SupplyChain.State"
														}
													},
													"src": "4639:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$451",
														"typeString": "enum SupplyChain.State"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "4639:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 780,
															"name": "_upc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "4697:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "Tested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "4690:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4690:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "EmitStatement",
												"src": "4685:17:4"
											}
										]
									},
									"functionSelector": "0c5484d7",
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 765,
													"name": "_upc",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 762,
													"src": "4585:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 766,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 764,
												"name": "produced",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 579,
												"src": "4576:8:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4576:14:4"
										},
										{
											"arguments": [
												{
													"id": 768,
													"name": "_upc",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 762,
													"src": "4619:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 769,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 767,
												"name": "onlyOwnerOfMedicine",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "4599:19:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4599:25:4"
										}
									],
									"name": "testMedicine",
									"nameLocation": "4529:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "_upc",
												"nameLocation": "4547:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "4542:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4542:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4541:11:4"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4629:0:4"
									},
									"scope": 834,
									"src": "4520:189:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "5007:275:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 801,
																	"name": "_regulatorId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "5037:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 800,
																"name": "isRegulator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "5025:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5025:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546869732061646472657373206973206e6f74206120526567756c61746f72",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5052:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72",
																"typeString": "literal_string \"This address is not a Regulator\""
															},
															"value": "This address is not a Regulator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d1c27009db39bfb6531572f1094ee33075b8cf96256c3556f87c7f83e96ae72",
																"typeString": "literal_string \"This address is not a Regulator\""
															}
														],
														"id": 799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5017:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5017:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "5017:69:4"
											},
											{
												"expression": {
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 806,
																"name": "items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "5096:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
																	"typeString": "mapping(uint256 => struct SupplyChain.Item storage ref)"
																}
															},
															"id": 808,
															"indexExpression": {
																"id": 807,
																"name": "_upc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "5102:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5096:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$482_storage",
																"typeString": "struct SupplyChain.Item storage ref"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "regulatorId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 479,
														"src": "5096:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 810,
														"name": "_regulatorId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "5122:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5096:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "5096:38:4"
											},
											{
												"expression": {
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 813,
																"name": "items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "5144:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
																	"typeString": "mapping(uint256 => struct SupplyChain.Item storage ref)"
																}
															},
															"id": 815,
															"indexExpression": {
																"id": 814,
																"name": "_upc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "5150:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5144:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$482_storage",
																"typeString": "struct SupplyChain.Item storage ref"
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "itemState",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "5144:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$451",
															"typeString": "enum SupplyChain.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 817,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "5168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$451_$",
																"typeString": "type(enum SupplyChain.State)"
															}
														},
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "SentToVerification",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 446,
														"src": "5168:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$451",
															"typeString": "enum SupplyChain.State"
														}
													},
													"src": "5144:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$451",
														"typeString": "enum SupplyChain.State"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "5144:48:4"
											},
											{
												"expression": {
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 821,
																"name": "items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "5202:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$482_storage_$",
																	"typeString": "mapping(uint256 => struct SupplyChain.Item storage ref)"
																}
															},
															"id": 823,
															"indexExpression": {
																"id": 822,
																"name": "_upc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "5208:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5202:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$482_storage",
																"typeString": "struct SupplyChain.Item storage ref"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "ownerID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 462,
														"src": "5202:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 825,
														"name": "_regulatorId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "5224:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5202:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "5202:34:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 829,
															"name": "_upc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "5270:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 828,
														"name": "SentToVerification",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "5251:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5251:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "EmitStatement",
												"src": "5246:29:4"
											}
										]
									},
									"functionSelector": "8e2b65d7",
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 791,
													"name": "_upc",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 786,
													"src": "4944:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 792,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 790,
												"name": "tested",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 595,
												"src": "4937:6:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4937:12:4"
										},
										{
											"id": 794,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 793,
												"name": "onlyPharma",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "4958:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4958:10:4"
										},
										{
											"arguments": [
												{
													"id": 796,
													"name": "_upc",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 786,
													"src": "4997:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 797,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 795,
												"name": "onlyOwnerOfMedicine",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "4977:19:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4977:25:4"
										}
									],
									"name": "sendToRegulation",
									"nameLocation": "4864:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "_upc",
												"nameLocation": "4886:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "4881:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4881:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "_regulatorId",
												"nameLocation": "4900:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "4892:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4880:33:4"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5007:0:4"
									},
									"scope": 834,
									"src": "4855:427:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 835,
							"src": "110:5174:4",
							"usedErrors": []
						}
					],
					"src": "0:5285:4"
				},
				"id": 4
			}
		}
	}
}